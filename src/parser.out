Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON goto_main clase vars funcion main
Rule 2     goto_main -> e
Rule 3     main -> MAIN LPAR RPAR main_start bloque
Rule 4     main_start -> e
Rule 5     clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase
Rule 6     clase -> e
Rule 7     inicializar_clase -> e
Rule 8     clase1 -> LT INHERITS ID GT
Rule 9     clase1 -> e
Rule 10    clase2 -> ATTRIBUTES declaracion atributos asign
Rule 11    clase2 -> e
Rule 12    atributos -> declaracion atributos
Rule 13    atributos -> e
Rule 14    asign -> asignacion asign
Rule 15    asign -> e
Rule 16    clase3 -> METHODS funcion metodos
Rule 17    clase3 -> e
Rule 18    metodos -> funcion metodos
Rule 19    metodos -> e
Rule 20    vars -> VAR declaracion declaraciones
Rule 21    vars -> e
Rule 22    declaraciones -> declaracion declaraciones
Rule 23    declaraciones -> e
Rule 24    declaracion -> declaracion1 COLON declaracion5 SEMICOLON
Rule 25    declaracion1 -> ID declaracion2 declaracion4
Rule 26    declaracion2 -> LSBRAC CTEI RSBRAC declaracion3
Rule 27    declaracion2 -> e
Rule 28    declaracion3 -> LSBRAC CTEI RSBRAC
Rule 29    declaracion3 -> e
Rule 30    declaracion4 -> COMMA declaracion1
Rule 31    declaracion4 -> e
Rule 32    declaracion5 -> tipo
Rule 33    declaracion5 -> ID
Rule 34    funcion -> funcion1 FUNCTION ID inicio LPAR funcion2 RPAR bloque funcion
Rule 35    funcion -> e
Rule 36    funcion1 -> tipo
Rule 37    funcion1 -> VOID funcion_void
Rule 38    funcion_void -> e
Rule 39    inicio -> e
Rule 40    funcion2 -> ID COLON tipo funcion3
Rule 41    funcion2 -> e
Rule 42    funcion3 -> COMMA ID COLON tipo funcion3
Rule 43    funcion3 -> e
Rule 44    tipo -> INT
Rule 45    tipo -> FLOAT
Rule 46    tipo -> STRING
Rule 47    tipo -> BOOL
Rule 48    bloque -> LCBRAC estatutos RCBRAC
Rule 49    estatutos -> estatuto estatutos
Rule 50    estatutos -> e
Rule 51    estatuto -> asignacion
Rule 52    estatuto -> condicion
Rule 53    estatuto -> llamada
Rule 54    estatuto -> leer
Rule 55    estatuto -> escribir
Rule 56    estatuto -> ciclo_w
Rule 57    estatuto -> ciclo_f
Rule 58    estatuto -> regresar
Rule 59    asignacion -> variable EQ expresion SEMICOLON
Rule 60    variable -> ID variable1 variable2
Rule 61    variable1 -> DOT ID
Rule 62    variable1 -> e
Rule 63    variable2 -> LSBRAC expresion RSBRAC variable3
Rule 64    variable2 -> e
Rule 65    variable3 -> LSBRAC expresion RSBRAC
Rule 66    variable3 -> e
Rule 67    condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill
Rule 68    gotoF -> e
Rule 69    fill -> e
Rule 70    condicion1 -> ELSE goto bloque
Rule 71    condicion1 -> e
Rule 72    goto -> e
Rule 73    llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
Rule 74    validar_id -> ID
Rule 75    llamada1 -> DOT ID
Rule 76    llamada1 -> e
Rule 77    llamada2 -> expresion cuad_param llamada3
Rule 78    llamada2 -> e
Rule 79    cuad_param -> e
Rule 80    llamada3 -> COMMA expresion cuad_param llamada3
Rule 81    llamada3 -> e
Rule 82    leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON
Rule 83    add_read -> e
Rule 84    escribir -> WRITE LPAR escribir1 RPAR SEMICOLON
Rule 85    escribir1 -> texto add_print generar_cuadr escribir2
Rule 86    escribir1 -> expresion add_print generar_cuadr escribir2
Rule 87    add_print -> e
Rule 88    escribir2 -> COMMA escribir1
Rule 89    escribir2 -> e
Rule 90    texto -> CTESTR
Rule 91    ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while
Rule 92    push_while -> e
Rule 93    return_while -> e
Rule 94    ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go
Rule 95    asign_var -> e
Rule 96    asign_exp -> e
Rule 97    pop_for -> e
Rule 98    migaja -> e
Rule 99    update_fill_go -> push_plus push1 pop_operfor asign_var
Rule 100   push1 -> e
Rule 101   pop_operfor -> e
Rule 102   regresar -> RETURN expresion SEMICOLON
Rule 103   expresion -> a_exp exp1
Rule 104   exp1 -> OR push_or a_exp pop_operador exp1
Rule 105   exp1 -> e
Rule 106   push_or -> e
Rule 107   pop_operador -> e
Rule 108   a_exp -> b_exp exp2
Rule 109   exp2 -> AND push_and b_exp pop_operador exp2
Rule 110   exp2 -> e
Rule 111   push_and -> e
Rule 112   b_exp -> c_exp exp3
Rule 113   exp3 -> LT push_lt c_exp pop_operador exp3
Rule 114   exp3 -> GT push_gt c_exp pop_operador exp3
Rule 115   exp3 -> COMP push_comp c_exp pop_operador exp3
Rule 116   exp3 -> NOTEQ push_noteq c_exp pop_operador exp3
Rule 117   exp3 -> e
Rule 118   push_lt -> e
Rule 119   push_gt -> e
Rule 120   push_comp -> e
Rule 121   push_noteq -> e
Rule 122   c_exp -> d_exp exp4
Rule 123   exp4 -> PLUS push_plus d_exp pop_operador exp4
Rule 124   exp4 -> MINUS push_minus d_exp pop_operador exp4
Rule 125   exp4 -> e
Rule 126   push_plus -> e
Rule 127   push_minus -> e
Rule 128   d_exp -> e_exp exp5
Rule 129   exp5 -> MULT push_mult e_exp pop_operador exp5
Rule 130   exp5 -> DIV push_div e_exp pop_operador exp5
Rule 131   exp5 -> e
Rule 132   push_mult -> e
Rule 133   push_div -> e
Rule 134   e_exp -> LPAR expresion RPAR
Rule 135   e_exp -> var_cte
Rule 136   e_exp -> variable
Rule 137   e_exp -> llamada
Rule 138   var_cte -> CTEI ctei
Rule 139   var_cte -> CTEF ctef
Rule 140   var_cte -> CTESTR ctestr
Rule 141   var_cte -> CTEB cteb
Rule 142   ctei -> e
Rule 143   ctef -> e
Rule 144   ctestr -> e
Rule 145   cteb -> e
Rule 146   generar_cuadr -> e
Rule 147   e -> <empty>

Terminals, with rules where they appear

AND                  : 109
ATTRIBUTES           : 10
BOOL                 : 47
CLASS                : 5
COLON                : 24 40 42
COMMA                : 30 42 80 88
COMP                 : 115
CTEB                 : 141
CTEF                 : 139
CTEI                 : 26 28 138
CTESTR               : 90 140
DIV                  : 130
DO                   : 91 94
DOT                  : 61 75
ELSE                 : 70
EQ                   : 59 94
FLOAT                : 45
FROM                 : 94
FUNCTION             : 34
GT                   : 8 114
ID                   : 1 5 8 25 33 34 40 42 60 61 74 75
IF                   : 67
INHERITS             : 8
INT                  : 44
LCBRAC               : 5 48
LPAR                 : 3 34 67 73 82 84 91 94 134
LSBRAC               : 26 28 63 65
LT                   : 8 113
MAIN                 : 3
METHODS              : 16
MINUS                : 124
MULT                 : 129
NOTEQ                : 116
OR                   : 104
PLUS                 : 123
PROGRAM              : 1
RCBRAC               : 5 48
READ                 : 82
RETURN               : 102
RPAR                 : 3 34 67 73 82 84 91 94 134
RSBRAC               : 26 28 63 65
SEMICOLON            : 1 24 59 73 82 84 102
STRING               : 46
TO                   : 94
VAR                  : 20
VOID                 : 37
WHILE                : 91
WRITE                : 84
error                : 

Nonterminals, with rules where they appear

a_exp                : 103 104
add_print            : 85 86
add_read             : 82
asign                : 10 14
asign_exp            : 94
asign_var            : 94 99
asignacion           : 14 51
atributos            : 10 12
b_exp                : 108 109
bloque               : 3 34 67 70 91 94
c_exp                : 112 113 114 115 116
ciclo_f              : 57
ciclo_w              : 56
clase                : 1 5
clase1               : 5
clase2               : 5
clase3               : 5
condicion            : 52
condicion1           : 67
cteb                 : 141
ctef                 : 139
ctei                 : 138
ctestr               : 140
cuad_param           : 77 80
d_exp                : 122 123 124
declaracion          : 10 12 20 22
declaracion1         : 24 30
declaracion2         : 25
declaracion3         : 26
declaracion4         : 25
declaracion5         : 24
declaraciones        : 20 22
e                    : 2 4 6 7 9 11 13 15 17 19 21 23 27 29 31 35 38 39 41 43 50 62 64 66 68 69 71 72 76 78 79 81 83 87 89 92 93 95 96 97 98 100 101 105 106 107 110 111 117 118 119 120 121 125 126 127 131 132 133 142 143 144 145 146
e_exp                : 128 129 130
escribir             : 55
escribir1            : 84 88
escribir2            : 85 86
estatuto             : 49
estatutos            : 48 49
exp1                 : 103 104
exp2                 : 108 109
exp3                 : 112 113 114 115 116
exp4                 : 122 123 124
exp5                 : 128 129 130
expresion            : 59 63 65 67 77 80 86 91 94 94 102 134
fill                 : 67
funcion              : 1 16 18 34
funcion1             : 34
funcion2             : 34
funcion3             : 40 42
funcion_void         : 37
generar_cuadr        : 82 85 86
goto                 : 70
gotoF                : 67 91 94
goto_main            : 1
inicializar_clase    : 5
inicio               : 34
leer                 : 54
llamada              : 53 137
llamada1             : 73
llamada2             : 73
llamada3             : 77 80
main                 : 1
main_start           : 3
metodos              : 16 18
migaja               : 94
pop_for              : 94
pop_operador         : 104 109 113 114 115 116 123 124 129 130
pop_operfor          : 99
programa             : 0
push1                : 99
push_and             : 109
push_comp            : 115
push_div             : 130
push_gt              : 114
push_lt              : 94 113
push_minus           : 124
push_mult            : 129
push_noteq           : 116
push_or              : 104
push_plus            : 99 123
push_while           : 91
regresar             : 58
return_while         : 91
texto                : 85
tipo                 : 32 36 40 42
update_fill_go       : 94
validar_id           : 73
var_cte              : 135
variable             : 59 82 94 136
variable1            : 60
variable2            : 60
variable3            : 63
vars                 : 1

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON goto_main clase vars funcion main

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOLON goto_main clase vars funcion main

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOLON goto_main clase vars funcion main

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . goto_main clase vars funcion main
    (2) goto_main -> . e
    (147) e -> .

    CLASS           reduce using rule 147 (e -> .)
    VAR             reduce using rule 147 (e -> .)
    VOID            reduce using rule 147 (e -> .)
    INT             reduce using rule 147 (e -> .)
    FLOAT           reduce using rule 147 (e -> .)
    STRING          reduce using rule 147 (e -> .)
    BOOL            reduce using rule 147 (e -> .)
    MAIN            reduce using rule 147 (e -> .)

    goto_main                      shift and go to state 5
    e                              shift and go to state 6

state 5

    (1) programa -> PROGRAM ID SEMICOLON goto_main . clase vars funcion main
    (5) clase -> . CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase
    (6) clase -> . e
    (147) e -> .

    CLASS           shift and go to state 8
    VAR             reduce using rule 147 (e -> .)
    VOID            reduce using rule 147 (e -> .)
    INT             reduce using rule 147 (e -> .)
    FLOAT           reduce using rule 147 (e -> .)
    STRING          reduce using rule 147 (e -> .)
    BOOL            reduce using rule 147 (e -> .)
    MAIN            reduce using rule 147 (e -> .)

    clase                          shift and go to state 7
    e                              shift and go to state 9

state 6

    (2) goto_main -> e .

    CLASS           reduce using rule 2 (goto_main -> e .)
    VAR             reduce using rule 2 (goto_main -> e .)
    VOID            reduce using rule 2 (goto_main -> e .)
    INT             reduce using rule 2 (goto_main -> e .)
    FLOAT           reduce using rule 2 (goto_main -> e .)
    STRING          reduce using rule 2 (goto_main -> e .)
    BOOL            reduce using rule 2 (goto_main -> e .)
    MAIN            reduce using rule 2 (goto_main -> e .)


state 7

    (1) programa -> PROGRAM ID SEMICOLON goto_main clase . vars funcion main
    (20) vars -> . VAR declaracion declaraciones
    (21) vars -> . e
    (147) e -> .

    VAR             shift and go to state 11
    VOID            reduce using rule 147 (e -> .)
    INT             reduce using rule 147 (e -> .)
    FLOAT           reduce using rule 147 (e -> .)
    STRING          reduce using rule 147 (e -> .)
    BOOL            reduce using rule 147 (e -> .)
    MAIN            reduce using rule 147 (e -> .)

    vars                           shift and go to state 10
    e                              shift and go to state 12

state 8

    (5) clase -> CLASS . inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase
    (7) inicializar_clase -> . e
    (147) e -> .

    ID              reduce using rule 147 (e -> .)

    inicializar_clase              shift and go to state 13
    e                              shift and go to state 14

state 9

    (6) clase -> e .

    VAR             reduce using rule 6 (clase -> e .)
    VOID            reduce using rule 6 (clase -> e .)
    INT             reduce using rule 6 (clase -> e .)
    FLOAT           reduce using rule 6 (clase -> e .)
    STRING          reduce using rule 6 (clase -> e .)
    BOOL            reduce using rule 6 (clase -> e .)
    MAIN            reduce using rule 6 (clase -> e .)


state 10

    (1) programa -> PROGRAM ID SEMICOLON goto_main clase vars . funcion main
    (34) funcion -> . funcion1 FUNCTION ID inicio LPAR funcion2 RPAR bloque funcion
    (35) funcion -> . e
    (36) funcion1 -> . tipo
    (37) funcion1 -> . VOID funcion_void
    (147) e -> .
    (44) tipo -> . INT
    (45) tipo -> . FLOAT
    (46) tipo -> . STRING
    (47) tipo -> . BOOL

    VOID            shift and go to state 19
    MAIN            reduce using rule 147 (e -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

    funcion                        shift and go to state 15
    funcion1                       shift and go to state 16
    e                              shift and go to state 17
    tipo                           shift and go to state 18

state 11

    (20) vars -> VAR . declaracion declaraciones
    (24) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (25) declaracion1 -> . ID declaracion2 declaracion4

    ID              shift and go to state 26

    declaracion                    shift and go to state 24
    declaracion1                   shift and go to state 25

state 12

    (21) vars -> e .

    VOID            reduce using rule 21 (vars -> e .)
    INT             reduce using rule 21 (vars -> e .)
    FLOAT           reduce using rule 21 (vars -> e .)
    STRING          reduce using rule 21 (vars -> e .)
    BOOL            reduce using rule 21 (vars -> e .)
    MAIN            reduce using rule 21 (vars -> e .)


state 13

    (5) clase -> CLASS inicializar_clase . ID clase1 LCBRAC clase2 clase3 RCBRAC clase

    ID              shift and go to state 27


state 14

    (7) inicializar_clase -> e .

    ID              reduce using rule 7 (inicializar_clase -> e .)


state 15

    (1) programa -> PROGRAM ID SEMICOLON goto_main clase vars funcion . main
    (3) main -> . MAIN LPAR RPAR main_start bloque

    MAIN            shift and go to state 29

    main                           shift and go to state 28

state 16

    (34) funcion -> funcion1 . FUNCTION ID inicio LPAR funcion2 RPAR bloque funcion

    FUNCTION        shift and go to state 30


state 17

    (35) funcion -> e .

    MAIN            reduce using rule 35 (funcion -> e .)
    VOID            reduce using rule 35 (funcion -> e .)
    INT             reduce using rule 35 (funcion -> e .)
    FLOAT           reduce using rule 35 (funcion -> e .)
    STRING          reduce using rule 35 (funcion -> e .)
    BOOL            reduce using rule 35 (funcion -> e .)
    RCBRAC          reduce using rule 35 (funcion -> e .)


state 18

    (36) funcion1 -> tipo .

    FUNCTION        reduce using rule 36 (funcion1 -> tipo .)


state 19

    (37) funcion1 -> VOID . funcion_void
    (38) funcion_void -> . e
    (147) e -> .

    FUNCTION        reduce using rule 147 (e -> .)

    funcion_void                   shift and go to state 31
    e                              shift and go to state 32

state 20

    (44) tipo -> INT .

    FUNCTION        reduce using rule 44 (tipo -> INT .)
    SEMICOLON       reduce using rule 44 (tipo -> INT .)
    COMMA           reduce using rule 44 (tipo -> INT .)
    RPAR            reduce using rule 44 (tipo -> INT .)


state 21

    (45) tipo -> FLOAT .

    FUNCTION        reduce using rule 45 (tipo -> FLOAT .)
    SEMICOLON       reduce using rule 45 (tipo -> FLOAT .)
    COMMA           reduce using rule 45 (tipo -> FLOAT .)
    RPAR            reduce using rule 45 (tipo -> FLOAT .)


state 22

    (46) tipo -> STRING .

    FUNCTION        reduce using rule 46 (tipo -> STRING .)
    SEMICOLON       reduce using rule 46 (tipo -> STRING .)
    COMMA           reduce using rule 46 (tipo -> STRING .)
    RPAR            reduce using rule 46 (tipo -> STRING .)


state 23

    (47) tipo -> BOOL .

    FUNCTION        reduce using rule 47 (tipo -> BOOL .)
    SEMICOLON       reduce using rule 47 (tipo -> BOOL .)
    COMMA           reduce using rule 47 (tipo -> BOOL .)
    RPAR            reduce using rule 47 (tipo -> BOOL .)


state 24

    (20) vars -> VAR declaracion . declaraciones
    (22) declaraciones -> . declaracion declaraciones
    (23) declaraciones -> . e
    (24) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (147) e -> .
    (25) declaracion1 -> . ID declaracion2 declaracion4

    VOID            reduce using rule 147 (e -> .)
    INT             reduce using rule 147 (e -> .)
    FLOAT           reduce using rule 147 (e -> .)
    STRING          reduce using rule 147 (e -> .)
    BOOL            reduce using rule 147 (e -> .)
    MAIN            reduce using rule 147 (e -> .)
    ID              shift and go to state 26

    declaracion                    shift and go to state 33
    declaraciones                  shift and go to state 34
    e                              shift and go to state 35
    declaracion1                   shift and go to state 25

state 25

    (24) declaracion -> declaracion1 . COLON declaracion5 SEMICOLON

    COLON           shift and go to state 36


state 26

    (25) declaracion1 -> ID . declaracion2 declaracion4
    (26) declaracion2 -> . LSBRAC CTEI RSBRAC declaracion3
    (27) declaracion2 -> . e
    (147) e -> .

    LSBRAC          shift and go to state 38
    COMMA           reduce using rule 147 (e -> .)
    COLON           reduce using rule 147 (e -> .)

    declaracion2                   shift and go to state 37
    e                              shift and go to state 39

state 27

    (5) clase -> CLASS inicializar_clase ID . clase1 LCBRAC clase2 clase3 RCBRAC clase
    (8) clase1 -> . LT INHERITS ID GT
    (9) clase1 -> . e
    (147) e -> .

    LT              shift and go to state 41
    LCBRAC          reduce using rule 147 (e -> .)

    clase1                         shift and go to state 40
    e                              shift and go to state 42

state 28

    (1) programa -> PROGRAM ID SEMICOLON goto_main clase vars funcion main .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON goto_main clase vars funcion main .)


state 29

    (3) main -> MAIN . LPAR RPAR main_start bloque

    LPAR            shift and go to state 43


state 30

    (34) funcion -> funcion1 FUNCTION . ID inicio LPAR funcion2 RPAR bloque funcion

    ID              shift and go to state 44


state 31

    (37) funcion1 -> VOID funcion_void .

    FUNCTION        reduce using rule 37 (funcion1 -> VOID funcion_void .)


state 32

    (38) funcion_void -> e .

    FUNCTION        reduce using rule 38 (funcion_void -> e .)


state 33

    (22) declaraciones -> declaracion . declaraciones
    (22) declaraciones -> . declaracion declaraciones
    (23) declaraciones -> . e
    (24) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (147) e -> .
    (25) declaracion1 -> . ID declaracion2 declaracion4

    VOID            reduce using rule 147 (e -> .)
    INT             reduce using rule 147 (e -> .)
    FLOAT           reduce using rule 147 (e -> .)
    STRING          reduce using rule 147 (e -> .)
    BOOL            reduce using rule 147 (e -> .)
    MAIN            reduce using rule 147 (e -> .)
    ID              shift and go to state 26

    declaracion                    shift and go to state 33
    declaraciones                  shift and go to state 45
    e                              shift and go to state 35
    declaracion1                   shift and go to state 25

state 34

    (20) vars -> VAR declaracion declaraciones .

    VOID            reduce using rule 20 (vars -> VAR declaracion declaraciones .)
    INT             reduce using rule 20 (vars -> VAR declaracion declaraciones .)
    FLOAT           reduce using rule 20 (vars -> VAR declaracion declaraciones .)
    STRING          reduce using rule 20 (vars -> VAR declaracion declaraciones .)
    BOOL            reduce using rule 20 (vars -> VAR declaracion declaraciones .)
    MAIN            reduce using rule 20 (vars -> VAR declaracion declaraciones .)


state 35

    (23) declaraciones -> e .

    VOID            reduce using rule 23 (declaraciones -> e .)
    INT             reduce using rule 23 (declaraciones -> e .)
    FLOAT           reduce using rule 23 (declaraciones -> e .)
    STRING          reduce using rule 23 (declaraciones -> e .)
    BOOL            reduce using rule 23 (declaraciones -> e .)
    MAIN            reduce using rule 23 (declaraciones -> e .)


state 36

    (24) declaracion -> declaracion1 COLON . declaracion5 SEMICOLON
    (32) declaracion5 -> . tipo
    (33) declaracion5 -> . ID
    (44) tipo -> . INT
    (45) tipo -> . FLOAT
    (46) tipo -> . STRING
    (47) tipo -> . BOOL

    ID              shift and go to state 48
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

    declaracion5                   shift and go to state 46
    tipo                           shift and go to state 47

state 37

    (25) declaracion1 -> ID declaracion2 . declaracion4
    (30) declaracion4 -> . COMMA declaracion1
    (31) declaracion4 -> . e
    (147) e -> .

    COMMA           shift and go to state 50
    COLON           reduce using rule 147 (e -> .)

    declaracion4                   shift and go to state 49
    e                              shift and go to state 51

state 38

    (26) declaracion2 -> LSBRAC . CTEI RSBRAC declaracion3

    CTEI            shift and go to state 52


state 39

    (27) declaracion2 -> e .

    COMMA           reduce using rule 27 (declaracion2 -> e .)
    COLON           reduce using rule 27 (declaracion2 -> e .)


state 40

    (5) clase -> CLASS inicializar_clase ID clase1 . LCBRAC clase2 clase3 RCBRAC clase

    LCBRAC          shift and go to state 53


state 41

    (8) clase1 -> LT . INHERITS ID GT

    INHERITS        shift and go to state 54


state 42

    (9) clase1 -> e .

    LCBRAC          reduce using rule 9 (clase1 -> e .)


state 43

    (3) main -> MAIN LPAR . RPAR main_start bloque

    RPAR            shift and go to state 55


state 44

    (34) funcion -> funcion1 FUNCTION ID . inicio LPAR funcion2 RPAR bloque funcion
    (39) inicio -> . e
    (147) e -> .

    LPAR            reduce using rule 147 (e -> .)

    inicio                         shift and go to state 56
    e                              shift and go to state 57

state 45

    (22) declaraciones -> declaracion declaraciones .

    VOID            reduce using rule 22 (declaraciones -> declaracion declaraciones .)
    INT             reduce using rule 22 (declaraciones -> declaracion declaraciones .)
    FLOAT           reduce using rule 22 (declaraciones -> declaracion declaraciones .)
    STRING          reduce using rule 22 (declaraciones -> declaracion declaraciones .)
    BOOL            reduce using rule 22 (declaraciones -> declaracion declaraciones .)
    MAIN            reduce using rule 22 (declaraciones -> declaracion declaraciones .)


state 46

    (24) declaracion -> declaracion1 COLON declaracion5 . SEMICOLON

    SEMICOLON       shift and go to state 58


state 47

    (32) declaracion5 -> tipo .

    SEMICOLON       reduce using rule 32 (declaracion5 -> tipo .)


state 48

    (33) declaracion5 -> ID .

    SEMICOLON       reduce using rule 33 (declaracion5 -> ID .)


state 49

    (25) declaracion1 -> ID declaracion2 declaracion4 .

    COLON           reduce using rule 25 (declaracion1 -> ID declaracion2 declaracion4 .)


state 50

    (30) declaracion4 -> COMMA . declaracion1
    (25) declaracion1 -> . ID declaracion2 declaracion4

    ID              shift and go to state 26

    declaracion1                   shift and go to state 59

state 51

    (31) declaracion4 -> e .

    COLON           reduce using rule 31 (declaracion4 -> e .)


state 52

    (26) declaracion2 -> LSBRAC CTEI . RSBRAC declaracion3

    RSBRAC          shift and go to state 60


state 53

    (5) clase -> CLASS inicializar_clase ID clase1 LCBRAC . clase2 clase3 RCBRAC clase
    (10) clase2 -> . ATTRIBUTES declaracion atributos asign
    (11) clase2 -> . e
    (147) e -> .

    ATTRIBUTES      shift and go to state 62
    METHODS         reduce using rule 147 (e -> .)
    RCBRAC          reduce using rule 147 (e -> .)

    clase2                         shift and go to state 61
    e                              shift and go to state 63

state 54

    (8) clase1 -> LT INHERITS . ID GT

    ID              shift and go to state 64


state 55

    (3) main -> MAIN LPAR RPAR . main_start bloque
    (4) main_start -> . e
    (147) e -> .

    LCBRAC          reduce using rule 147 (e -> .)

    main_start                     shift and go to state 65
    e                              shift and go to state 66

state 56

    (34) funcion -> funcion1 FUNCTION ID inicio . LPAR funcion2 RPAR bloque funcion

    LPAR            shift and go to state 67


state 57

    (39) inicio -> e .

    LPAR            reduce using rule 39 (inicio -> e .)


state 58

    (24) declaracion -> declaracion1 COLON declaracion5 SEMICOLON .

    ID              reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    VOID            reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    INT             reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    FLOAT           reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    STRING          reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    BOOL            reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    MAIN            reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    METHODS         reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    RCBRAC          reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)


state 59

    (30) declaracion4 -> COMMA declaracion1 .

    COLON           reduce using rule 30 (declaracion4 -> COMMA declaracion1 .)


state 60

    (26) declaracion2 -> LSBRAC CTEI RSBRAC . declaracion3
    (28) declaracion3 -> . LSBRAC CTEI RSBRAC
    (29) declaracion3 -> . e
    (147) e -> .

    LSBRAC          shift and go to state 68
    COMMA           reduce using rule 147 (e -> .)
    COLON           reduce using rule 147 (e -> .)

    declaracion3                   shift and go to state 69
    e                              shift and go to state 70

state 61

    (5) clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 . clase3 RCBRAC clase
    (16) clase3 -> . METHODS funcion metodos
    (17) clase3 -> . e
    (147) e -> .

    METHODS         shift and go to state 72
    RCBRAC          reduce using rule 147 (e -> .)

    clase3                         shift and go to state 71
    e                              shift and go to state 73

state 62

    (10) clase2 -> ATTRIBUTES . declaracion atributos asign
    (24) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (25) declaracion1 -> . ID declaracion2 declaracion4

    ID              shift and go to state 26

    declaracion                    shift and go to state 74
    declaracion1                   shift and go to state 25

state 63

    (11) clase2 -> e .

    METHODS         reduce using rule 11 (clase2 -> e .)
    RCBRAC          reduce using rule 11 (clase2 -> e .)


state 64

    (8) clase1 -> LT INHERITS ID . GT

    GT              shift and go to state 75


state 65

    (3) main -> MAIN LPAR RPAR main_start . bloque
    (48) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 77

    bloque                         shift and go to state 76

state 66

    (4) main_start -> e .

    LCBRAC          reduce using rule 4 (main_start -> e .)


state 67

    (34) funcion -> funcion1 FUNCTION ID inicio LPAR . funcion2 RPAR bloque funcion
    (40) funcion2 -> . ID COLON tipo funcion3
    (41) funcion2 -> . e
    (147) e -> .

    ID              shift and go to state 78
    RPAR            reduce using rule 147 (e -> .)

    funcion2                       shift and go to state 79
    e                              shift and go to state 80

state 68

    (28) declaracion3 -> LSBRAC . CTEI RSBRAC

    CTEI            shift and go to state 81


state 69

    (26) declaracion2 -> LSBRAC CTEI RSBRAC declaracion3 .

    COMMA           reduce using rule 26 (declaracion2 -> LSBRAC CTEI RSBRAC declaracion3 .)
    COLON           reduce using rule 26 (declaracion2 -> LSBRAC CTEI RSBRAC declaracion3 .)


state 70

    (29) declaracion3 -> e .

    COMMA           reduce using rule 29 (declaracion3 -> e .)
    COLON           reduce using rule 29 (declaracion3 -> e .)


state 71

    (5) clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 . RCBRAC clase

    RCBRAC          shift and go to state 82


state 72

    (16) clase3 -> METHODS . funcion metodos
    (34) funcion -> . funcion1 FUNCTION ID inicio LPAR funcion2 RPAR bloque funcion
    (35) funcion -> . e
    (36) funcion1 -> . tipo
    (37) funcion1 -> . VOID funcion_void
    (147) e -> .
    (44) tipo -> . INT
    (45) tipo -> . FLOAT
    (46) tipo -> . STRING
    (47) tipo -> . BOOL

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    VOID            shift and go to state 19
    RCBRAC          reduce using rule 147 (e -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

  ! VOID            [ reduce using rule 147 (e -> .) ]
  ! INT             [ reduce using rule 147 (e -> .) ]
  ! FLOAT           [ reduce using rule 147 (e -> .) ]
  ! STRING          [ reduce using rule 147 (e -> .) ]
  ! BOOL            [ reduce using rule 147 (e -> .) ]

    funcion                        shift and go to state 83
    funcion1                       shift and go to state 16
    e                              shift and go to state 17
    tipo                           shift and go to state 18

state 73

    (17) clase3 -> e .

    RCBRAC          reduce using rule 17 (clase3 -> e .)


state 74

    (10) clase2 -> ATTRIBUTES declaracion . atributos asign
    (12) atributos -> . declaracion atributos
    (13) atributos -> . e
    (24) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (147) e -> .
    (25) declaracion1 -> . ID declaracion2 declaracion4

  ! shift/reduce conflict for ID resolved as shift
    METHODS         reduce using rule 147 (e -> .)
    RCBRAC          reduce using rule 147 (e -> .)
    ID              shift and go to state 26

  ! ID              [ reduce using rule 147 (e -> .) ]

    declaracion                    shift and go to state 84
    atributos                      shift and go to state 85
    e                              shift and go to state 86
    declaracion1                   shift and go to state 25

state 75

    (8) clase1 -> LT INHERITS ID GT .

    LCBRAC          reduce using rule 8 (clase1 -> LT INHERITS ID GT .)


state 76

    (3) main -> MAIN LPAR RPAR main_start bloque .

    $end            reduce using rule 3 (main -> MAIN LPAR RPAR main_start bloque .)


state 77

    (48) bloque -> LCBRAC . estatutos RCBRAC
    (49) estatutos -> . estatuto estatutos
    (50) estatutos -> . e
    (51) estatuto -> . asignacion
    (52) estatuto -> . condicion
    (53) estatuto -> . llamada
    (54) estatuto -> . leer
    (55) estatuto -> . escribir
    (56) estatuto -> . ciclo_w
    (57) estatuto -> . ciclo_f
    (58) estatuto -> . regresar
    (147) e -> .
    (59) asignacion -> . variable EQ expresion SEMICOLON
    (67) condicion -> . IF LPAR expresion RPAR gotoF bloque condicion1 fill
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (82) leer -> . READ LPAR variable add_read generar_cuadr RPAR SEMICOLON
    (84) escribir -> . WRITE LPAR escribir1 RPAR SEMICOLON
    (91) ciclo_w -> . WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while
    (94) ciclo_f -> . FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go
    (102) regresar -> . RETURN expresion SEMICOLON
    (60) variable -> . ID variable1 variable2
    (74) validar_id -> . ID

    RCBRAC          reduce using rule 147 (e -> .)
    IF              shift and go to state 99
    READ            shift and go to state 101
    WRITE           shift and go to state 102
    WHILE           shift and go to state 103
    FROM            shift and go to state 104
    RETURN          shift and go to state 105
    ID              shift and go to state 106

    estatutos                      shift and go to state 87
    estatuto                       shift and go to state 88
    e                              shift and go to state 89
    asignacion                     shift and go to state 90
    condicion                      shift and go to state 91
    llamada                        shift and go to state 92
    leer                           shift and go to state 93
    escribir                       shift and go to state 94
    ciclo_w                        shift and go to state 95
    ciclo_f                        shift and go to state 96
    regresar                       shift and go to state 97
    variable                       shift and go to state 98
    validar_id                     shift and go to state 100

state 78

    (40) funcion2 -> ID . COLON tipo funcion3

    COLON           shift and go to state 107


state 79

    (34) funcion -> funcion1 FUNCTION ID inicio LPAR funcion2 . RPAR bloque funcion

    RPAR            shift and go to state 108


state 80

    (41) funcion2 -> e .

    RPAR            reduce using rule 41 (funcion2 -> e .)


state 81

    (28) declaracion3 -> LSBRAC CTEI . RSBRAC

    RSBRAC          shift and go to state 109


state 82

    (5) clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC . clase
    (5) clase -> . CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase
    (6) clase -> . e
    (147) e -> .

    CLASS           shift and go to state 8
    VAR             reduce using rule 147 (e -> .)
    VOID            reduce using rule 147 (e -> .)
    INT             reduce using rule 147 (e -> .)
    FLOAT           reduce using rule 147 (e -> .)
    STRING          reduce using rule 147 (e -> .)
    BOOL            reduce using rule 147 (e -> .)
    MAIN            reduce using rule 147 (e -> .)

    clase                          shift and go to state 110
    e                              shift and go to state 9

state 83

    (16) clase3 -> METHODS funcion . metodos
    (18) metodos -> . funcion metodos
    (19) metodos -> . e
    (34) funcion -> . funcion1 FUNCTION ID inicio LPAR funcion2 RPAR bloque funcion
    (35) funcion -> . e
    (147) e -> .
    (36) funcion1 -> . tipo
    (37) funcion1 -> . VOID funcion_void
    (44) tipo -> . INT
    (45) tipo -> . FLOAT
    (46) tipo -> . STRING
    (47) tipo -> . BOOL

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    RCBRAC          reduce using rule 147 (e -> .)
    VOID            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

  ! VOID            [ reduce using rule 147 (e -> .) ]
  ! INT             [ reduce using rule 147 (e -> .) ]
  ! FLOAT           [ reduce using rule 147 (e -> .) ]
  ! STRING          [ reduce using rule 147 (e -> .) ]
  ! BOOL            [ reduce using rule 147 (e -> .) ]

    funcion                        shift and go to state 111
    metodos                        shift and go to state 112
    e                              shift and go to state 113
    funcion1                       shift and go to state 16
    tipo                           shift and go to state 18

state 84

    (12) atributos -> declaracion . atributos
    (12) atributos -> . declaracion atributos
    (13) atributos -> . e
    (24) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (147) e -> .
    (25) declaracion1 -> . ID declaracion2 declaracion4

  ! shift/reduce conflict for ID resolved as shift
    METHODS         reduce using rule 147 (e -> .)
    RCBRAC          reduce using rule 147 (e -> .)
    ID              shift and go to state 26

  ! ID              [ reduce using rule 147 (e -> .) ]

    declaracion                    shift and go to state 84
    atributos                      shift and go to state 114
    e                              shift and go to state 86
    declaracion1                   shift and go to state 25

state 85

    (10) clase2 -> ATTRIBUTES declaracion atributos . asign
    (14) asign -> . asignacion asign
    (15) asign -> . e
    (59) asignacion -> . variable EQ expresion SEMICOLON
    (147) e -> .
    (60) variable -> . ID variable1 variable2

    METHODS         reduce using rule 147 (e -> .)
    RCBRAC          reduce using rule 147 (e -> .)
    ID              shift and go to state 118

    asign                          shift and go to state 115
    asignacion                     shift and go to state 116
    e                              shift and go to state 117
    variable                       shift and go to state 98

state 86

    (13) atributos -> e .

    ID              reduce using rule 13 (atributos -> e .)
    METHODS         reduce using rule 13 (atributos -> e .)
    RCBRAC          reduce using rule 13 (atributos -> e .)


state 87

    (48) bloque -> LCBRAC estatutos . RCBRAC

    RCBRAC          shift and go to state 119


state 88

    (49) estatutos -> estatuto . estatutos
    (49) estatutos -> . estatuto estatutos
    (50) estatutos -> . e
    (51) estatuto -> . asignacion
    (52) estatuto -> . condicion
    (53) estatuto -> . llamada
    (54) estatuto -> . leer
    (55) estatuto -> . escribir
    (56) estatuto -> . ciclo_w
    (57) estatuto -> . ciclo_f
    (58) estatuto -> . regresar
    (147) e -> .
    (59) asignacion -> . variable EQ expresion SEMICOLON
    (67) condicion -> . IF LPAR expresion RPAR gotoF bloque condicion1 fill
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (82) leer -> . READ LPAR variable add_read generar_cuadr RPAR SEMICOLON
    (84) escribir -> . WRITE LPAR escribir1 RPAR SEMICOLON
    (91) ciclo_w -> . WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while
    (94) ciclo_f -> . FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go
    (102) regresar -> . RETURN expresion SEMICOLON
    (60) variable -> . ID variable1 variable2
    (74) validar_id -> . ID

    RCBRAC          reduce using rule 147 (e -> .)
    IF              shift and go to state 99
    READ            shift and go to state 101
    WRITE           shift and go to state 102
    WHILE           shift and go to state 103
    FROM            shift and go to state 104
    RETURN          shift and go to state 105
    ID              shift and go to state 106

    estatuto                       shift and go to state 88
    estatutos                      shift and go to state 120
    e                              shift and go to state 89
    asignacion                     shift and go to state 90
    condicion                      shift and go to state 91
    llamada                        shift and go to state 92
    leer                           shift and go to state 93
    escribir                       shift and go to state 94
    ciclo_w                        shift and go to state 95
    ciclo_f                        shift and go to state 96
    regresar                       shift and go to state 97
    variable                       shift and go to state 98
    validar_id                     shift and go to state 100

state 89

    (50) estatutos -> e .

    RCBRAC          reduce using rule 50 (estatutos -> e .)


state 90

    (51) estatuto -> asignacion .

    IF              reduce using rule 51 (estatuto -> asignacion .)
    READ            reduce using rule 51 (estatuto -> asignacion .)
    WRITE           reduce using rule 51 (estatuto -> asignacion .)
    WHILE           reduce using rule 51 (estatuto -> asignacion .)
    FROM            reduce using rule 51 (estatuto -> asignacion .)
    RETURN          reduce using rule 51 (estatuto -> asignacion .)
    ID              reduce using rule 51 (estatuto -> asignacion .)
    RCBRAC          reduce using rule 51 (estatuto -> asignacion .)


state 91

    (52) estatuto -> condicion .

    IF              reduce using rule 52 (estatuto -> condicion .)
    READ            reduce using rule 52 (estatuto -> condicion .)
    WRITE           reduce using rule 52 (estatuto -> condicion .)
    WHILE           reduce using rule 52 (estatuto -> condicion .)
    FROM            reduce using rule 52 (estatuto -> condicion .)
    RETURN          reduce using rule 52 (estatuto -> condicion .)
    ID              reduce using rule 52 (estatuto -> condicion .)
    RCBRAC          reduce using rule 52 (estatuto -> condicion .)


state 92

    (53) estatuto -> llamada .

    IF              reduce using rule 53 (estatuto -> llamada .)
    READ            reduce using rule 53 (estatuto -> llamada .)
    WRITE           reduce using rule 53 (estatuto -> llamada .)
    WHILE           reduce using rule 53 (estatuto -> llamada .)
    FROM            reduce using rule 53 (estatuto -> llamada .)
    RETURN          reduce using rule 53 (estatuto -> llamada .)
    ID              reduce using rule 53 (estatuto -> llamada .)
    RCBRAC          reduce using rule 53 (estatuto -> llamada .)


state 93

    (54) estatuto -> leer .

    IF              reduce using rule 54 (estatuto -> leer .)
    READ            reduce using rule 54 (estatuto -> leer .)
    WRITE           reduce using rule 54 (estatuto -> leer .)
    WHILE           reduce using rule 54 (estatuto -> leer .)
    FROM            reduce using rule 54 (estatuto -> leer .)
    RETURN          reduce using rule 54 (estatuto -> leer .)
    ID              reduce using rule 54 (estatuto -> leer .)
    RCBRAC          reduce using rule 54 (estatuto -> leer .)


state 94

    (55) estatuto -> escribir .

    IF              reduce using rule 55 (estatuto -> escribir .)
    READ            reduce using rule 55 (estatuto -> escribir .)
    WRITE           reduce using rule 55 (estatuto -> escribir .)
    WHILE           reduce using rule 55 (estatuto -> escribir .)
    FROM            reduce using rule 55 (estatuto -> escribir .)
    RETURN          reduce using rule 55 (estatuto -> escribir .)
    ID              reduce using rule 55 (estatuto -> escribir .)
    RCBRAC          reduce using rule 55 (estatuto -> escribir .)


state 95

    (56) estatuto -> ciclo_w .

    IF              reduce using rule 56 (estatuto -> ciclo_w .)
    READ            reduce using rule 56 (estatuto -> ciclo_w .)
    WRITE           reduce using rule 56 (estatuto -> ciclo_w .)
    WHILE           reduce using rule 56 (estatuto -> ciclo_w .)
    FROM            reduce using rule 56 (estatuto -> ciclo_w .)
    RETURN          reduce using rule 56 (estatuto -> ciclo_w .)
    ID              reduce using rule 56 (estatuto -> ciclo_w .)
    RCBRAC          reduce using rule 56 (estatuto -> ciclo_w .)


state 96

    (57) estatuto -> ciclo_f .

    IF              reduce using rule 57 (estatuto -> ciclo_f .)
    READ            reduce using rule 57 (estatuto -> ciclo_f .)
    WRITE           reduce using rule 57 (estatuto -> ciclo_f .)
    WHILE           reduce using rule 57 (estatuto -> ciclo_f .)
    FROM            reduce using rule 57 (estatuto -> ciclo_f .)
    RETURN          reduce using rule 57 (estatuto -> ciclo_f .)
    ID              reduce using rule 57 (estatuto -> ciclo_f .)
    RCBRAC          reduce using rule 57 (estatuto -> ciclo_f .)


state 97

    (58) estatuto -> regresar .

    IF              reduce using rule 58 (estatuto -> regresar .)
    READ            reduce using rule 58 (estatuto -> regresar .)
    WRITE           reduce using rule 58 (estatuto -> regresar .)
    WHILE           reduce using rule 58 (estatuto -> regresar .)
    FROM            reduce using rule 58 (estatuto -> regresar .)
    RETURN          reduce using rule 58 (estatuto -> regresar .)
    ID              reduce using rule 58 (estatuto -> regresar .)
    RCBRAC          reduce using rule 58 (estatuto -> regresar .)


state 98

    (59) asignacion -> variable . EQ expresion SEMICOLON

    EQ              shift and go to state 121


state 99

    (67) condicion -> IF . LPAR expresion RPAR gotoF bloque condicion1 fill

    LPAR            shift and go to state 122


state 100

    (73) llamada -> validar_id . llamada1 LPAR llamada2 RPAR SEMICOLON
    (75) llamada1 -> . DOT ID
    (76) llamada1 -> . e
    (147) e -> .

    DOT             shift and go to state 124
    LPAR            reduce using rule 147 (e -> .)

    llamada1                       shift and go to state 123
    e                              shift and go to state 125

state 101

    (82) leer -> READ . LPAR variable add_read generar_cuadr RPAR SEMICOLON

    LPAR            shift and go to state 126


state 102

    (84) escribir -> WRITE . LPAR escribir1 RPAR SEMICOLON

    LPAR            shift and go to state 127


state 103

    (91) ciclo_w -> WHILE . push_while LPAR expresion RPAR gotoF DO bloque return_while
    (92) push_while -> . e
    (147) e -> .

    LPAR            reduce using rule 147 (e -> .)

    push_while                     shift and go to state 128
    e                              shift and go to state 129

state 104

    (94) ciclo_f -> FROM . LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go

    LPAR            shift and go to state 130


state 105

    (102) regresar -> RETURN . expresion SEMICOLON
    (103) expresion -> . a_exp exp1
    (108) a_exp -> . b_exp exp2
    (112) b_exp -> . c_exp exp3
    (122) c_exp -> . d_exp exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    expresion                      shift and go to state 131
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 106

    (60) variable -> ID . variable1 variable2
    (74) validar_id -> ID .
    (61) variable1 -> . DOT ID
    (62) variable1 -> . e
    (147) e -> .

  ! shift/reduce conflict for DOT resolved as shift
    LPAR            reduce using rule 74 (validar_id -> ID .)
    DOT             shift and go to state 146
    LSBRAC          reduce using rule 147 (e -> .)
    EQ              reduce using rule 147 (e -> .)
    MULT            reduce using rule 147 (e -> .)
    DIV             reduce using rule 147 (e -> .)
    PLUS            reduce using rule 147 (e -> .)
    MINUS           reduce using rule 147 (e -> .)
    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

  ! DOT             [ reduce using rule 74 (validar_id -> ID .) ]

    variable1                      shift and go to state 145
    e                              shift and go to state 147

state 107

    (40) funcion2 -> ID COLON . tipo funcion3
    (44) tipo -> . INT
    (45) tipo -> . FLOAT
    (46) tipo -> . STRING
    (47) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

    tipo                           shift and go to state 148

state 108

    (34) funcion -> funcion1 FUNCTION ID inicio LPAR funcion2 RPAR . bloque funcion
    (48) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 77

    bloque                         shift and go to state 149

state 109

    (28) declaracion3 -> LSBRAC CTEI RSBRAC .

    COMMA           reduce using rule 28 (declaracion3 -> LSBRAC CTEI RSBRAC .)
    COLON           reduce using rule 28 (declaracion3 -> LSBRAC CTEI RSBRAC .)


state 110

    (5) clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .

    VAR             reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)
    VOID            reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)
    INT             reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)
    FLOAT           reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)
    STRING          reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)
    BOOL            reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)
    MAIN            reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)


state 111

    (18) metodos -> funcion . metodos
    (18) metodos -> . funcion metodos
    (19) metodos -> . e
    (34) funcion -> . funcion1 FUNCTION ID inicio LPAR funcion2 RPAR bloque funcion
    (35) funcion -> . e
    (147) e -> .
    (36) funcion1 -> . tipo
    (37) funcion1 -> . VOID funcion_void
    (44) tipo -> . INT
    (45) tipo -> . FLOAT
    (46) tipo -> . STRING
    (47) tipo -> . BOOL

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    RCBRAC          reduce using rule 147 (e -> .)
    VOID            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

  ! VOID            [ reduce using rule 147 (e -> .) ]
  ! INT             [ reduce using rule 147 (e -> .) ]
  ! FLOAT           [ reduce using rule 147 (e -> .) ]
  ! STRING          [ reduce using rule 147 (e -> .) ]
  ! BOOL            [ reduce using rule 147 (e -> .) ]

    funcion                        shift and go to state 111
    metodos                        shift and go to state 150
    e                              shift and go to state 113
    funcion1                       shift and go to state 16
    tipo                           shift and go to state 18

state 112

    (16) clase3 -> METHODS funcion metodos .

    RCBRAC          reduce using rule 16 (clase3 -> METHODS funcion metodos .)


state 113

    (19) metodos -> e .
    (35) funcion -> e .

  ! reduce/reduce conflict for RCBRAC resolved using rule 19 (metodos -> e .)
    RCBRAC          reduce using rule 19 (metodos -> e .)
    VOID            reduce using rule 35 (funcion -> e .)
    INT             reduce using rule 35 (funcion -> e .)
    FLOAT           reduce using rule 35 (funcion -> e .)
    STRING          reduce using rule 35 (funcion -> e .)
    BOOL            reduce using rule 35 (funcion -> e .)

  ! RCBRAC          [ reduce using rule 35 (funcion -> e .) ]


state 114

    (12) atributos -> declaracion atributos .

    ID              reduce using rule 12 (atributos -> declaracion atributos .)
    METHODS         reduce using rule 12 (atributos -> declaracion atributos .)
    RCBRAC          reduce using rule 12 (atributos -> declaracion atributos .)


state 115

    (10) clase2 -> ATTRIBUTES declaracion atributos asign .

    METHODS         reduce using rule 10 (clase2 -> ATTRIBUTES declaracion atributos asign .)
    RCBRAC          reduce using rule 10 (clase2 -> ATTRIBUTES declaracion atributos asign .)


state 116

    (14) asign -> asignacion . asign
    (14) asign -> . asignacion asign
    (15) asign -> . e
    (59) asignacion -> . variable EQ expresion SEMICOLON
    (147) e -> .
    (60) variable -> . ID variable1 variable2

    METHODS         reduce using rule 147 (e -> .)
    RCBRAC          reduce using rule 147 (e -> .)
    ID              shift and go to state 118

    asignacion                     shift and go to state 116
    asign                          shift and go to state 151
    e                              shift and go to state 117
    variable                       shift and go to state 98

state 117

    (15) asign -> e .

    METHODS         reduce using rule 15 (asign -> e .)
    RCBRAC          reduce using rule 15 (asign -> e .)


state 118

    (60) variable -> ID . variable1 variable2
    (61) variable1 -> . DOT ID
    (62) variable1 -> . e
    (147) e -> .

    DOT             shift and go to state 146
    LSBRAC          reduce using rule 147 (e -> .)
    EQ              reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)

    variable1                      shift and go to state 145
    e                              shift and go to state 147

state 119

    (48) bloque -> LCBRAC estatutos RCBRAC .

    $end            reduce using rule 48 (bloque -> LCBRAC estatutos RCBRAC .)
    VOID            reduce using rule 48 (bloque -> LCBRAC estatutos RCBRAC .)
    INT             reduce using rule 48 (bloque -> LCBRAC estatutos RCBRAC .)
    FLOAT           reduce using rule 48 (bloque -> LCBRAC estatutos RCBRAC .)
    STRING          reduce using rule 48 (bloque -> LCBRAC estatutos RCBRAC .)
    BOOL            reduce using rule 48 (bloque -> LCBRAC estatutos RCBRAC .)
    MAIN            reduce using rule 48 (bloque -> LCBRAC estatutos RCBRAC .)
    RCBRAC          reduce using rule 48 (bloque -> LCBRAC estatutos RCBRAC .)
    ELSE            reduce using rule 48 (bloque -> LCBRAC estatutos RCBRAC .)
    IF              reduce using rule 48 (bloque -> LCBRAC estatutos RCBRAC .)
    READ            reduce using rule 48 (bloque -> LCBRAC estatutos RCBRAC .)
    WRITE           reduce using rule 48 (bloque -> LCBRAC estatutos RCBRAC .)
    WHILE           reduce using rule 48 (bloque -> LCBRAC estatutos RCBRAC .)
    FROM            reduce using rule 48 (bloque -> LCBRAC estatutos RCBRAC .)
    RETURN          reduce using rule 48 (bloque -> LCBRAC estatutos RCBRAC .)
    ID              reduce using rule 48 (bloque -> LCBRAC estatutos RCBRAC .)


state 120

    (49) estatutos -> estatuto estatutos .

    RCBRAC          reduce using rule 49 (estatutos -> estatuto estatutos .)


state 121

    (59) asignacion -> variable EQ . expresion SEMICOLON
    (103) expresion -> . a_exp exp1
    (108) a_exp -> . b_exp exp2
    (112) b_exp -> . c_exp exp3
    (122) c_exp -> . d_exp exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    variable                       shift and go to state 139
    expresion                      shift and go to state 152
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 122

    (67) condicion -> IF LPAR . expresion RPAR gotoF bloque condicion1 fill
    (103) expresion -> . a_exp exp1
    (108) a_exp -> . b_exp exp2
    (112) b_exp -> . c_exp exp3
    (122) c_exp -> . d_exp exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    expresion                      shift and go to state 153
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 123

    (73) llamada -> validar_id llamada1 . LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 154


state 124

    (75) llamada1 -> DOT . ID

    ID              shift and go to state 155


state 125

    (76) llamada1 -> e .

    LPAR            reduce using rule 76 (llamada1 -> e .)


state 126

    (82) leer -> READ LPAR . variable add_read generar_cuadr RPAR SEMICOLON
    (60) variable -> . ID variable1 variable2

    ID              shift and go to state 118

    variable                       shift and go to state 156

state 127

    (84) escribir -> WRITE LPAR . escribir1 RPAR SEMICOLON
    (85) escribir1 -> . texto add_print generar_cuadr escribir2
    (86) escribir1 -> . expresion add_print generar_cuadr escribir2
    (90) texto -> . CTESTR
    (103) expresion -> . a_exp exp1
    (108) a_exp -> . b_exp exp2
    (112) b_exp -> . c_exp exp3
    (122) c_exp -> . d_exp exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    CTESTR          shift and go to state 160
    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    escribir1                      shift and go to state 157
    texto                          shift and go to state 158
    expresion                      shift and go to state 159
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 128

    (91) ciclo_w -> WHILE push_while . LPAR expresion RPAR gotoF DO bloque return_while

    LPAR            shift and go to state 161


state 129

    (92) push_while -> e .

    LPAR            reduce using rule 92 (push_while -> e .)


state 130

    (94) ciclo_f -> FROM LPAR . variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go
    (60) variable -> . ID variable1 variable2

    ID              shift and go to state 118

    variable                       shift and go to state 162

state 131

    (102) regresar -> RETURN expresion . SEMICOLON

    SEMICOLON       shift and go to state 163


state 132

    (103) expresion -> a_exp . exp1
    (104) exp1 -> . OR push_or a_exp pop_operador exp1
    (105) exp1 -> . e
    (147) e -> .

    OR              shift and go to state 165
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    exp1                           shift and go to state 164
    e                              shift and go to state 166

state 133

    (108) a_exp -> b_exp . exp2
    (109) exp2 -> . AND push_and b_exp pop_operador exp2
    (110) exp2 -> . e
    (147) e -> .

    AND             shift and go to state 168
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    exp2                           shift and go to state 167
    e                              shift and go to state 169

state 134

    (112) b_exp -> c_exp . exp3
    (113) exp3 -> . LT push_lt c_exp pop_operador exp3
    (114) exp3 -> . GT push_gt c_exp pop_operador exp3
    (115) exp3 -> . COMP push_comp c_exp pop_operador exp3
    (116) exp3 -> . NOTEQ push_noteq c_exp pop_operador exp3
    (117) exp3 -> . e
    (147) e -> .

    LT              shift and go to state 171
    GT              shift and go to state 172
    COMP            shift and go to state 173
    NOTEQ           shift and go to state 174
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    exp3                           shift and go to state 170
    e                              shift and go to state 175

state 135

    (122) c_exp -> d_exp . exp4
    (123) exp4 -> . PLUS push_plus d_exp pop_operador exp4
    (124) exp4 -> . MINUS push_minus d_exp pop_operador exp4
    (125) exp4 -> . e
    (147) e -> .

    PLUS            shift and go to state 177
    MINUS           shift and go to state 178
    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    exp4                           shift and go to state 176
    e                              shift and go to state 179

state 136

    (128) d_exp -> e_exp . exp5
    (129) exp5 -> . MULT push_mult e_exp pop_operador exp5
    (130) exp5 -> . DIV push_div e_exp pop_operador exp5
    (131) exp5 -> . e
    (147) e -> .

    MULT            shift and go to state 181
    DIV             shift and go to state 182
    PLUS            reduce using rule 147 (e -> .)
    MINUS           reduce using rule 147 (e -> .)
    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    exp5                           shift and go to state 180
    e                              shift and go to state 183

state 137

    (134) e_exp -> LPAR . expresion RPAR
    (103) expresion -> . a_exp exp1
    (108) a_exp -> . b_exp exp2
    (112) b_exp -> . c_exp exp3
    (122) c_exp -> . d_exp exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    expresion                      shift and go to state 184
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 138

    (135) e_exp -> var_cte .

    MULT            reduce using rule 135 (e_exp -> var_cte .)
    DIV             reduce using rule 135 (e_exp -> var_cte .)
    PLUS            reduce using rule 135 (e_exp -> var_cte .)
    MINUS           reduce using rule 135 (e_exp -> var_cte .)
    LT              reduce using rule 135 (e_exp -> var_cte .)
    GT              reduce using rule 135 (e_exp -> var_cte .)
    COMP            reduce using rule 135 (e_exp -> var_cte .)
    NOTEQ           reduce using rule 135 (e_exp -> var_cte .)
    AND             reduce using rule 135 (e_exp -> var_cte .)
    OR              reduce using rule 135 (e_exp -> var_cte .)
    SEMICOLON       reduce using rule 135 (e_exp -> var_cte .)
    RPAR            reduce using rule 135 (e_exp -> var_cte .)
    COMMA           reduce using rule 135 (e_exp -> var_cte .)
    RSBRAC          reduce using rule 135 (e_exp -> var_cte .)
    TO              reduce using rule 135 (e_exp -> var_cte .)


state 139

    (136) e_exp -> variable .

    MULT            reduce using rule 136 (e_exp -> variable .)
    DIV             reduce using rule 136 (e_exp -> variable .)
    PLUS            reduce using rule 136 (e_exp -> variable .)
    MINUS           reduce using rule 136 (e_exp -> variable .)
    LT              reduce using rule 136 (e_exp -> variable .)
    GT              reduce using rule 136 (e_exp -> variable .)
    COMP            reduce using rule 136 (e_exp -> variable .)
    NOTEQ           reduce using rule 136 (e_exp -> variable .)
    AND             reduce using rule 136 (e_exp -> variable .)
    OR              reduce using rule 136 (e_exp -> variable .)
    SEMICOLON       reduce using rule 136 (e_exp -> variable .)
    RPAR            reduce using rule 136 (e_exp -> variable .)
    COMMA           reduce using rule 136 (e_exp -> variable .)
    RSBRAC          reduce using rule 136 (e_exp -> variable .)
    TO              reduce using rule 136 (e_exp -> variable .)


state 140

    (137) e_exp -> llamada .

    MULT            reduce using rule 137 (e_exp -> llamada .)
    DIV             reduce using rule 137 (e_exp -> llamada .)
    PLUS            reduce using rule 137 (e_exp -> llamada .)
    MINUS           reduce using rule 137 (e_exp -> llamada .)
    LT              reduce using rule 137 (e_exp -> llamada .)
    GT              reduce using rule 137 (e_exp -> llamada .)
    COMP            reduce using rule 137 (e_exp -> llamada .)
    NOTEQ           reduce using rule 137 (e_exp -> llamada .)
    AND             reduce using rule 137 (e_exp -> llamada .)
    OR              reduce using rule 137 (e_exp -> llamada .)
    SEMICOLON       reduce using rule 137 (e_exp -> llamada .)
    RPAR            reduce using rule 137 (e_exp -> llamada .)
    COMMA           reduce using rule 137 (e_exp -> llamada .)
    RSBRAC          reduce using rule 137 (e_exp -> llamada .)
    TO              reduce using rule 137 (e_exp -> llamada .)


state 141

    (138) var_cte -> CTEI . ctei
    (142) ctei -> . e
    (147) e -> .

    MULT            reduce using rule 147 (e -> .)
    DIV             reduce using rule 147 (e -> .)
    PLUS            reduce using rule 147 (e -> .)
    MINUS           reduce using rule 147 (e -> .)
    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    ctei                           shift and go to state 185
    e                              shift and go to state 186

state 142

    (139) var_cte -> CTEF . ctef
    (143) ctef -> . e
    (147) e -> .

    MULT            reduce using rule 147 (e -> .)
    DIV             reduce using rule 147 (e -> .)
    PLUS            reduce using rule 147 (e -> .)
    MINUS           reduce using rule 147 (e -> .)
    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    ctef                           shift and go to state 187
    e                              shift and go to state 188

state 143

    (140) var_cte -> CTESTR . ctestr
    (144) ctestr -> . e
    (147) e -> .

    MULT            reduce using rule 147 (e -> .)
    DIV             reduce using rule 147 (e -> .)
    PLUS            reduce using rule 147 (e -> .)
    MINUS           reduce using rule 147 (e -> .)
    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    ctestr                         shift and go to state 189
    e                              shift and go to state 190

state 144

    (141) var_cte -> CTEB . cteb
    (145) cteb -> . e
    (147) e -> .

    MULT            reduce using rule 147 (e -> .)
    DIV             reduce using rule 147 (e -> .)
    PLUS            reduce using rule 147 (e -> .)
    MINUS           reduce using rule 147 (e -> .)
    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    cteb                           shift and go to state 191
    e                              shift and go to state 192

state 145

    (60) variable -> ID variable1 . variable2
    (63) variable2 -> . LSBRAC expresion RSBRAC variable3
    (64) variable2 -> . e
    (147) e -> .

    LSBRAC          shift and go to state 194
    EQ              reduce using rule 147 (e -> .)
    MULT            reduce using rule 147 (e -> .)
    DIV             reduce using rule 147 (e -> .)
    PLUS            reduce using rule 147 (e -> .)
    MINUS           reduce using rule 147 (e -> .)
    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    variable2                      shift and go to state 193
    e                              shift and go to state 195

state 146

    (61) variable1 -> DOT . ID

    ID              shift and go to state 196


state 147

    (62) variable1 -> e .

    LSBRAC          reduce using rule 62 (variable1 -> e .)
    EQ              reduce using rule 62 (variable1 -> e .)
    MULT            reduce using rule 62 (variable1 -> e .)
    DIV             reduce using rule 62 (variable1 -> e .)
    PLUS            reduce using rule 62 (variable1 -> e .)
    MINUS           reduce using rule 62 (variable1 -> e .)
    LT              reduce using rule 62 (variable1 -> e .)
    GT              reduce using rule 62 (variable1 -> e .)
    COMP            reduce using rule 62 (variable1 -> e .)
    NOTEQ           reduce using rule 62 (variable1 -> e .)
    AND             reduce using rule 62 (variable1 -> e .)
    OR              reduce using rule 62 (variable1 -> e .)
    SEMICOLON       reduce using rule 62 (variable1 -> e .)
    RPAR            reduce using rule 62 (variable1 -> e .)
    COMMA           reduce using rule 62 (variable1 -> e .)
    RSBRAC          reduce using rule 62 (variable1 -> e .)
    TO              reduce using rule 62 (variable1 -> e .)


state 148

    (40) funcion2 -> ID COLON tipo . funcion3
    (42) funcion3 -> . COMMA ID COLON tipo funcion3
    (43) funcion3 -> . e
    (147) e -> .

    COMMA           shift and go to state 198
    RPAR            reduce using rule 147 (e -> .)

    funcion3                       shift and go to state 197
    e                              shift and go to state 199

state 149

    (34) funcion -> funcion1 FUNCTION ID inicio LPAR funcion2 RPAR bloque . funcion
    (34) funcion -> . funcion1 FUNCTION ID inicio LPAR funcion2 RPAR bloque funcion
    (35) funcion -> . e
    (36) funcion1 -> . tipo
    (37) funcion1 -> . VOID funcion_void
    (147) e -> .
    (44) tipo -> . INT
    (45) tipo -> . FLOAT
    (46) tipo -> . STRING
    (47) tipo -> . BOOL

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    VOID            shift and go to state 19
    MAIN            reduce using rule 147 (e -> .)
    RCBRAC          reduce using rule 147 (e -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

  ! VOID            [ reduce using rule 147 (e -> .) ]
  ! INT             [ reduce using rule 147 (e -> .) ]
  ! FLOAT           [ reduce using rule 147 (e -> .) ]
  ! STRING          [ reduce using rule 147 (e -> .) ]
  ! BOOL            [ reduce using rule 147 (e -> .) ]

    funcion1                       shift and go to state 16
    funcion                        shift and go to state 200
    e                              shift and go to state 17
    tipo                           shift and go to state 18

state 150

    (18) metodos -> funcion metodos .

    RCBRAC          reduce using rule 18 (metodos -> funcion metodos .)


state 151

    (14) asign -> asignacion asign .

    METHODS         reduce using rule 14 (asign -> asignacion asign .)
    RCBRAC          reduce using rule 14 (asign -> asignacion asign .)


state 152

    (59) asignacion -> variable EQ expresion . SEMICOLON

    SEMICOLON       shift and go to state 201


state 153

    (67) condicion -> IF LPAR expresion . RPAR gotoF bloque condicion1 fill

    RPAR            shift and go to state 202


state 154

    (73) llamada -> validar_id llamada1 LPAR . llamada2 RPAR SEMICOLON
    (77) llamada2 -> . expresion cuad_param llamada3
    (78) llamada2 -> . e
    (103) expresion -> . a_exp exp1
    (147) e -> .
    (108) a_exp -> . b_exp exp2
    (112) b_exp -> . c_exp exp3
    (122) c_exp -> . d_exp exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    RPAR            reduce using rule 147 (e -> .)
    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    validar_id                     shift and go to state 100
    llamada2                       shift and go to state 203
    expresion                      shift and go to state 204
    e                              shift and go to state 205
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 155

    (75) llamada1 -> DOT ID .

    LPAR            reduce using rule 75 (llamada1 -> DOT ID .)


state 156

    (82) leer -> READ LPAR variable . add_read generar_cuadr RPAR SEMICOLON
    (83) add_read -> . e
    (147) e -> .

    RPAR            reduce using rule 147 (e -> .)

    add_read                       shift and go to state 206
    e                              shift and go to state 207

state 157

    (84) escribir -> WRITE LPAR escribir1 . RPAR SEMICOLON

    RPAR            shift and go to state 208


state 158

    (85) escribir1 -> texto . add_print generar_cuadr escribir2
    (87) add_print -> . e
    (147) e -> .

    COMMA           reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)

    add_print                      shift and go to state 209
    e                              shift and go to state 210

state 159

    (86) escribir1 -> expresion . add_print generar_cuadr escribir2
    (87) add_print -> . e
    (147) e -> .

    COMMA           reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)

    add_print                      shift and go to state 211
    e                              shift and go to state 210

state 160

    (90) texto -> CTESTR .
    (140) var_cte -> CTESTR . ctestr
    (144) ctestr -> . e
    (147) e -> .

  ! reduce/reduce conflict for COMMA resolved using rule 90 (texto -> CTESTR .)
  ! reduce/reduce conflict for RPAR resolved using rule 90 (texto -> CTESTR .)
    COMMA           reduce using rule 90 (texto -> CTESTR .)
    RPAR            reduce using rule 90 (texto -> CTESTR .)
    MULT            reduce using rule 147 (e -> .)
    DIV             reduce using rule 147 (e -> .)
    PLUS            reduce using rule 147 (e -> .)
    MINUS           reduce using rule 147 (e -> .)
    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)

  ! COMMA           [ reduce using rule 147 (e -> .) ]
  ! RPAR            [ reduce using rule 147 (e -> .) ]

    ctestr                         shift and go to state 189
    e                              shift and go to state 190

state 161

    (91) ciclo_w -> WHILE push_while LPAR . expresion RPAR gotoF DO bloque return_while
    (103) expresion -> . a_exp exp1
    (108) a_exp -> . b_exp exp2
    (112) b_exp -> . c_exp exp3
    (122) c_exp -> . d_exp exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    expresion                      shift and go to state 212
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 162

    (94) ciclo_f -> FROM LPAR variable . EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go

    EQ              shift and go to state 213


state 163

    (102) regresar -> RETURN expresion SEMICOLON .

    IF              reduce using rule 102 (regresar -> RETURN expresion SEMICOLON .)
    READ            reduce using rule 102 (regresar -> RETURN expresion SEMICOLON .)
    WRITE           reduce using rule 102 (regresar -> RETURN expresion SEMICOLON .)
    WHILE           reduce using rule 102 (regresar -> RETURN expresion SEMICOLON .)
    FROM            reduce using rule 102 (regresar -> RETURN expresion SEMICOLON .)
    RETURN          reduce using rule 102 (regresar -> RETURN expresion SEMICOLON .)
    ID              reduce using rule 102 (regresar -> RETURN expresion SEMICOLON .)
    RCBRAC          reduce using rule 102 (regresar -> RETURN expresion SEMICOLON .)


state 164

    (103) expresion -> a_exp exp1 .

    SEMICOLON       reduce using rule 103 (expresion -> a_exp exp1 .)
    RPAR            reduce using rule 103 (expresion -> a_exp exp1 .)
    COMMA           reduce using rule 103 (expresion -> a_exp exp1 .)
    RSBRAC          reduce using rule 103 (expresion -> a_exp exp1 .)
    TO              reduce using rule 103 (expresion -> a_exp exp1 .)


state 165

    (104) exp1 -> OR . push_or a_exp pop_operador exp1
    (106) push_or -> . e
    (147) e -> .

    LPAR            reduce using rule 147 (e -> .)
    CTEI            reduce using rule 147 (e -> .)
    CTEF            reduce using rule 147 (e -> .)
    CTESTR          reduce using rule 147 (e -> .)
    CTEB            reduce using rule 147 (e -> .)
    ID              reduce using rule 147 (e -> .)

    push_or                        shift and go to state 214
    e                              shift and go to state 215

state 166

    (105) exp1 -> e .

    SEMICOLON       reduce using rule 105 (exp1 -> e .)
    RPAR            reduce using rule 105 (exp1 -> e .)
    COMMA           reduce using rule 105 (exp1 -> e .)
    RSBRAC          reduce using rule 105 (exp1 -> e .)
    TO              reduce using rule 105 (exp1 -> e .)


state 167

    (108) a_exp -> b_exp exp2 .

    OR              reduce using rule 108 (a_exp -> b_exp exp2 .)
    SEMICOLON       reduce using rule 108 (a_exp -> b_exp exp2 .)
    RPAR            reduce using rule 108 (a_exp -> b_exp exp2 .)
    COMMA           reduce using rule 108 (a_exp -> b_exp exp2 .)
    RSBRAC          reduce using rule 108 (a_exp -> b_exp exp2 .)
    TO              reduce using rule 108 (a_exp -> b_exp exp2 .)


state 168

    (109) exp2 -> AND . push_and b_exp pop_operador exp2
    (111) push_and -> . e
    (147) e -> .

    LPAR            reduce using rule 147 (e -> .)
    CTEI            reduce using rule 147 (e -> .)
    CTEF            reduce using rule 147 (e -> .)
    CTESTR          reduce using rule 147 (e -> .)
    CTEB            reduce using rule 147 (e -> .)
    ID              reduce using rule 147 (e -> .)

    push_and                       shift and go to state 216
    e                              shift and go to state 217

state 169

    (110) exp2 -> e .

    OR              reduce using rule 110 (exp2 -> e .)
    SEMICOLON       reduce using rule 110 (exp2 -> e .)
    RPAR            reduce using rule 110 (exp2 -> e .)
    COMMA           reduce using rule 110 (exp2 -> e .)
    RSBRAC          reduce using rule 110 (exp2 -> e .)
    TO              reduce using rule 110 (exp2 -> e .)


state 170

    (112) b_exp -> c_exp exp3 .

    AND             reduce using rule 112 (b_exp -> c_exp exp3 .)
    OR              reduce using rule 112 (b_exp -> c_exp exp3 .)
    SEMICOLON       reduce using rule 112 (b_exp -> c_exp exp3 .)
    RPAR            reduce using rule 112 (b_exp -> c_exp exp3 .)
    COMMA           reduce using rule 112 (b_exp -> c_exp exp3 .)
    RSBRAC          reduce using rule 112 (b_exp -> c_exp exp3 .)
    TO              reduce using rule 112 (b_exp -> c_exp exp3 .)


state 171

    (113) exp3 -> LT . push_lt c_exp pop_operador exp3
    (118) push_lt -> . e
    (147) e -> .

    LPAR            reduce using rule 147 (e -> .)
    CTEI            reduce using rule 147 (e -> .)
    CTEF            reduce using rule 147 (e -> .)
    CTESTR          reduce using rule 147 (e -> .)
    CTEB            reduce using rule 147 (e -> .)
    ID              reduce using rule 147 (e -> .)

    push_lt                        shift and go to state 218
    e                              shift and go to state 219

state 172

    (114) exp3 -> GT . push_gt c_exp pop_operador exp3
    (119) push_gt -> . e
    (147) e -> .

    LPAR            reduce using rule 147 (e -> .)
    CTEI            reduce using rule 147 (e -> .)
    CTEF            reduce using rule 147 (e -> .)
    CTESTR          reduce using rule 147 (e -> .)
    CTEB            reduce using rule 147 (e -> .)
    ID              reduce using rule 147 (e -> .)

    push_gt                        shift and go to state 220
    e                              shift and go to state 221

state 173

    (115) exp3 -> COMP . push_comp c_exp pop_operador exp3
    (120) push_comp -> . e
    (147) e -> .

    LPAR            reduce using rule 147 (e -> .)
    CTEI            reduce using rule 147 (e -> .)
    CTEF            reduce using rule 147 (e -> .)
    CTESTR          reduce using rule 147 (e -> .)
    CTEB            reduce using rule 147 (e -> .)
    ID              reduce using rule 147 (e -> .)

    push_comp                      shift and go to state 222
    e                              shift and go to state 223

state 174

    (116) exp3 -> NOTEQ . push_noteq c_exp pop_operador exp3
    (121) push_noteq -> . e
    (147) e -> .

    LPAR            reduce using rule 147 (e -> .)
    CTEI            reduce using rule 147 (e -> .)
    CTEF            reduce using rule 147 (e -> .)
    CTESTR          reduce using rule 147 (e -> .)
    CTEB            reduce using rule 147 (e -> .)
    ID              reduce using rule 147 (e -> .)

    push_noteq                     shift and go to state 224
    e                              shift and go to state 225

state 175

    (117) exp3 -> e .

    AND             reduce using rule 117 (exp3 -> e .)
    OR              reduce using rule 117 (exp3 -> e .)
    SEMICOLON       reduce using rule 117 (exp3 -> e .)
    RPAR            reduce using rule 117 (exp3 -> e .)
    COMMA           reduce using rule 117 (exp3 -> e .)
    RSBRAC          reduce using rule 117 (exp3 -> e .)
    TO              reduce using rule 117 (exp3 -> e .)


state 176

    (122) c_exp -> d_exp exp4 .

    LT              reduce using rule 122 (c_exp -> d_exp exp4 .)
    GT              reduce using rule 122 (c_exp -> d_exp exp4 .)
    COMP            reduce using rule 122 (c_exp -> d_exp exp4 .)
    NOTEQ           reduce using rule 122 (c_exp -> d_exp exp4 .)
    AND             reduce using rule 122 (c_exp -> d_exp exp4 .)
    OR              reduce using rule 122 (c_exp -> d_exp exp4 .)
    SEMICOLON       reduce using rule 122 (c_exp -> d_exp exp4 .)
    RPAR            reduce using rule 122 (c_exp -> d_exp exp4 .)
    COMMA           reduce using rule 122 (c_exp -> d_exp exp4 .)
    RSBRAC          reduce using rule 122 (c_exp -> d_exp exp4 .)
    TO              reduce using rule 122 (c_exp -> d_exp exp4 .)


state 177

    (123) exp4 -> PLUS . push_plus d_exp pop_operador exp4
    (126) push_plus -> . e
    (147) e -> .

    LPAR            reduce using rule 147 (e -> .)
    CTEI            reduce using rule 147 (e -> .)
    CTEF            reduce using rule 147 (e -> .)
    CTESTR          reduce using rule 147 (e -> .)
    CTEB            reduce using rule 147 (e -> .)
    ID              reduce using rule 147 (e -> .)

    push_plus                      shift and go to state 226
    e                              shift and go to state 227

state 178

    (124) exp4 -> MINUS . push_minus d_exp pop_operador exp4
    (127) push_minus -> . e
    (147) e -> .

    LPAR            reduce using rule 147 (e -> .)
    CTEI            reduce using rule 147 (e -> .)
    CTEF            reduce using rule 147 (e -> .)
    CTESTR          reduce using rule 147 (e -> .)
    CTEB            reduce using rule 147 (e -> .)
    ID              reduce using rule 147 (e -> .)

    push_minus                     shift and go to state 228
    e                              shift and go to state 229

state 179

    (125) exp4 -> e .

    LT              reduce using rule 125 (exp4 -> e .)
    GT              reduce using rule 125 (exp4 -> e .)
    COMP            reduce using rule 125 (exp4 -> e .)
    NOTEQ           reduce using rule 125 (exp4 -> e .)
    AND             reduce using rule 125 (exp4 -> e .)
    OR              reduce using rule 125 (exp4 -> e .)
    SEMICOLON       reduce using rule 125 (exp4 -> e .)
    RPAR            reduce using rule 125 (exp4 -> e .)
    COMMA           reduce using rule 125 (exp4 -> e .)
    RSBRAC          reduce using rule 125 (exp4 -> e .)
    TO              reduce using rule 125 (exp4 -> e .)


state 180

    (128) d_exp -> e_exp exp5 .

    PLUS            reduce using rule 128 (d_exp -> e_exp exp5 .)
    MINUS           reduce using rule 128 (d_exp -> e_exp exp5 .)
    LT              reduce using rule 128 (d_exp -> e_exp exp5 .)
    GT              reduce using rule 128 (d_exp -> e_exp exp5 .)
    COMP            reduce using rule 128 (d_exp -> e_exp exp5 .)
    NOTEQ           reduce using rule 128 (d_exp -> e_exp exp5 .)
    AND             reduce using rule 128 (d_exp -> e_exp exp5 .)
    OR              reduce using rule 128 (d_exp -> e_exp exp5 .)
    SEMICOLON       reduce using rule 128 (d_exp -> e_exp exp5 .)
    RPAR            reduce using rule 128 (d_exp -> e_exp exp5 .)
    COMMA           reduce using rule 128 (d_exp -> e_exp exp5 .)
    RSBRAC          reduce using rule 128 (d_exp -> e_exp exp5 .)
    TO              reduce using rule 128 (d_exp -> e_exp exp5 .)


state 181

    (129) exp5 -> MULT . push_mult e_exp pop_operador exp5
    (132) push_mult -> . e
    (147) e -> .

    LPAR            reduce using rule 147 (e -> .)
    CTEI            reduce using rule 147 (e -> .)
    CTEF            reduce using rule 147 (e -> .)
    CTESTR          reduce using rule 147 (e -> .)
    CTEB            reduce using rule 147 (e -> .)
    ID              reduce using rule 147 (e -> .)

    push_mult                      shift and go to state 230
    e                              shift and go to state 231

state 182

    (130) exp5 -> DIV . push_div e_exp pop_operador exp5
    (133) push_div -> . e
    (147) e -> .

    LPAR            reduce using rule 147 (e -> .)
    CTEI            reduce using rule 147 (e -> .)
    CTEF            reduce using rule 147 (e -> .)
    CTESTR          reduce using rule 147 (e -> .)
    CTEB            reduce using rule 147 (e -> .)
    ID              reduce using rule 147 (e -> .)

    push_div                       shift and go to state 232
    e                              shift and go to state 233

state 183

    (131) exp5 -> e .

    PLUS            reduce using rule 131 (exp5 -> e .)
    MINUS           reduce using rule 131 (exp5 -> e .)
    LT              reduce using rule 131 (exp5 -> e .)
    GT              reduce using rule 131 (exp5 -> e .)
    COMP            reduce using rule 131 (exp5 -> e .)
    NOTEQ           reduce using rule 131 (exp5 -> e .)
    AND             reduce using rule 131 (exp5 -> e .)
    OR              reduce using rule 131 (exp5 -> e .)
    SEMICOLON       reduce using rule 131 (exp5 -> e .)
    RPAR            reduce using rule 131 (exp5 -> e .)
    COMMA           reduce using rule 131 (exp5 -> e .)
    RSBRAC          reduce using rule 131 (exp5 -> e .)
    TO              reduce using rule 131 (exp5 -> e .)


state 184

    (134) e_exp -> LPAR expresion . RPAR

    RPAR            shift and go to state 234


state 185

    (138) var_cte -> CTEI ctei .

    MULT            reduce using rule 138 (var_cte -> CTEI ctei .)
    DIV             reduce using rule 138 (var_cte -> CTEI ctei .)
    PLUS            reduce using rule 138 (var_cte -> CTEI ctei .)
    MINUS           reduce using rule 138 (var_cte -> CTEI ctei .)
    LT              reduce using rule 138 (var_cte -> CTEI ctei .)
    GT              reduce using rule 138 (var_cte -> CTEI ctei .)
    COMP            reduce using rule 138 (var_cte -> CTEI ctei .)
    NOTEQ           reduce using rule 138 (var_cte -> CTEI ctei .)
    AND             reduce using rule 138 (var_cte -> CTEI ctei .)
    OR              reduce using rule 138 (var_cte -> CTEI ctei .)
    SEMICOLON       reduce using rule 138 (var_cte -> CTEI ctei .)
    RPAR            reduce using rule 138 (var_cte -> CTEI ctei .)
    COMMA           reduce using rule 138 (var_cte -> CTEI ctei .)
    RSBRAC          reduce using rule 138 (var_cte -> CTEI ctei .)
    TO              reduce using rule 138 (var_cte -> CTEI ctei .)


state 186

    (142) ctei -> e .

    MULT            reduce using rule 142 (ctei -> e .)
    DIV             reduce using rule 142 (ctei -> e .)
    PLUS            reduce using rule 142 (ctei -> e .)
    MINUS           reduce using rule 142 (ctei -> e .)
    LT              reduce using rule 142 (ctei -> e .)
    GT              reduce using rule 142 (ctei -> e .)
    COMP            reduce using rule 142 (ctei -> e .)
    NOTEQ           reduce using rule 142 (ctei -> e .)
    AND             reduce using rule 142 (ctei -> e .)
    OR              reduce using rule 142 (ctei -> e .)
    SEMICOLON       reduce using rule 142 (ctei -> e .)
    RPAR            reduce using rule 142 (ctei -> e .)
    COMMA           reduce using rule 142 (ctei -> e .)
    RSBRAC          reduce using rule 142 (ctei -> e .)
    TO              reduce using rule 142 (ctei -> e .)


state 187

    (139) var_cte -> CTEF ctef .

    MULT            reduce using rule 139 (var_cte -> CTEF ctef .)
    DIV             reduce using rule 139 (var_cte -> CTEF ctef .)
    PLUS            reduce using rule 139 (var_cte -> CTEF ctef .)
    MINUS           reduce using rule 139 (var_cte -> CTEF ctef .)
    LT              reduce using rule 139 (var_cte -> CTEF ctef .)
    GT              reduce using rule 139 (var_cte -> CTEF ctef .)
    COMP            reduce using rule 139 (var_cte -> CTEF ctef .)
    NOTEQ           reduce using rule 139 (var_cte -> CTEF ctef .)
    AND             reduce using rule 139 (var_cte -> CTEF ctef .)
    OR              reduce using rule 139 (var_cte -> CTEF ctef .)
    SEMICOLON       reduce using rule 139 (var_cte -> CTEF ctef .)
    RPAR            reduce using rule 139 (var_cte -> CTEF ctef .)
    COMMA           reduce using rule 139 (var_cte -> CTEF ctef .)
    RSBRAC          reduce using rule 139 (var_cte -> CTEF ctef .)
    TO              reduce using rule 139 (var_cte -> CTEF ctef .)


state 188

    (143) ctef -> e .

    MULT            reduce using rule 143 (ctef -> e .)
    DIV             reduce using rule 143 (ctef -> e .)
    PLUS            reduce using rule 143 (ctef -> e .)
    MINUS           reduce using rule 143 (ctef -> e .)
    LT              reduce using rule 143 (ctef -> e .)
    GT              reduce using rule 143 (ctef -> e .)
    COMP            reduce using rule 143 (ctef -> e .)
    NOTEQ           reduce using rule 143 (ctef -> e .)
    AND             reduce using rule 143 (ctef -> e .)
    OR              reduce using rule 143 (ctef -> e .)
    SEMICOLON       reduce using rule 143 (ctef -> e .)
    RPAR            reduce using rule 143 (ctef -> e .)
    COMMA           reduce using rule 143 (ctef -> e .)
    RSBRAC          reduce using rule 143 (ctef -> e .)
    TO              reduce using rule 143 (ctef -> e .)


state 189

    (140) var_cte -> CTESTR ctestr .

    MULT            reduce using rule 140 (var_cte -> CTESTR ctestr .)
    DIV             reduce using rule 140 (var_cte -> CTESTR ctestr .)
    PLUS            reduce using rule 140 (var_cte -> CTESTR ctestr .)
    MINUS           reduce using rule 140 (var_cte -> CTESTR ctestr .)
    LT              reduce using rule 140 (var_cte -> CTESTR ctestr .)
    GT              reduce using rule 140 (var_cte -> CTESTR ctestr .)
    COMP            reduce using rule 140 (var_cte -> CTESTR ctestr .)
    NOTEQ           reduce using rule 140 (var_cte -> CTESTR ctestr .)
    AND             reduce using rule 140 (var_cte -> CTESTR ctestr .)
    OR              reduce using rule 140 (var_cte -> CTESTR ctestr .)
    SEMICOLON       reduce using rule 140 (var_cte -> CTESTR ctestr .)
    RPAR            reduce using rule 140 (var_cte -> CTESTR ctestr .)
    COMMA           reduce using rule 140 (var_cte -> CTESTR ctestr .)
    RSBRAC          reduce using rule 140 (var_cte -> CTESTR ctestr .)
    TO              reduce using rule 140 (var_cte -> CTESTR ctestr .)


state 190

    (144) ctestr -> e .

    MULT            reduce using rule 144 (ctestr -> e .)
    DIV             reduce using rule 144 (ctestr -> e .)
    PLUS            reduce using rule 144 (ctestr -> e .)
    MINUS           reduce using rule 144 (ctestr -> e .)
    LT              reduce using rule 144 (ctestr -> e .)
    GT              reduce using rule 144 (ctestr -> e .)
    COMP            reduce using rule 144 (ctestr -> e .)
    NOTEQ           reduce using rule 144 (ctestr -> e .)
    AND             reduce using rule 144 (ctestr -> e .)
    OR              reduce using rule 144 (ctestr -> e .)
    SEMICOLON       reduce using rule 144 (ctestr -> e .)
    RPAR            reduce using rule 144 (ctestr -> e .)
    COMMA           reduce using rule 144 (ctestr -> e .)
    RSBRAC          reduce using rule 144 (ctestr -> e .)
    TO              reduce using rule 144 (ctestr -> e .)


state 191

    (141) var_cte -> CTEB cteb .

    MULT            reduce using rule 141 (var_cte -> CTEB cteb .)
    DIV             reduce using rule 141 (var_cte -> CTEB cteb .)
    PLUS            reduce using rule 141 (var_cte -> CTEB cteb .)
    MINUS           reduce using rule 141 (var_cte -> CTEB cteb .)
    LT              reduce using rule 141 (var_cte -> CTEB cteb .)
    GT              reduce using rule 141 (var_cte -> CTEB cteb .)
    COMP            reduce using rule 141 (var_cte -> CTEB cteb .)
    NOTEQ           reduce using rule 141 (var_cte -> CTEB cteb .)
    AND             reduce using rule 141 (var_cte -> CTEB cteb .)
    OR              reduce using rule 141 (var_cte -> CTEB cteb .)
    SEMICOLON       reduce using rule 141 (var_cte -> CTEB cteb .)
    RPAR            reduce using rule 141 (var_cte -> CTEB cteb .)
    COMMA           reduce using rule 141 (var_cte -> CTEB cteb .)
    RSBRAC          reduce using rule 141 (var_cte -> CTEB cteb .)
    TO              reduce using rule 141 (var_cte -> CTEB cteb .)


state 192

    (145) cteb -> e .

    MULT            reduce using rule 145 (cteb -> e .)
    DIV             reduce using rule 145 (cteb -> e .)
    PLUS            reduce using rule 145 (cteb -> e .)
    MINUS           reduce using rule 145 (cteb -> e .)
    LT              reduce using rule 145 (cteb -> e .)
    GT              reduce using rule 145 (cteb -> e .)
    COMP            reduce using rule 145 (cteb -> e .)
    NOTEQ           reduce using rule 145 (cteb -> e .)
    AND             reduce using rule 145 (cteb -> e .)
    OR              reduce using rule 145 (cteb -> e .)
    SEMICOLON       reduce using rule 145 (cteb -> e .)
    RPAR            reduce using rule 145 (cteb -> e .)
    COMMA           reduce using rule 145 (cteb -> e .)
    RSBRAC          reduce using rule 145 (cteb -> e .)
    TO              reduce using rule 145 (cteb -> e .)


state 193

    (60) variable -> ID variable1 variable2 .

    EQ              reduce using rule 60 (variable -> ID variable1 variable2 .)
    MULT            reduce using rule 60 (variable -> ID variable1 variable2 .)
    DIV             reduce using rule 60 (variable -> ID variable1 variable2 .)
    PLUS            reduce using rule 60 (variable -> ID variable1 variable2 .)
    MINUS           reduce using rule 60 (variable -> ID variable1 variable2 .)
    LT              reduce using rule 60 (variable -> ID variable1 variable2 .)
    GT              reduce using rule 60 (variable -> ID variable1 variable2 .)
    COMP            reduce using rule 60 (variable -> ID variable1 variable2 .)
    NOTEQ           reduce using rule 60 (variable -> ID variable1 variable2 .)
    AND             reduce using rule 60 (variable -> ID variable1 variable2 .)
    OR              reduce using rule 60 (variable -> ID variable1 variable2 .)
    SEMICOLON       reduce using rule 60 (variable -> ID variable1 variable2 .)
    RPAR            reduce using rule 60 (variable -> ID variable1 variable2 .)
    COMMA           reduce using rule 60 (variable -> ID variable1 variable2 .)
    RSBRAC          reduce using rule 60 (variable -> ID variable1 variable2 .)
    TO              reduce using rule 60 (variable -> ID variable1 variable2 .)


state 194

    (63) variable2 -> LSBRAC . expresion RSBRAC variable3
    (103) expresion -> . a_exp exp1
    (108) a_exp -> . b_exp exp2
    (112) b_exp -> . c_exp exp3
    (122) c_exp -> . d_exp exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    expresion                      shift and go to state 235
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 195

    (64) variable2 -> e .

    EQ              reduce using rule 64 (variable2 -> e .)
    MULT            reduce using rule 64 (variable2 -> e .)
    DIV             reduce using rule 64 (variable2 -> e .)
    PLUS            reduce using rule 64 (variable2 -> e .)
    MINUS           reduce using rule 64 (variable2 -> e .)
    LT              reduce using rule 64 (variable2 -> e .)
    GT              reduce using rule 64 (variable2 -> e .)
    COMP            reduce using rule 64 (variable2 -> e .)
    NOTEQ           reduce using rule 64 (variable2 -> e .)
    AND             reduce using rule 64 (variable2 -> e .)
    OR              reduce using rule 64 (variable2 -> e .)
    SEMICOLON       reduce using rule 64 (variable2 -> e .)
    RPAR            reduce using rule 64 (variable2 -> e .)
    COMMA           reduce using rule 64 (variable2 -> e .)
    RSBRAC          reduce using rule 64 (variable2 -> e .)
    TO              reduce using rule 64 (variable2 -> e .)


state 196

    (61) variable1 -> DOT ID .

    LSBRAC          reduce using rule 61 (variable1 -> DOT ID .)
    EQ              reduce using rule 61 (variable1 -> DOT ID .)
    MULT            reduce using rule 61 (variable1 -> DOT ID .)
    DIV             reduce using rule 61 (variable1 -> DOT ID .)
    PLUS            reduce using rule 61 (variable1 -> DOT ID .)
    MINUS           reduce using rule 61 (variable1 -> DOT ID .)
    LT              reduce using rule 61 (variable1 -> DOT ID .)
    GT              reduce using rule 61 (variable1 -> DOT ID .)
    COMP            reduce using rule 61 (variable1 -> DOT ID .)
    NOTEQ           reduce using rule 61 (variable1 -> DOT ID .)
    AND             reduce using rule 61 (variable1 -> DOT ID .)
    OR              reduce using rule 61 (variable1 -> DOT ID .)
    SEMICOLON       reduce using rule 61 (variable1 -> DOT ID .)
    RPAR            reduce using rule 61 (variable1 -> DOT ID .)
    COMMA           reduce using rule 61 (variable1 -> DOT ID .)
    RSBRAC          reduce using rule 61 (variable1 -> DOT ID .)
    TO              reduce using rule 61 (variable1 -> DOT ID .)


state 197

    (40) funcion2 -> ID COLON tipo funcion3 .

    RPAR            reduce using rule 40 (funcion2 -> ID COLON tipo funcion3 .)


state 198

    (42) funcion3 -> COMMA . ID COLON tipo funcion3

    ID              shift and go to state 236


state 199

    (43) funcion3 -> e .

    RPAR            reduce using rule 43 (funcion3 -> e .)


state 200

    (34) funcion -> funcion1 FUNCTION ID inicio LPAR funcion2 RPAR bloque funcion .

    MAIN            reduce using rule 34 (funcion -> funcion1 FUNCTION ID inicio LPAR funcion2 RPAR bloque funcion .)
    VOID            reduce using rule 34 (funcion -> funcion1 FUNCTION ID inicio LPAR funcion2 RPAR bloque funcion .)
    INT             reduce using rule 34 (funcion -> funcion1 FUNCTION ID inicio LPAR funcion2 RPAR bloque funcion .)
    FLOAT           reduce using rule 34 (funcion -> funcion1 FUNCTION ID inicio LPAR funcion2 RPAR bloque funcion .)
    STRING          reduce using rule 34 (funcion -> funcion1 FUNCTION ID inicio LPAR funcion2 RPAR bloque funcion .)
    BOOL            reduce using rule 34 (funcion -> funcion1 FUNCTION ID inicio LPAR funcion2 RPAR bloque funcion .)
    RCBRAC          reduce using rule 34 (funcion -> funcion1 FUNCTION ID inicio LPAR funcion2 RPAR bloque funcion .)


state 201

    (59) asignacion -> variable EQ expresion SEMICOLON .

    IF              reduce using rule 59 (asignacion -> variable EQ expresion SEMICOLON .)
    READ            reduce using rule 59 (asignacion -> variable EQ expresion SEMICOLON .)
    WRITE           reduce using rule 59 (asignacion -> variable EQ expresion SEMICOLON .)
    WHILE           reduce using rule 59 (asignacion -> variable EQ expresion SEMICOLON .)
    FROM            reduce using rule 59 (asignacion -> variable EQ expresion SEMICOLON .)
    RETURN          reduce using rule 59 (asignacion -> variable EQ expresion SEMICOLON .)
    ID              reduce using rule 59 (asignacion -> variable EQ expresion SEMICOLON .)
    RCBRAC          reduce using rule 59 (asignacion -> variable EQ expresion SEMICOLON .)
    METHODS         reduce using rule 59 (asignacion -> variable EQ expresion SEMICOLON .)


state 202

    (67) condicion -> IF LPAR expresion RPAR . gotoF bloque condicion1 fill
    (68) gotoF -> . e
    (147) e -> .

    LCBRAC          reduce using rule 147 (e -> .)

    gotoF                          shift and go to state 237
    e                              shift and go to state 238

state 203

    (73) llamada -> validar_id llamada1 LPAR llamada2 . RPAR SEMICOLON

    RPAR            shift and go to state 239


state 204

    (77) llamada2 -> expresion . cuad_param llamada3
    (79) cuad_param -> . e
    (147) e -> .

    COMMA           reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)

    cuad_param                     shift and go to state 240
    e                              shift and go to state 241

state 205

    (78) llamada2 -> e .

    RPAR            reduce using rule 78 (llamada2 -> e .)


state 206

    (82) leer -> READ LPAR variable add_read . generar_cuadr RPAR SEMICOLON
    (146) generar_cuadr -> . e
    (147) e -> .

    RPAR            reduce using rule 147 (e -> .)

    generar_cuadr                  shift and go to state 242
    e                              shift and go to state 243

state 207

    (83) add_read -> e .

    RPAR            reduce using rule 83 (add_read -> e .)


state 208

    (84) escribir -> WRITE LPAR escribir1 RPAR . SEMICOLON

    SEMICOLON       shift and go to state 244


state 209

    (85) escribir1 -> texto add_print . generar_cuadr escribir2
    (146) generar_cuadr -> . e
    (147) e -> .

    COMMA           reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)

    generar_cuadr                  shift and go to state 245
    e                              shift and go to state 243

state 210

    (87) add_print -> e .

    COMMA           reduce using rule 87 (add_print -> e .)
    RPAR            reduce using rule 87 (add_print -> e .)


state 211

    (86) escribir1 -> expresion add_print . generar_cuadr escribir2
    (146) generar_cuadr -> . e
    (147) e -> .

    COMMA           reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)

    generar_cuadr                  shift and go to state 246
    e                              shift and go to state 243

state 212

    (91) ciclo_w -> WHILE push_while LPAR expresion . RPAR gotoF DO bloque return_while

    RPAR            shift and go to state 247


state 213

    (94) ciclo_f -> FROM LPAR variable EQ . expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go
    (103) expresion -> . a_exp exp1
    (108) a_exp -> . b_exp exp2
    (112) b_exp -> . c_exp exp3
    (122) c_exp -> . d_exp exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    variable                       shift and go to state 139
    expresion                      shift and go to state 248
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 214

    (104) exp1 -> OR push_or . a_exp pop_operador exp1
    (108) a_exp -> . b_exp exp2
    (112) b_exp -> . c_exp exp3
    (122) c_exp -> . d_exp exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    a_exp                          shift and go to state 249
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 215

    (106) push_or -> e .

    LPAR            reduce using rule 106 (push_or -> e .)
    CTEI            reduce using rule 106 (push_or -> e .)
    CTEF            reduce using rule 106 (push_or -> e .)
    CTESTR          reduce using rule 106 (push_or -> e .)
    CTEB            reduce using rule 106 (push_or -> e .)
    ID              reduce using rule 106 (push_or -> e .)


state 216

    (109) exp2 -> AND push_and . b_exp pop_operador exp2
    (112) b_exp -> . c_exp exp3
    (122) c_exp -> . d_exp exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    b_exp                          shift and go to state 250
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 217

    (111) push_and -> e .

    LPAR            reduce using rule 111 (push_and -> e .)
    CTEI            reduce using rule 111 (push_and -> e .)
    CTEF            reduce using rule 111 (push_and -> e .)
    CTESTR          reduce using rule 111 (push_and -> e .)
    CTEB            reduce using rule 111 (push_and -> e .)
    ID              reduce using rule 111 (push_and -> e .)


state 218

    (113) exp3 -> LT push_lt . c_exp pop_operador exp3
    (122) c_exp -> . d_exp exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    c_exp                          shift and go to state 251
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 219

    (118) push_lt -> e .

    LPAR            reduce using rule 118 (push_lt -> e .)
    CTEI            reduce using rule 118 (push_lt -> e .)
    CTEF            reduce using rule 118 (push_lt -> e .)
    CTESTR          reduce using rule 118 (push_lt -> e .)
    CTEB            reduce using rule 118 (push_lt -> e .)
    ID              reduce using rule 118 (push_lt -> e .)
    RPAR            reduce using rule 118 (push_lt -> e .)


state 220

    (114) exp3 -> GT push_gt . c_exp pop_operador exp3
    (122) c_exp -> . d_exp exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    c_exp                          shift and go to state 252
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 221

    (119) push_gt -> e .

    LPAR            reduce using rule 119 (push_gt -> e .)
    CTEI            reduce using rule 119 (push_gt -> e .)
    CTEF            reduce using rule 119 (push_gt -> e .)
    CTESTR          reduce using rule 119 (push_gt -> e .)
    CTEB            reduce using rule 119 (push_gt -> e .)
    ID              reduce using rule 119 (push_gt -> e .)


state 222

    (115) exp3 -> COMP push_comp . c_exp pop_operador exp3
    (122) c_exp -> . d_exp exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    c_exp                          shift and go to state 253
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 223

    (120) push_comp -> e .

    LPAR            reduce using rule 120 (push_comp -> e .)
    CTEI            reduce using rule 120 (push_comp -> e .)
    CTEF            reduce using rule 120 (push_comp -> e .)
    CTESTR          reduce using rule 120 (push_comp -> e .)
    CTEB            reduce using rule 120 (push_comp -> e .)
    ID              reduce using rule 120 (push_comp -> e .)


state 224

    (116) exp3 -> NOTEQ push_noteq . c_exp pop_operador exp3
    (122) c_exp -> . d_exp exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    c_exp                          shift and go to state 254
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 225

    (121) push_noteq -> e .

    LPAR            reduce using rule 121 (push_noteq -> e .)
    CTEI            reduce using rule 121 (push_noteq -> e .)
    CTEF            reduce using rule 121 (push_noteq -> e .)
    CTESTR          reduce using rule 121 (push_noteq -> e .)
    CTEB            reduce using rule 121 (push_noteq -> e .)
    ID              reduce using rule 121 (push_noteq -> e .)


state 226

    (123) exp4 -> PLUS push_plus . d_exp pop_operador exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    d_exp                          shift and go to state 255
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 227

    (126) push_plus -> e .

    LPAR            reduce using rule 126 (push_plus -> e .)
    CTEI            reduce using rule 126 (push_plus -> e .)
    CTEF            reduce using rule 126 (push_plus -> e .)
    CTESTR          reduce using rule 126 (push_plus -> e .)
    CTEB            reduce using rule 126 (push_plus -> e .)
    ID              reduce using rule 126 (push_plus -> e .)
    IF              reduce using rule 126 (push_plus -> e .)
    READ            reduce using rule 126 (push_plus -> e .)
    WRITE           reduce using rule 126 (push_plus -> e .)
    WHILE           reduce using rule 126 (push_plus -> e .)
    FROM            reduce using rule 126 (push_plus -> e .)
    RETURN          reduce using rule 126 (push_plus -> e .)
    RCBRAC          reduce using rule 126 (push_plus -> e .)


state 228

    (124) exp4 -> MINUS push_minus . d_exp pop_operador exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    d_exp                          shift and go to state 256
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 229

    (127) push_minus -> e .

    LPAR            reduce using rule 127 (push_minus -> e .)
    CTEI            reduce using rule 127 (push_minus -> e .)
    CTEF            reduce using rule 127 (push_minus -> e .)
    CTESTR          reduce using rule 127 (push_minus -> e .)
    CTEB            reduce using rule 127 (push_minus -> e .)
    ID              reduce using rule 127 (push_minus -> e .)


state 230

    (129) exp5 -> MULT push_mult . e_exp pop_operador exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    e_exp                          shift and go to state 257
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 231

    (132) push_mult -> e .

    LPAR            reduce using rule 132 (push_mult -> e .)
    CTEI            reduce using rule 132 (push_mult -> e .)
    CTEF            reduce using rule 132 (push_mult -> e .)
    CTESTR          reduce using rule 132 (push_mult -> e .)
    CTEB            reduce using rule 132 (push_mult -> e .)
    ID              reduce using rule 132 (push_mult -> e .)


state 232

    (130) exp5 -> DIV push_div . e_exp pop_operador exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    e_exp                          shift and go to state 258
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 233

    (133) push_div -> e .

    LPAR            reduce using rule 133 (push_div -> e .)
    CTEI            reduce using rule 133 (push_div -> e .)
    CTEF            reduce using rule 133 (push_div -> e .)
    CTESTR          reduce using rule 133 (push_div -> e .)
    CTEB            reduce using rule 133 (push_div -> e .)
    ID              reduce using rule 133 (push_div -> e .)


state 234

    (134) e_exp -> LPAR expresion RPAR .

    MULT            reduce using rule 134 (e_exp -> LPAR expresion RPAR .)
    DIV             reduce using rule 134 (e_exp -> LPAR expresion RPAR .)
    PLUS            reduce using rule 134 (e_exp -> LPAR expresion RPAR .)
    MINUS           reduce using rule 134 (e_exp -> LPAR expresion RPAR .)
    LT              reduce using rule 134 (e_exp -> LPAR expresion RPAR .)
    GT              reduce using rule 134 (e_exp -> LPAR expresion RPAR .)
    COMP            reduce using rule 134 (e_exp -> LPAR expresion RPAR .)
    NOTEQ           reduce using rule 134 (e_exp -> LPAR expresion RPAR .)
    AND             reduce using rule 134 (e_exp -> LPAR expresion RPAR .)
    OR              reduce using rule 134 (e_exp -> LPAR expresion RPAR .)
    SEMICOLON       reduce using rule 134 (e_exp -> LPAR expresion RPAR .)
    RPAR            reduce using rule 134 (e_exp -> LPAR expresion RPAR .)
    COMMA           reduce using rule 134 (e_exp -> LPAR expresion RPAR .)
    RSBRAC          reduce using rule 134 (e_exp -> LPAR expresion RPAR .)
    TO              reduce using rule 134 (e_exp -> LPAR expresion RPAR .)


state 235

    (63) variable2 -> LSBRAC expresion . RSBRAC variable3

    RSBRAC          shift and go to state 259


state 236

    (42) funcion3 -> COMMA ID . COLON tipo funcion3

    COLON           shift and go to state 260


state 237

    (67) condicion -> IF LPAR expresion RPAR gotoF . bloque condicion1 fill
    (48) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 77

    bloque                         shift and go to state 261

state 238

    (68) gotoF -> e .

    LCBRAC          reduce using rule 68 (gotoF -> e .)
    DO              reduce using rule 68 (gotoF -> e .)
    RPAR            reduce using rule 68 (gotoF -> e .)


state 239

    (73) llamada -> validar_id llamada1 LPAR llamada2 RPAR . SEMICOLON

    SEMICOLON       shift and go to state 262


state 240

    (77) llamada2 -> expresion cuad_param . llamada3
    (80) llamada3 -> . COMMA expresion cuad_param llamada3
    (81) llamada3 -> . e
    (147) e -> .

    COMMA           shift and go to state 264
    RPAR            reduce using rule 147 (e -> .)

    llamada3                       shift and go to state 263
    e                              shift and go to state 265

state 241

    (79) cuad_param -> e .

    COMMA           reduce using rule 79 (cuad_param -> e .)
    RPAR            reduce using rule 79 (cuad_param -> e .)


state 242

    (82) leer -> READ LPAR variable add_read generar_cuadr . RPAR SEMICOLON

    RPAR            shift and go to state 266


state 243

    (146) generar_cuadr -> e .

    RPAR            reduce using rule 146 (generar_cuadr -> e .)
    COMMA           reduce using rule 146 (generar_cuadr -> e .)


state 244

    (84) escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .

    IF              reduce using rule 84 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    READ            reduce using rule 84 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    WRITE           reduce using rule 84 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    WHILE           reduce using rule 84 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    FROM            reduce using rule 84 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    RETURN          reduce using rule 84 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    ID              reduce using rule 84 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    RCBRAC          reduce using rule 84 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)


state 245

    (85) escribir1 -> texto add_print generar_cuadr . escribir2
    (88) escribir2 -> . COMMA escribir1
    (89) escribir2 -> . e
    (147) e -> .

    COMMA           shift and go to state 268
    RPAR            reduce using rule 147 (e -> .)

    escribir2                      shift and go to state 267
    e                              shift and go to state 269

state 246

    (86) escribir1 -> expresion add_print generar_cuadr . escribir2
    (88) escribir2 -> . COMMA escribir1
    (89) escribir2 -> . e
    (147) e -> .

    COMMA           shift and go to state 268
    RPAR            reduce using rule 147 (e -> .)

    escribir2                      shift and go to state 270
    e                              shift and go to state 269

state 247

    (91) ciclo_w -> WHILE push_while LPAR expresion RPAR . gotoF DO bloque return_while
    (68) gotoF -> . e
    (147) e -> .

    DO              reduce using rule 147 (e -> .)

    gotoF                          shift and go to state 271
    e                              shift and go to state 238

state 248

    (94) ciclo_f -> FROM LPAR variable EQ expresion . asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go
    (95) asign_var -> . e
    (147) e -> .

    TO              reduce using rule 147 (e -> .)

    asign_var                      shift and go to state 272
    e                              shift and go to state 273

state 249

    (104) exp1 -> OR push_or a_exp . pop_operador exp1
    (107) pop_operador -> . e
    (147) e -> .

    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    pop_operador                   shift and go to state 274
    e                              shift and go to state 275

state 250

    (109) exp2 -> AND push_and b_exp . pop_operador exp2
    (107) pop_operador -> . e
    (147) e -> .

    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    pop_operador                   shift and go to state 276
    e                              shift and go to state 275

state 251

    (113) exp3 -> LT push_lt c_exp . pop_operador exp3
    (107) pop_operador -> . e
    (147) e -> .

    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    pop_operador                   shift and go to state 277
    e                              shift and go to state 275

state 252

    (114) exp3 -> GT push_gt c_exp . pop_operador exp3
    (107) pop_operador -> . e
    (147) e -> .

    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    pop_operador                   shift and go to state 278
    e                              shift and go to state 275

state 253

    (115) exp3 -> COMP push_comp c_exp . pop_operador exp3
    (107) pop_operador -> . e
    (147) e -> .

    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    pop_operador                   shift and go to state 279
    e                              shift and go to state 275

state 254

    (116) exp3 -> NOTEQ push_noteq c_exp . pop_operador exp3
    (107) pop_operador -> . e
    (147) e -> .

    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    pop_operador                   shift and go to state 280
    e                              shift and go to state 275

state 255

    (123) exp4 -> PLUS push_plus d_exp . pop_operador exp4
    (107) pop_operador -> . e
    (147) e -> .

    PLUS            reduce using rule 147 (e -> .)
    MINUS           reduce using rule 147 (e -> .)
    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    pop_operador                   shift and go to state 281
    e                              shift and go to state 275

state 256

    (124) exp4 -> MINUS push_minus d_exp . pop_operador exp4
    (107) pop_operador -> . e
    (147) e -> .

    PLUS            reduce using rule 147 (e -> .)
    MINUS           reduce using rule 147 (e -> .)
    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    pop_operador                   shift and go to state 282
    e                              shift and go to state 275

state 257

    (129) exp5 -> MULT push_mult e_exp . pop_operador exp5
    (107) pop_operador -> . e
    (147) e -> .

    MULT            reduce using rule 147 (e -> .)
    DIV             reduce using rule 147 (e -> .)
    PLUS            reduce using rule 147 (e -> .)
    MINUS           reduce using rule 147 (e -> .)
    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    pop_operador                   shift and go to state 283
    e                              shift and go to state 275

state 258

    (130) exp5 -> DIV push_div e_exp . pop_operador exp5
    (107) pop_operador -> . e
    (147) e -> .

    MULT            reduce using rule 147 (e -> .)
    DIV             reduce using rule 147 (e -> .)
    PLUS            reduce using rule 147 (e -> .)
    MINUS           reduce using rule 147 (e -> .)
    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    pop_operador                   shift and go to state 284
    e                              shift and go to state 275

state 259

    (63) variable2 -> LSBRAC expresion RSBRAC . variable3
    (65) variable3 -> . LSBRAC expresion RSBRAC
    (66) variable3 -> . e
    (147) e -> .

    LSBRAC          shift and go to state 285
    EQ              reduce using rule 147 (e -> .)
    MULT            reduce using rule 147 (e -> .)
    DIV             reduce using rule 147 (e -> .)
    PLUS            reduce using rule 147 (e -> .)
    MINUS           reduce using rule 147 (e -> .)
    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    variable3                      shift and go to state 286
    e                              shift and go to state 287

state 260

    (42) funcion3 -> COMMA ID COLON . tipo funcion3
    (44) tipo -> . INT
    (45) tipo -> . FLOAT
    (46) tipo -> . STRING
    (47) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

    tipo                           shift and go to state 288

state 261

    (67) condicion -> IF LPAR expresion RPAR gotoF bloque . condicion1 fill
    (70) condicion1 -> . ELSE goto bloque
    (71) condicion1 -> . e
    (147) e -> .

    ELSE            shift and go to state 290
    IF              reduce using rule 147 (e -> .)
    READ            reduce using rule 147 (e -> .)
    WRITE           reduce using rule 147 (e -> .)
    WHILE           reduce using rule 147 (e -> .)
    FROM            reduce using rule 147 (e -> .)
    RETURN          reduce using rule 147 (e -> .)
    ID              reduce using rule 147 (e -> .)
    RCBRAC          reduce using rule 147 (e -> .)

    condicion1                     shift and go to state 289
    e                              shift and go to state 291

state 262

    (73) llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .

    IF              reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    READ            reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    WRITE           reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    WHILE           reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    FROM            reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    RETURN          reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    ID              reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    RCBRAC          reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    MULT            reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    DIV             reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    PLUS            reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    MINUS           reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    LT              reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    GT              reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    COMP            reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    NOTEQ           reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    AND             reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    OR              reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    SEMICOLON       reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    RPAR            reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    COMMA           reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    RSBRAC          reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)
    TO              reduce using rule 73 (llamada -> validar_id llamada1 LPAR llamada2 RPAR SEMICOLON .)


state 263

    (77) llamada2 -> expresion cuad_param llamada3 .

    RPAR            reduce using rule 77 (llamada2 -> expresion cuad_param llamada3 .)


state 264

    (80) llamada3 -> COMMA . expresion cuad_param llamada3
    (103) expresion -> . a_exp exp1
    (108) a_exp -> . b_exp exp2
    (112) b_exp -> . c_exp exp3
    (122) c_exp -> . d_exp exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    expresion                      shift and go to state 292
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 265

    (81) llamada3 -> e .

    RPAR            reduce using rule 81 (llamada3 -> e .)


state 266

    (82) leer -> READ LPAR variable add_read generar_cuadr RPAR . SEMICOLON

    SEMICOLON       shift and go to state 293


state 267

    (85) escribir1 -> texto add_print generar_cuadr escribir2 .

    RPAR            reduce using rule 85 (escribir1 -> texto add_print generar_cuadr escribir2 .)


state 268

    (88) escribir2 -> COMMA . escribir1
    (85) escribir1 -> . texto add_print generar_cuadr escribir2
    (86) escribir1 -> . expresion add_print generar_cuadr escribir2
    (90) texto -> . CTESTR
    (103) expresion -> . a_exp exp1
    (108) a_exp -> . b_exp exp2
    (112) b_exp -> . c_exp exp3
    (122) c_exp -> . d_exp exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    CTESTR          shift and go to state 160
    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    escribir1                      shift and go to state 294
    texto                          shift and go to state 158
    expresion                      shift and go to state 159
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 269

    (89) escribir2 -> e .

    RPAR            reduce using rule 89 (escribir2 -> e .)


state 270

    (86) escribir1 -> expresion add_print generar_cuadr escribir2 .

    RPAR            reduce using rule 86 (escribir1 -> expresion add_print generar_cuadr escribir2 .)


state 271

    (91) ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF . DO bloque return_while

    DO              shift and go to state 295


state 272

    (94) ciclo_f -> FROM LPAR variable EQ expresion asign_var . TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go

    TO              shift and go to state 296


state 273

    (95) asign_var -> e .

    TO              reduce using rule 95 (asign_var -> e .)
    IF              reduce using rule 95 (asign_var -> e .)
    READ            reduce using rule 95 (asign_var -> e .)
    WRITE           reduce using rule 95 (asign_var -> e .)
    WHILE           reduce using rule 95 (asign_var -> e .)
    FROM            reduce using rule 95 (asign_var -> e .)
    RETURN          reduce using rule 95 (asign_var -> e .)
    ID              reduce using rule 95 (asign_var -> e .)
    RCBRAC          reduce using rule 95 (asign_var -> e .)


state 274

    (104) exp1 -> OR push_or a_exp pop_operador . exp1
    (104) exp1 -> . OR push_or a_exp pop_operador exp1
    (105) exp1 -> . e
    (147) e -> .

    OR              shift and go to state 165
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    exp1                           shift and go to state 297
    e                              shift and go to state 166

state 275

    (107) pop_operador -> e .

    OR              reduce using rule 107 (pop_operador -> e .)
    SEMICOLON       reduce using rule 107 (pop_operador -> e .)
    RPAR            reduce using rule 107 (pop_operador -> e .)
    COMMA           reduce using rule 107 (pop_operador -> e .)
    RSBRAC          reduce using rule 107 (pop_operador -> e .)
    TO              reduce using rule 107 (pop_operador -> e .)
    AND             reduce using rule 107 (pop_operador -> e .)
    LT              reduce using rule 107 (pop_operador -> e .)
    GT              reduce using rule 107 (pop_operador -> e .)
    COMP            reduce using rule 107 (pop_operador -> e .)
    NOTEQ           reduce using rule 107 (pop_operador -> e .)
    PLUS            reduce using rule 107 (pop_operador -> e .)
    MINUS           reduce using rule 107 (pop_operador -> e .)
    MULT            reduce using rule 107 (pop_operador -> e .)
    DIV             reduce using rule 107 (pop_operador -> e .)


state 276

    (109) exp2 -> AND push_and b_exp pop_operador . exp2
    (109) exp2 -> . AND push_and b_exp pop_operador exp2
    (110) exp2 -> . e
    (147) e -> .

    AND             shift and go to state 168
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    exp2                           shift and go to state 298
    e                              shift and go to state 169

state 277

    (113) exp3 -> LT push_lt c_exp pop_operador . exp3
    (113) exp3 -> . LT push_lt c_exp pop_operador exp3
    (114) exp3 -> . GT push_gt c_exp pop_operador exp3
    (115) exp3 -> . COMP push_comp c_exp pop_operador exp3
    (116) exp3 -> . NOTEQ push_noteq c_exp pop_operador exp3
    (117) exp3 -> . e
    (147) e -> .

    LT              shift and go to state 171
    GT              shift and go to state 172
    COMP            shift and go to state 173
    NOTEQ           shift and go to state 174
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    exp3                           shift and go to state 299
    e                              shift and go to state 175

state 278

    (114) exp3 -> GT push_gt c_exp pop_operador . exp3
    (113) exp3 -> . LT push_lt c_exp pop_operador exp3
    (114) exp3 -> . GT push_gt c_exp pop_operador exp3
    (115) exp3 -> . COMP push_comp c_exp pop_operador exp3
    (116) exp3 -> . NOTEQ push_noteq c_exp pop_operador exp3
    (117) exp3 -> . e
    (147) e -> .

    LT              shift and go to state 171
    GT              shift and go to state 172
    COMP            shift and go to state 173
    NOTEQ           shift and go to state 174
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    exp3                           shift and go to state 300
    e                              shift and go to state 175

state 279

    (115) exp3 -> COMP push_comp c_exp pop_operador . exp3
    (113) exp3 -> . LT push_lt c_exp pop_operador exp3
    (114) exp3 -> . GT push_gt c_exp pop_operador exp3
    (115) exp3 -> . COMP push_comp c_exp pop_operador exp3
    (116) exp3 -> . NOTEQ push_noteq c_exp pop_operador exp3
    (117) exp3 -> . e
    (147) e -> .

    LT              shift and go to state 171
    GT              shift and go to state 172
    COMP            shift and go to state 173
    NOTEQ           shift and go to state 174
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    exp3                           shift and go to state 301
    e                              shift and go to state 175

state 280

    (116) exp3 -> NOTEQ push_noteq c_exp pop_operador . exp3
    (113) exp3 -> . LT push_lt c_exp pop_operador exp3
    (114) exp3 -> . GT push_gt c_exp pop_operador exp3
    (115) exp3 -> . COMP push_comp c_exp pop_operador exp3
    (116) exp3 -> . NOTEQ push_noteq c_exp pop_operador exp3
    (117) exp3 -> . e
    (147) e -> .

    LT              shift and go to state 171
    GT              shift and go to state 172
    COMP            shift and go to state 173
    NOTEQ           shift and go to state 174
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    exp3                           shift and go to state 302
    e                              shift and go to state 175

state 281

    (123) exp4 -> PLUS push_plus d_exp pop_operador . exp4
    (123) exp4 -> . PLUS push_plus d_exp pop_operador exp4
    (124) exp4 -> . MINUS push_minus d_exp pop_operador exp4
    (125) exp4 -> . e
    (147) e -> .

    PLUS            shift and go to state 177
    MINUS           shift and go to state 178
    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    exp4                           shift and go to state 303
    e                              shift and go to state 179

state 282

    (124) exp4 -> MINUS push_minus d_exp pop_operador . exp4
    (123) exp4 -> . PLUS push_plus d_exp pop_operador exp4
    (124) exp4 -> . MINUS push_minus d_exp pop_operador exp4
    (125) exp4 -> . e
    (147) e -> .

    PLUS            shift and go to state 177
    MINUS           shift and go to state 178
    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    exp4                           shift and go to state 304
    e                              shift and go to state 179

state 283

    (129) exp5 -> MULT push_mult e_exp pop_operador . exp5
    (129) exp5 -> . MULT push_mult e_exp pop_operador exp5
    (130) exp5 -> . DIV push_div e_exp pop_operador exp5
    (131) exp5 -> . e
    (147) e -> .

    MULT            shift and go to state 181
    DIV             shift and go to state 182
    PLUS            reduce using rule 147 (e -> .)
    MINUS           reduce using rule 147 (e -> .)
    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    exp5                           shift and go to state 305
    e                              shift and go to state 183

state 284

    (130) exp5 -> DIV push_div e_exp pop_operador . exp5
    (129) exp5 -> . MULT push_mult e_exp pop_operador exp5
    (130) exp5 -> . DIV push_div e_exp pop_operador exp5
    (131) exp5 -> . e
    (147) e -> .

    MULT            shift and go to state 181
    DIV             shift and go to state 182
    PLUS            reduce using rule 147 (e -> .)
    MINUS           reduce using rule 147 (e -> .)
    LT              reduce using rule 147 (e -> .)
    GT              reduce using rule 147 (e -> .)
    COMP            reduce using rule 147 (e -> .)
    NOTEQ           reduce using rule 147 (e -> .)
    AND             reduce using rule 147 (e -> .)
    OR              reduce using rule 147 (e -> .)
    SEMICOLON       reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)
    COMMA           reduce using rule 147 (e -> .)
    RSBRAC          reduce using rule 147 (e -> .)
    TO              reduce using rule 147 (e -> .)

    exp5                           shift and go to state 306
    e                              shift and go to state 183

state 285

    (65) variable3 -> LSBRAC . expresion RSBRAC
    (103) expresion -> . a_exp exp1
    (108) a_exp -> . b_exp exp2
    (112) b_exp -> . c_exp exp3
    (122) c_exp -> . d_exp exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    expresion                      shift and go to state 307
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 286

    (63) variable2 -> LSBRAC expresion RSBRAC variable3 .

    EQ              reduce using rule 63 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    MULT            reduce using rule 63 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    DIV             reduce using rule 63 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    PLUS            reduce using rule 63 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    MINUS           reduce using rule 63 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    LT              reduce using rule 63 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    GT              reduce using rule 63 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    COMP            reduce using rule 63 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    NOTEQ           reduce using rule 63 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    AND             reduce using rule 63 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    OR              reduce using rule 63 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    SEMICOLON       reduce using rule 63 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    RPAR            reduce using rule 63 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    COMMA           reduce using rule 63 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    RSBRAC          reduce using rule 63 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    TO              reduce using rule 63 (variable2 -> LSBRAC expresion RSBRAC variable3 .)


state 287

    (66) variable3 -> e .

    EQ              reduce using rule 66 (variable3 -> e .)
    MULT            reduce using rule 66 (variable3 -> e .)
    DIV             reduce using rule 66 (variable3 -> e .)
    PLUS            reduce using rule 66 (variable3 -> e .)
    MINUS           reduce using rule 66 (variable3 -> e .)
    LT              reduce using rule 66 (variable3 -> e .)
    GT              reduce using rule 66 (variable3 -> e .)
    COMP            reduce using rule 66 (variable3 -> e .)
    NOTEQ           reduce using rule 66 (variable3 -> e .)
    AND             reduce using rule 66 (variable3 -> e .)
    OR              reduce using rule 66 (variable3 -> e .)
    SEMICOLON       reduce using rule 66 (variable3 -> e .)
    RPAR            reduce using rule 66 (variable3 -> e .)
    COMMA           reduce using rule 66 (variable3 -> e .)
    RSBRAC          reduce using rule 66 (variable3 -> e .)
    TO              reduce using rule 66 (variable3 -> e .)


state 288

    (42) funcion3 -> COMMA ID COLON tipo . funcion3
    (42) funcion3 -> . COMMA ID COLON tipo funcion3
    (43) funcion3 -> . e
    (147) e -> .

    COMMA           shift and go to state 198
    RPAR            reduce using rule 147 (e -> .)

    funcion3                       shift and go to state 308
    e                              shift and go to state 199

state 289

    (67) condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 . fill
    (69) fill -> . e
    (147) e -> .

    IF              reduce using rule 147 (e -> .)
    READ            reduce using rule 147 (e -> .)
    WRITE           reduce using rule 147 (e -> .)
    WHILE           reduce using rule 147 (e -> .)
    FROM            reduce using rule 147 (e -> .)
    RETURN          reduce using rule 147 (e -> .)
    ID              reduce using rule 147 (e -> .)
    RCBRAC          reduce using rule 147 (e -> .)

    fill                           shift and go to state 309
    e                              shift and go to state 310

state 290

    (70) condicion1 -> ELSE . goto bloque
    (72) goto -> . e
    (147) e -> .

    LCBRAC          reduce using rule 147 (e -> .)

    goto                           shift and go to state 311
    e                              shift and go to state 312

state 291

    (71) condicion1 -> e .

    IF              reduce using rule 71 (condicion1 -> e .)
    READ            reduce using rule 71 (condicion1 -> e .)
    WRITE           reduce using rule 71 (condicion1 -> e .)
    WHILE           reduce using rule 71 (condicion1 -> e .)
    FROM            reduce using rule 71 (condicion1 -> e .)
    RETURN          reduce using rule 71 (condicion1 -> e .)
    ID              reduce using rule 71 (condicion1 -> e .)
    RCBRAC          reduce using rule 71 (condicion1 -> e .)


state 292

    (80) llamada3 -> COMMA expresion . cuad_param llamada3
    (79) cuad_param -> . e
    (147) e -> .

    COMMA           reduce using rule 147 (e -> .)
    RPAR            reduce using rule 147 (e -> .)

    cuad_param                     shift and go to state 313
    e                              shift and go to state 241

state 293

    (82) leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .

    IF              reduce using rule 82 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    READ            reduce using rule 82 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    WRITE           reduce using rule 82 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    WHILE           reduce using rule 82 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    FROM            reduce using rule 82 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    RETURN          reduce using rule 82 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    ID              reduce using rule 82 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    RCBRAC          reduce using rule 82 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)


state 294

    (88) escribir2 -> COMMA escribir1 .

    RPAR            reduce using rule 88 (escribir2 -> COMMA escribir1 .)


state 295

    (91) ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO . bloque return_while
    (48) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 77

    bloque                         shift and go to state 314

state 296

    (94) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO . expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go
    (103) expresion -> . a_exp exp1
    (108) a_exp -> . b_exp exp2
    (112) b_exp -> . c_exp exp3
    (122) c_exp -> . d_exp exp4
    (128) d_exp -> . e_exp exp5
    (134) e_exp -> . LPAR expresion RPAR
    (135) e_exp -> . var_cte
    (136) e_exp -> . variable
    (137) e_exp -> . llamada
    (138) var_cte -> . CTEI ctei
    (139) var_cte -> . CTEF ctef
    (140) var_cte -> . CTESTR ctestr
    (141) var_cte -> . CTEB cteb
    (60) variable -> . ID variable1 variable2
    (73) llamada -> . validar_id llamada1 LPAR llamada2 RPAR SEMICOLON
    (74) validar_id -> . ID

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 106

    variable                       shift and go to state 139
    expresion                      shift and go to state 315
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    llamada                        shift and go to state 140
    validar_id                     shift and go to state 100

state 297

    (104) exp1 -> OR push_or a_exp pop_operador exp1 .

    SEMICOLON       reduce using rule 104 (exp1 -> OR push_or a_exp pop_operador exp1 .)
    RPAR            reduce using rule 104 (exp1 -> OR push_or a_exp pop_operador exp1 .)
    COMMA           reduce using rule 104 (exp1 -> OR push_or a_exp pop_operador exp1 .)
    RSBRAC          reduce using rule 104 (exp1 -> OR push_or a_exp pop_operador exp1 .)
    TO              reduce using rule 104 (exp1 -> OR push_or a_exp pop_operador exp1 .)


state 298

    (109) exp2 -> AND push_and b_exp pop_operador exp2 .

    OR              reduce using rule 109 (exp2 -> AND push_and b_exp pop_operador exp2 .)
    SEMICOLON       reduce using rule 109 (exp2 -> AND push_and b_exp pop_operador exp2 .)
    RPAR            reduce using rule 109 (exp2 -> AND push_and b_exp pop_operador exp2 .)
    COMMA           reduce using rule 109 (exp2 -> AND push_and b_exp pop_operador exp2 .)
    RSBRAC          reduce using rule 109 (exp2 -> AND push_and b_exp pop_operador exp2 .)
    TO              reduce using rule 109 (exp2 -> AND push_and b_exp pop_operador exp2 .)


state 299

    (113) exp3 -> LT push_lt c_exp pop_operador exp3 .

    AND             reduce using rule 113 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    OR              reduce using rule 113 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    SEMICOLON       reduce using rule 113 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    RPAR            reduce using rule 113 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    COMMA           reduce using rule 113 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    RSBRAC          reduce using rule 113 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    TO              reduce using rule 113 (exp3 -> LT push_lt c_exp pop_operador exp3 .)


state 300

    (114) exp3 -> GT push_gt c_exp pop_operador exp3 .

    AND             reduce using rule 114 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    OR              reduce using rule 114 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    SEMICOLON       reduce using rule 114 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    RPAR            reduce using rule 114 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    COMMA           reduce using rule 114 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    RSBRAC          reduce using rule 114 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    TO              reduce using rule 114 (exp3 -> GT push_gt c_exp pop_operador exp3 .)


state 301

    (115) exp3 -> COMP push_comp c_exp pop_operador exp3 .

    AND             reduce using rule 115 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    OR              reduce using rule 115 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    SEMICOLON       reduce using rule 115 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    RPAR            reduce using rule 115 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    COMMA           reduce using rule 115 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    RSBRAC          reduce using rule 115 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    TO              reduce using rule 115 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)


state 302

    (116) exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .

    AND             reduce using rule 116 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    OR              reduce using rule 116 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    SEMICOLON       reduce using rule 116 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    RPAR            reduce using rule 116 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    COMMA           reduce using rule 116 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    RSBRAC          reduce using rule 116 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    TO              reduce using rule 116 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)


state 303

    (123) exp4 -> PLUS push_plus d_exp pop_operador exp4 .

    LT              reduce using rule 123 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    GT              reduce using rule 123 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    COMP            reduce using rule 123 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    NOTEQ           reduce using rule 123 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    AND             reduce using rule 123 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    OR              reduce using rule 123 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    SEMICOLON       reduce using rule 123 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    RPAR            reduce using rule 123 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    COMMA           reduce using rule 123 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    RSBRAC          reduce using rule 123 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    TO              reduce using rule 123 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)


state 304

    (124) exp4 -> MINUS push_minus d_exp pop_operador exp4 .

    LT              reduce using rule 124 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    GT              reduce using rule 124 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    COMP            reduce using rule 124 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    NOTEQ           reduce using rule 124 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    AND             reduce using rule 124 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    OR              reduce using rule 124 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    SEMICOLON       reduce using rule 124 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    RPAR            reduce using rule 124 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    COMMA           reduce using rule 124 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    RSBRAC          reduce using rule 124 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    TO              reduce using rule 124 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)


state 305

    (129) exp5 -> MULT push_mult e_exp pop_operador exp5 .

    PLUS            reduce using rule 129 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    MINUS           reduce using rule 129 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    LT              reduce using rule 129 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    GT              reduce using rule 129 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    COMP            reduce using rule 129 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    NOTEQ           reduce using rule 129 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    AND             reduce using rule 129 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    OR              reduce using rule 129 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    SEMICOLON       reduce using rule 129 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    RPAR            reduce using rule 129 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    COMMA           reduce using rule 129 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    RSBRAC          reduce using rule 129 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    TO              reduce using rule 129 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)


state 306

    (130) exp5 -> DIV push_div e_exp pop_operador exp5 .

    PLUS            reduce using rule 130 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    MINUS           reduce using rule 130 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    LT              reduce using rule 130 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    GT              reduce using rule 130 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    COMP            reduce using rule 130 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    NOTEQ           reduce using rule 130 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    AND             reduce using rule 130 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    OR              reduce using rule 130 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    SEMICOLON       reduce using rule 130 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    RPAR            reduce using rule 130 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    COMMA           reduce using rule 130 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    RSBRAC          reduce using rule 130 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    TO              reduce using rule 130 (exp5 -> DIV push_div e_exp pop_operador exp5 .)


state 307

    (65) variable3 -> LSBRAC expresion . RSBRAC

    RSBRAC          shift and go to state 316


state 308

    (42) funcion3 -> COMMA ID COLON tipo funcion3 .

    RPAR            reduce using rule 42 (funcion3 -> COMMA ID COLON tipo funcion3 .)


state 309

    (67) condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .

    IF              reduce using rule 67 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    READ            reduce using rule 67 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    WRITE           reduce using rule 67 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    WHILE           reduce using rule 67 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    FROM            reduce using rule 67 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    RETURN          reduce using rule 67 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    ID              reduce using rule 67 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    RCBRAC          reduce using rule 67 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)


state 310

    (69) fill -> e .

    IF              reduce using rule 69 (fill -> e .)
    READ            reduce using rule 69 (fill -> e .)
    WRITE           reduce using rule 69 (fill -> e .)
    WHILE           reduce using rule 69 (fill -> e .)
    FROM            reduce using rule 69 (fill -> e .)
    RETURN          reduce using rule 69 (fill -> e .)
    ID              reduce using rule 69 (fill -> e .)
    RCBRAC          reduce using rule 69 (fill -> e .)


state 311

    (70) condicion1 -> ELSE goto . bloque
    (48) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 77

    bloque                         shift and go to state 317

state 312

    (72) goto -> e .

    LCBRAC          reduce using rule 72 (goto -> e .)


state 313

    (80) llamada3 -> COMMA expresion cuad_param . llamada3
    (80) llamada3 -> . COMMA expresion cuad_param llamada3
    (81) llamada3 -> . e
    (147) e -> .

    COMMA           shift and go to state 264
    RPAR            reduce using rule 147 (e -> .)

    llamada3                       shift and go to state 318
    e                              shift and go to state 265

state 314

    (91) ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque . return_while
    (93) return_while -> . e
    (147) e -> .

    IF              reduce using rule 147 (e -> .)
    READ            reduce using rule 147 (e -> .)
    WRITE           reduce using rule 147 (e -> .)
    WHILE           reduce using rule 147 (e -> .)
    FROM            reduce using rule 147 (e -> .)
    RETURN          reduce using rule 147 (e -> .)
    ID              reduce using rule 147 (e -> .)
    RCBRAC          reduce using rule 147 (e -> .)

    return_while                   shift and go to state 319
    e                              shift and go to state 320

state 315

    (94) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion . asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go
    (96) asign_exp -> . e
    (147) e -> .

    RPAR            reduce using rule 147 (e -> .)

    asign_exp                      shift and go to state 321
    e                              shift and go to state 322

state 316

    (65) variable3 -> LSBRAC expresion RSBRAC .

    EQ              reduce using rule 65 (variable3 -> LSBRAC expresion RSBRAC .)
    MULT            reduce using rule 65 (variable3 -> LSBRAC expresion RSBRAC .)
    DIV             reduce using rule 65 (variable3 -> LSBRAC expresion RSBRAC .)
    PLUS            reduce using rule 65 (variable3 -> LSBRAC expresion RSBRAC .)
    MINUS           reduce using rule 65 (variable3 -> LSBRAC expresion RSBRAC .)
    LT              reduce using rule 65 (variable3 -> LSBRAC expresion RSBRAC .)
    GT              reduce using rule 65 (variable3 -> LSBRAC expresion RSBRAC .)
    COMP            reduce using rule 65 (variable3 -> LSBRAC expresion RSBRAC .)
    NOTEQ           reduce using rule 65 (variable3 -> LSBRAC expresion RSBRAC .)
    AND             reduce using rule 65 (variable3 -> LSBRAC expresion RSBRAC .)
    OR              reduce using rule 65 (variable3 -> LSBRAC expresion RSBRAC .)
    SEMICOLON       reduce using rule 65 (variable3 -> LSBRAC expresion RSBRAC .)
    RPAR            reduce using rule 65 (variable3 -> LSBRAC expresion RSBRAC .)
    COMMA           reduce using rule 65 (variable3 -> LSBRAC expresion RSBRAC .)
    RSBRAC          reduce using rule 65 (variable3 -> LSBRAC expresion RSBRAC .)
    TO              reduce using rule 65 (variable3 -> LSBRAC expresion RSBRAC .)


state 317

    (70) condicion1 -> ELSE goto bloque .

    IF              reduce using rule 70 (condicion1 -> ELSE goto bloque .)
    READ            reduce using rule 70 (condicion1 -> ELSE goto bloque .)
    WRITE           reduce using rule 70 (condicion1 -> ELSE goto bloque .)
    WHILE           reduce using rule 70 (condicion1 -> ELSE goto bloque .)
    FROM            reduce using rule 70 (condicion1 -> ELSE goto bloque .)
    RETURN          reduce using rule 70 (condicion1 -> ELSE goto bloque .)
    ID              reduce using rule 70 (condicion1 -> ELSE goto bloque .)
    RCBRAC          reduce using rule 70 (condicion1 -> ELSE goto bloque .)


state 318

    (80) llamada3 -> COMMA expresion cuad_param llamada3 .

    RPAR            reduce using rule 80 (llamada3 -> COMMA expresion cuad_param llamada3 .)


state 319

    (91) ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .

    IF              reduce using rule 91 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    READ            reduce using rule 91 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    WRITE           reduce using rule 91 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    WHILE           reduce using rule 91 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    FROM            reduce using rule 91 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    RETURN          reduce using rule 91 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    ID              reduce using rule 91 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    RCBRAC          reduce using rule 91 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)


state 320

    (93) return_while -> e .

    IF              reduce using rule 93 (return_while -> e .)
    READ            reduce using rule 93 (return_while -> e .)
    WRITE           reduce using rule 93 (return_while -> e .)
    WHILE           reduce using rule 93 (return_while -> e .)
    FROM            reduce using rule 93 (return_while -> e .)
    RETURN          reduce using rule 93 (return_while -> e .)
    ID              reduce using rule 93 (return_while -> e .)
    RCBRAC          reduce using rule 93 (return_while -> e .)


state 321

    (94) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp . migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go
    (98) migaja -> . e
    (147) e -> .

    RPAR            reduce using rule 147 (e -> .)

    migaja                         shift and go to state 323
    e                              shift and go to state 324

state 322

    (96) asign_exp -> e .

    RPAR            reduce using rule 96 (asign_exp -> e .)


state 323

    (94) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja . push_lt pop_for gotoF RPAR DO bloque update_fill_go
    (118) push_lt -> . e
    (147) e -> .

    RPAR            reduce using rule 147 (e -> .)

    push_lt                        shift and go to state 325
    e                              shift and go to state 219

state 324

    (98) migaja -> e .

    RPAR            reduce using rule 98 (migaja -> e .)


state 325

    (94) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt . pop_for gotoF RPAR DO bloque update_fill_go
    (97) pop_for -> . e
    (147) e -> .

    RPAR            reduce using rule 147 (e -> .)

    pop_for                        shift and go to state 326
    e                              shift and go to state 327

state 326

    (94) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for . gotoF RPAR DO bloque update_fill_go
    (68) gotoF -> . e
    (147) e -> .

    RPAR            reduce using rule 147 (e -> .)

    gotoF                          shift and go to state 328
    e                              shift and go to state 238

state 327

    (97) pop_for -> e .

    RPAR            reduce using rule 97 (pop_for -> e .)


state 328

    (94) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF . RPAR DO bloque update_fill_go

    RPAR            shift and go to state 329


state 329

    (94) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR . DO bloque update_fill_go

    DO              shift and go to state 330


state 330

    (94) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO . bloque update_fill_go
    (48) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 77

    bloque                         shift and go to state 331

state 331

    (94) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque . update_fill_go
    (99) update_fill_go -> . push_plus push1 pop_operfor asign_var
    (126) push_plus -> . e
    (147) e -> .

    IF              reduce using rule 147 (e -> .)
    READ            reduce using rule 147 (e -> .)
    WRITE           reduce using rule 147 (e -> .)
    WHILE           reduce using rule 147 (e -> .)
    FROM            reduce using rule 147 (e -> .)
    RETURN          reduce using rule 147 (e -> .)
    ID              reduce using rule 147 (e -> .)
    RCBRAC          reduce using rule 147 (e -> .)

    update_fill_go                 shift and go to state 332
    push_plus                      shift and go to state 333
    e                              shift and go to state 227

state 332

    (94) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go .

    IF              reduce using rule 94 (ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go .)
    READ            reduce using rule 94 (ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go .)
    WRITE           reduce using rule 94 (ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go .)
    WHILE           reduce using rule 94 (ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go .)
    FROM            reduce using rule 94 (ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go .)
    RETURN          reduce using rule 94 (ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go .)
    ID              reduce using rule 94 (ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go .)
    RCBRAC          reduce using rule 94 (ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go .)


state 333

    (99) update_fill_go -> push_plus . push1 pop_operfor asign_var
    (100) push1 -> . e
    (147) e -> .

    IF              reduce using rule 147 (e -> .)
    READ            reduce using rule 147 (e -> .)
    WRITE           reduce using rule 147 (e -> .)
    WHILE           reduce using rule 147 (e -> .)
    FROM            reduce using rule 147 (e -> .)
    RETURN          reduce using rule 147 (e -> .)
    ID              reduce using rule 147 (e -> .)
    RCBRAC          reduce using rule 147 (e -> .)

    push1                          shift and go to state 334
    e                              shift and go to state 335

state 334

    (99) update_fill_go -> push_plus push1 . pop_operfor asign_var
    (101) pop_operfor -> . e
    (147) e -> .

    IF              reduce using rule 147 (e -> .)
    READ            reduce using rule 147 (e -> .)
    WRITE           reduce using rule 147 (e -> .)
    WHILE           reduce using rule 147 (e -> .)
    FROM            reduce using rule 147 (e -> .)
    RETURN          reduce using rule 147 (e -> .)
    ID              reduce using rule 147 (e -> .)
    RCBRAC          reduce using rule 147 (e -> .)

    pop_operfor                    shift and go to state 336
    e                              shift and go to state 337

state 335

    (100) push1 -> e .

    IF              reduce using rule 100 (push1 -> e .)
    READ            reduce using rule 100 (push1 -> e .)
    WRITE           reduce using rule 100 (push1 -> e .)
    WHILE           reduce using rule 100 (push1 -> e .)
    FROM            reduce using rule 100 (push1 -> e .)
    RETURN          reduce using rule 100 (push1 -> e .)
    ID              reduce using rule 100 (push1 -> e .)
    RCBRAC          reduce using rule 100 (push1 -> e .)


state 336

    (99) update_fill_go -> push_plus push1 pop_operfor . asign_var
    (95) asign_var -> . e
    (147) e -> .

    IF              reduce using rule 147 (e -> .)
    READ            reduce using rule 147 (e -> .)
    WRITE           reduce using rule 147 (e -> .)
    WHILE           reduce using rule 147 (e -> .)
    FROM            reduce using rule 147 (e -> .)
    RETURN          reduce using rule 147 (e -> .)
    ID              reduce using rule 147 (e -> .)
    RCBRAC          reduce using rule 147 (e -> .)

    asign_var                      shift and go to state 338
    e                              shift and go to state 273

state 337

    (101) pop_operfor -> e .

    IF              reduce using rule 101 (pop_operfor -> e .)
    READ            reduce using rule 101 (pop_operfor -> e .)
    WRITE           reduce using rule 101 (pop_operfor -> e .)
    WHILE           reduce using rule 101 (pop_operfor -> e .)
    FROM            reduce using rule 101 (pop_operfor -> e .)
    RETURN          reduce using rule 101 (pop_operfor -> e .)
    ID              reduce using rule 101 (pop_operfor -> e .)
    RCBRAC          reduce using rule 101 (pop_operfor -> e .)


state 338

    (99) update_fill_go -> push_plus push1 pop_operfor asign_var .

    IF              reduce using rule 99 (update_fill_go -> push_plus push1 pop_operfor asign_var .)
    READ            reduce using rule 99 (update_fill_go -> push_plus push1 pop_operfor asign_var .)
    WRITE           reduce using rule 99 (update_fill_go -> push_plus push1 pop_operfor asign_var .)
    WHILE           reduce using rule 99 (update_fill_go -> push_plus push1 pop_operfor asign_var .)
    FROM            reduce using rule 99 (update_fill_go -> push_plus push1 pop_operfor asign_var .)
    RETURN          reduce using rule 99 (update_fill_go -> push_plus push1 pop_operfor asign_var .)
    ID              reduce using rule 99 (update_fill_go -> push_plus push1 pop_operfor asign_var .)
    RCBRAC          reduce using rule 99 (update_fill_go -> push_plus push1 pop_operfor asign_var .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VOID in state 72 resolved as shift
WARNING: shift/reduce conflict for INT in state 72 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 72 resolved as shift
WARNING: shift/reduce conflict for STRING in state 72 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 72 resolved as shift
WARNING: shift/reduce conflict for ID in state 74 resolved as shift
WARNING: shift/reduce conflict for VOID in state 83 resolved as shift
WARNING: shift/reduce conflict for INT in state 83 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 83 resolved as shift
WARNING: shift/reduce conflict for STRING in state 83 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 83 resolved as shift
WARNING: shift/reduce conflict for ID in state 84 resolved as shift
WARNING: shift/reduce conflict for DOT in state 106 resolved as shift
WARNING: shift/reduce conflict for VOID in state 111 resolved as shift
WARNING: shift/reduce conflict for INT in state 111 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 111 resolved as shift
WARNING: shift/reduce conflict for STRING in state 111 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 111 resolved as shift
WARNING: shift/reduce conflict for VOID in state 149 resolved as shift
WARNING: shift/reduce conflict for INT in state 149 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 149 resolved as shift
WARNING: shift/reduce conflict for STRING in state 149 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 149 resolved as shift
WARNING: reduce/reduce conflict in state 113 resolved using rule (metodos -> e)
WARNING: rejected rule (funcion -> e) in state 113
WARNING: reduce/reduce conflict in state 160 resolved using rule (texto -> CTESTR)
WARNING: rejected rule (e -> <empty>) in state 160
