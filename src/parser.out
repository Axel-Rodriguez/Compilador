Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON goto_main clase vars funcion main
Rule 2     goto_main -> e
Rule 3     main -> MAIN LPAR RPAR main_start bloque
Rule 4     main_start -> e
Rule 5     clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase
Rule 6     clase -> e
Rule 7     inicializar_clase -> e
Rule 8     clase1 -> LT INHERITS ID GT
Rule 9     clase1 -> e
Rule 10    clase2 -> ATTRIBUTES declaracion atributos asign
Rule 11    clase2 -> e
Rule 12    atributos -> declaracion atributos
Rule 13    atributos -> e
Rule 14    asign -> asignacion asign
Rule 15    asign -> e
Rule 16    clase3 -> METHODS funcion metodos
Rule 17    clase3 -> e
Rule 18    metodos -> funcion metodos
Rule 19    metodos -> e
Rule 20    vars -> VAR declaracion declaraciones
Rule 21    vars -> e
Rule 22    declaraciones -> declaracion declaraciones
Rule 23    declaraciones -> e
Rule 24    declaracion -> declaracion1 COLON declaracion5 SEMICOLON
Rule 25    declaracion1 -> ID declaracion2 declaracion4
Rule 26    declaracion2 -> LSBRAC CTEI RSBRAC declaracion3
Rule 27    declaracion2 -> e
Rule 28    declaracion3 -> LSBRAC CTEI RSBRAC
Rule 29    declaracion3 -> e
Rule 30    declaracion4 -> COMMA declaracion1
Rule 31    declaracion4 -> e
Rule 32    declaracion5 -> tipo
Rule 33    declaracion5 -> ID
Rule 34    funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR bloque_return reiniciar_func funcion
Rule 35    funcion -> e
Rule 36    guardar_id -> ID
Rule 37    reiniciar_func -> e
Rule 38    funcion1 -> tipo
Rule 39    funcion1 -> VOID funcion_void
Rule 40    funcion_void -> e
Rule 41    funcion2 -> ID COLON tipo funcion3
Rule 42    funcion2 -> e
Rule 43    funcion3 -> COMMA ID COLON tipo funcion3
Rule 44    funcion3 -> e
Rule 45    tipo -> INT
Rule 46    tipo -> FLOAT
Rule 47    tipo -> STRING
Rule 48    tipo -> BOOL
Rule 49    bloque -> LCBRAC estatutos RCBRAC
Rule 50    bloque_return -> LCBRAC estatutos regresar RCBRAC
Rule 51    bloque_return -> LCBRAC estatutos regresar_void RCBRAC
Rule 52    estatutos -> estatuto estatutos
Rule 53    estatutos -> e
Rule 54    estatuto -> asignacion
Rule 55    estatuto -> condicion
Rule 56    estatuto -> llamada_void SEMICOLON
Rule 57    estatuto -> leer
Rule 58    estatuto -> escribir
Rule 59    estatuto -> ciclo_w
Rule 60    estatuto -> ciclo_f
Rule 61    asignacion -> variable EQ expresion SEMICOLON atomic_assign
Rule 62    atomic_assign -> e
Rule 63    variable -> ID variable1 variable2
Rule 64    variable1 -> DOT ID
Rule 65    variable1 -> e
Rule 66    variable2 -> LSBRAC expresion RSBRAC variable3
Rule 67    variable2 -> e
Rule 68    variable3 -> LSBRAC expresion RSBRAC
Rule 69    variable3 -> e
Rule 70    condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill
Rule 71    gotoF -> e
Rule 72    fill -> e
Rule 73    condicion1 -> ELSE goto bloque
Rule 74    condicion1 -> e
Rule 75    goto -> e
Rule 76    llamada -> validar_id llamada1 LPAR llamada2 RPAR
Rule 77    llamada_void -> validar_id llamada1 LPAR llamada2 RPAR
Rule 78    validar_id -> ID
Rule 79    llamada1 -> DOT ID
Rule 80    llamada1 -> e
Rule 81    llamada2 -> expresion cuad_param llamada3
Rule 82    llamada2 -> e
Rule 83    cuad_param -> e
Rule 84    llamada3 -> COMMA expresion cuad_param llamada3
Rule 85    llamada3 -> e
Rule 86    leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON
Rule 87    add_read -> e
Rule 88    escribir -> WRITE LPAR escribir1 RPAR SEMICOLON
Rule 89    escribir1 -> texto add_print generar_cuadr escribir2
Rule 90    escribir1 -> expresion add_print generar_cuadr escribir2
Rule 91    add_print -> e
Rule 92    escribir2 -> COMMA escribir1
Rule 93    escribir2 -> e
Rule 94    texto -> CTESTR
Rule 95    ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while
Rule 96    push_while -> e
Rule 97    return_while -> e
Rule 98    ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
Rule 99    for_temp -> e
Rule 100   migaja -> e
Rule 101   update_fill_go -> save_aux push_plus push1 pop_operador atomic_assign
Rule 102   asign_aux -> e
Rule 103   asign_aux2 -> e
Rule 104   push1 -> e
Rule 105   save_aux -> e
Rule 106   save_aux2 -> e
Rule 107   regresar_void -> RETURN SEMICOLON
Rule 108   regresar -> RETURN expresion SEMICOLON
Rule 109   expresion -> a_exp exp1
Rule 110   exp1 -> OR push_or a_exp pop_operador exp1
Rule 111   exp1 -> e
Rule 112   push_or -> e
Rule 113   pop_operador -> e
Rule 114   a_exp -> b_exp exp2
Rule 115   exp2 -> AND push_and b_exp pop_operador exp2
Rule 116   exp2 -> e
Rule 117   push_and -> e
Rule 118   b_exp -> c_exp exp3
Rule 119   exp3 -> LT push_lt c_exp pop_operador exp3
Rule 120   exp3 -> GT push_gt c_exp pop_operador exp3
Rule 121   exp3 -> COMP push_comp c_exp pop_operador exp3
Rule 122   exp3 -> NOTEQ push_noteq c_exp pop_operador exp3
Rule 123   exp3 -> e
Rule 124   push_lt -> e
Rule 125   push_gt -> e
Rule 126   push_comp -> e
Rule 127   push_noteq -> e
Rule 128   c_exp -> d_exp exp4
Rule 129   exp4 -> PLUS push_plus d_exp pop_operador exp4
Rule 130   exp4 -> MINUS push_minus d_exp pop_operador exp4
Rule 131   exp4 -> e
Rule 132   push_plus -> e
Rule 133   push_minus -> e
Rule 134   d_exp -> e_exp exp5
Rule 135   exp5 -> MULT push_mult e_exp pop_operador exp5
Rule 136   exp5 -> DIV push_div e_exp pop_operador exp5
Rule 137   exp5 -> e
Rule 138   push_mult -> e
Rule 139   push_div -> e
Rule 140   e_exp -> LPAR expresion RPAR
Rule 141   e_exp -> var_cte
Rule 142   e_exp -> variable
Rule 143   e_exp -> llamada
Rule 144   var_cte -> CTEI ctei
Rule 145   var_cte -> CTEF ctef
Rule 146   var_cte -> CTESTR ctestr
Rule 147   var_cte -> CTEB cteb
Rule 148   ctei -> e
Rule 149   ctef -> e
Rule 150   ctestr -> e
Rule 151   cteb -> e
Rule 152   generar_cuadr -> e
Rule 153   e -> <empty>

Terminals, with rules where they appear

AND                  : 115
ATTRIBUTES           : 10
BOOL                 : 48
CLASS                : 5
COLON                : 24 41 43
COMMA                : 30 43 84 92
COMP                 : 121
CTEB                 : 147
CTEF                 : 145
CTEI                 : 26 28 144
CTESTR               : 94 146
DIV                  : 136
DO                   : 95 98
DOT                  : 64 79
ELSE                 : 73
EQ                   : 61 98
FLOAT                : 46
FROM                 : 98
FUNCTION             : 34
GT                   : 8 120
ID                   : 1 5 8 25 33 36 41 43 63 64 78 79
IF                   : 70
INHERITS             : 8
INT                  : 45
LCBRAC               : 5 49 50 51
LPAR                 : 3 34 70 76 77 86 88 95 98 140
LSBRAC               : 26 28 66 68
LT                   : 8 119
MAIN                 : 3
METHODS              : 16
MINUS                : 130
MULT                 : 135
NOTEQ                : 122
OR                   : 110
PLUS                 : 129
PROGRAM              : 1
RCBRAC               : 5 49 50 51
READ                 : 86
RETURN               : 107 108
RPAR                 : 3 34 70 76 77 86 88 95 98 140
RSBRAC               : 26 28 66 68
SEMICOLON            : 1 24 56 61 86 88 107 108
STRING               : 47
TO                   : 98
VAR                  : 20
VOID                 : 39
WHILE                : 95
WRITE                : 88
error                : 

Nonterminals, with rules where they appear

a_exp                : 109 110
add_print            : 89 90
add_read             : 86
asign                : 10 14
asign_aux            : 98
asign_aux2           : 98
asignacion           : 14 54
atomic_assign        : 61 98 98 101
atributos            : 10 12
b_exp                : 114 115
bloque               : 3 70 73 95 98
bloque_return        : 34
c_exp                : 118 119 120 121 122
ciclo_f              : 60
ciclo_w              : 59
clase                : 1 5
clase1               : 5
clase2               : 5
clase3               : 5
condicion            : 55
condicion1           : 70
cteb                 : 147
ctef                 : 145
ctei                 : 144
ctestr               : 146
cuad_param           : 81 84
d_exp                : 128 129 130
declaracion          : 10 12 20 22
declaracion1         : 24 30
declaracion2         : 25
declaracion3         : 26
declaracion4         : 25
declaracion5         : 24
declaraciones        : 20 22
e                    : 2 4 6 7 9 11 13 15 17 19 21 23 27 29 31 35 37 40 42 44 53 62 65 67 69 71 72 74 75 80 82 83 85 87 91 93 96 97 99 100 102 103 104 105 106 111 112 113 116 117 123 124 125 126 127 131 132 133 137 138 139 148 149 150 151 152
e_exp                : 134 135 136
escribir             : 58
escribir1            : 88 92
escribir2            : 89 90
estatuto             : 52
estatutos            : 49 50 51 52
exp1                 : 109 110
exp2                 : 114 115
exp3                 : 118 119 120 121 122
exp4                 : 128 129 130
exp5                 : 134 135 136
expresion            : 61 66 68 70 81 84 90 95 98 98 108 140
fill                 : 70
for_temp             : 98
funcion              : 1 16 18 34
funcion1             : 34
funcion2             : 34
funcion3             : 41 43
funcion_void         : 39
generar_cuadr        : 86 89 90
goto                 : 73
gotoF                : 70 95 98
goto_main            : 1
guardar_id           : 34
inicializar_clase    : 5
leer                 : 57
llamada              : 143
llamada1             : 76 77
llamada2             : 76 77
llamada3             : 81 84
llamada_void         : 56
main                 : 1
main_start           : 3
metodos              : 16 18
migaja               : 98
pop_operador         : 98 101 110 115 119 120 121 122 129 130 135 136
programa             : 0
push1                : 101
push_and             : 115
push_comp            : 121
push_div             : 136
push_gt              : 120
push_lt              : 98 119
push_minus           : 130
push_mult            : 135
push_noteq           : 122
push_or              : 110
push_plus            : 101 129
push_while           : 95
regresar             : 50
regresar_void        : 51
reiniciar_func       : 34
return_while         : 95
save_aux             : 98 98 101
save_aux2            : 98
texto                : 89
tipo                 : 32 38 41 43
update_fill_go       : 98
validar_id           : 76 77
var_cte              : 141
variable             : 61 86 98 142
variable1            : 63
variable2            : 63
variable3            : 66
vars                 : 1

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON goto_main clase vars funcion main

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOLON goto_main clase vars funcion main

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOLON goto_main clase vars funcion main

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . goto_main clase vars funcion main
    (2) goto_main -> . e
    (153) e -> .

    CLASS           reduce using rule 153 (e -> .)
    VAR             reduce using rule 153 (e -> .)
    VOID            reduce using rule 153 (e -> .)
    INT             reduce using rule 153 (e -> .)
    FLOAT           reduce using rule 153 (e -> .)
    STRING          reduce using rule 153 (e -> .)
    BOOL            reduce using rule 153 (e -> .)
    MAIN            reduce using rule 153 (e -> .)

    goto_main                      shift and go to state 5
    e                              shift and go to state 6

state 5

    (1) programa -> PROGRAM ID SEMICOLON goto_main . clase vars funcion main
    (5) clase -> . CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase
    (6) clase -> . e
    (153) e -> .

    CLASS           shift and go to state 8
    VAR             reduce using rule 153 (e -> .)
    VOID            reduce using rule 153 (e -> .)
    INT             reduce using rule 153 (e -> .)
    FLOAT           reduce using rule 153 (e -> .)
    STRING          reduce using rule 153 (e -> .)
    BOOL            reduce using rule 153 (e -> .)
    MAIN            reduce using rule 153 (e -> .)

    clase                          shift and go to state 7
    e                              shift and go to state 9

state 6

    (2) goto_main -> e .

    CLASS           reduce using rule 2 (goto_main -> e .)
    VAR             reduce using rule 2 (goto_main -> e .)
    VOID            reduce using rule 2 (goto_main -> e .)
    INT             reduce using rule 2 (goto_main -> e .)
    FLOAT           reduce using rule 2 (goto_main -> e .)
    STRING          reduce using rule 2 (goto_main -> e .)
    BOOL            reduce using rule 2 (goto_main -> e .)
    MAIN            reduce using rule 2 (goto_main -> e .)


state 7

    (1) programa -> PROGRAM ID SEMICOLON goto_main clase . vars funcion main
    (20) vars -> . VAR declaracion declaraciones
    (21) vars -> . e
    (153) e -> .

    VAR             shift and go to state 11
    VOID            reduce using rule 153 (e -> .)
    INT             reduce using rule 153 (e -> .)
    FLOAT           reduce using rule 153 (e -> .)
    STRING          reduce using rule 153 (e -> .)
    BOOL            reduce using rule 153 (e -> .)
    MAIN            reduce using rule 153 (e -> .)

    vars                           shift and go to state 10
    e                              shift and go to state 12

state 8

    (5) clase -> CLASS . inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase
    (7) inicializar_clase -> . e
    (153) e -> .

    ID              reduce using rule 153 (e -> .)

    inicializar_clase              shift and go to state 13
    e                              shift and go to state 14

state 9

    (6) clase -> e .

    VAR             reduce using rule 6 (clase -> e .)
    VOID            reduce using rule 6 (clase -> e .)
    INT             reduce using rule 6 (clase -> e .)
    FLOAT           reduce using rule 6 (clase -> e .)
    STRING          reduce using rule 6 (clase -> e .)
    BOOL            reduce using rule 6 (clase -> e .)
    MAIN            reduce using rule 6 (clase -> e .)


state 10

    (1) programa -> PROGRAM ID SEMICOLON goto_main clase vars . funcion main
    (34) funcion -> . funcion1 FUNCTION guardar_id LPAR funcion2 RPAR bloque_return reiniciar_func funcion
    (35) funcion -> . e
    (38) funcion1 -> . tipo
    (39) funcion1 -> . VOID funcion_void
    (153) e -> .
    (45) tipo -> . INT
    (46) tipo -> . FLOAT
    (47) tipo -> . STRING
    (48) tipo -> . BOOL

    VOID            shift and go to state 19
    MAIN            reduce using rule 153 (e -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

    funcion                        shift and go to state 15
    funcion1                       shift and go to state 16
    e                              shift and go to state 17
    tipo                           shift and go to state 18

state 11

    (20) vars -> VAR . declaracion declaraciones
    (24) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (25) declaracion1 -> . ID declaracion2 declaracion4

    ID              shift and go to state 26

    declaracion                    shift and go to state 24
    declaracion1                   shift and go to state 25

state 12

    (21) vars -> e .

    VOID            reduce using rule 21 (vars -> e .)
    INT             reduce using rule 21 (vars -> e .)
    FLOAT           reduce using rule 21 (vars -> e .)
    STRING          reduce using rule 21 (vars -> e .)
    BOOL            reduce using rule 21 (vars -> e .)
    MAIN            reduce using rule 21 (vars -> e .)


state 13

    (5) clase -> CLASS inicializar_clase . ID clase1 LCBRAC clase2 clase3 RCBRAC clase

    ID              shift and go to state 27


state 14

    (7) inicializar_clase -> e .

    ID              reduce using rule 7 (inicializar_clase -> e .)


state 15

    (1) programa -> PROGRAM ID SEMICOLON goto_main clase vars funcion . main
    (3) main -> . MAIN LPAR RPAR main_start bloque

    MAIN            shift and go to state 29

    main                           shift and go to state 28

state 16

    (34) funcion -> funcion1 . FUNCTION guardar_id LPAR funcion2 RPAR bloque_return reiniciar_func funcion

    FUNCTION        shift and go to state 30


state 17

    (35) funcion -> e .

    MAIN            reduce using rule 35 (funcion -> e .)
    VOID            reduce using rule 35 (funcion -> e .)
    INT             reduce using rule 35 (funcion -> e .)
    FLOAT           reduce using rule 35 (funcion -> e .)
    STRING          reduce using rule 35 (funcion -> e .)
    BOOL            reduce using rule 35 (funcion -> e .)
    RCBRAC          reduce using rule 35 (funcion -> e .)


state 18

    (38) funcion1 -> tipo .

    FUNCTION        reduce using rule 38 (funcion1 -> tipo .)


state 19

    (39) funcion1 -> VOID . funcion_void
    (40) funcion_void -> . e
    (153) e -> .

    FUNCTION        reduce using rule 153 (e -> .)

    funcion_void                   shift and go to state 31
    e                              shift and go to state 32

state 20

    (45) tipo -> INT .

    FUNCTION        reduce using rule 45 (tipo -> INT .)
    SEMICOLON       reduce using rule 45 (tipo -> INT .)
    COMMA           reduce using rule 45 (tipo -> INT .)
    RPAR            reduce using rule 45 (tipo -> INT .)


state 21

    (46) tipo -> FLOAT .

    FUNCTION        reduce using rule 46 (tipo -> FLOAT .)
    SEMICOLON       reduce using rule 46 (tipo -> FLOAT .)
    COMMA           reduce using rule 46 (tipo -> FLOAT .)
    RPAR            reduce using rule 46 (tipo -> FLOAT .)


state 22

    (47) tipo -> STRING .

    FUNCTION        reduce using rule 47 (tipo -> STRING .)
    SEMICOLON       reduce using rule 47 (tipo -> STRING .)
    COMMA           reduce using rule 47 (tipo -> STRING .)
    RPAR            reduce using rule 47 (tipo -> STRING .)


state 23

    (48) tipo -> BOOL .

    FUNCTION        reduce using rule 48 (tipo -> BOOL .)
    SEMICOLON       reduce using rule 48 (tipo -> BOOL .)
    COMMA           reduce using rule 48 (tipo -> BOOL .)
    RPAR            reduce using rule 48 (tipo -> BOOL .)


state 24

    (20) vars -> VAR declaracion . declaraciones
    (22) declaraciones -> . declaracion declaraciones
    (23) declaraciones -> . e
    (24) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (153) e -> .
    (25) declaracion1 -> . ID declaracion2 declaracion4

    VOID            reduce using rule 153 (e -> .)
    INT             reduce using rule 153 (e -> .)
    FLOAT           reduce using rule 153 (e -> .)
    STRING          reduce using rule 153 (e -> .)
    BOOL            reduce using rule 153 (e -> .)
    MAIN            reduce using rule 153 (e -> .)
    ID              shift and go to state 26

    declaracion                    shift and go to state 33
    declaraciones                  shift and go to state 34
    e                              shift and go to state 35
    declaracion1                   shift and go to state 25

state 25

    (24) declaracion -> declaracion1 . COLON declaracion5 SEMICOLON

    COLON           shift and go to state 36


state 26

    (25) declaracion1 -> ID . declaracion2 declaracion4
    (26) declaracion2 -> . LSBRAC CTEI RSBRAC declaracion3
    (27) declaracion2 -> . e
    (153) e -> .

    LSBRAC          shift and go to state 38
    COMMA           reduce using rule 153 (e -> .)
    COLON           reduce using rule 153 (e -> .)

    declaracion2                   shift and go to state 37
    e                              shift and go to state 39

state 27

    (5) clase -> CLASS inicializar_clase ID . clase1 LCBRAC clase2 clase3 RCBRAC clase
    (8) clase1 -> . LT INHERITS ID GT
    (9) clase1 -> . e
    (153) e -> .

    LT              shift and go to state 41
    LCBRAC          reduce using rule 153 (e -> .)

    clase1                         shift and go to state 40
    e                              shift and go to state 42

state 28

    (1) programa -> PROGRAM ID SEMICOLON goto_main clase vars funcion main .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON goto_main clase vars funcion main .)


state 29

    (3) main -> MAIN . LPAR RPAR main_start bloque

    LPAR            shift and go to state 43


state 30

    (34) funcion -> funcion1 FUNCTION . guardar_id LPAR funcion2 RPAR bloque_return reiniciar_func funcion
    (36) guardar_id -> . ID

    ID              shift and go to state 45

    guardar_id                     shift and go to state 44

state 31

    (39) funcion1 -> VOID funcion_void .

    FUNCTION        reduce using rule 39 (funcion1 -> VOID funcion_void .)


state 32

    (40) funcion_void -> e .

    FUNCTION        reduce using rule 40 (funcion_void -> e .)


state 33

    (22) declaraciones -> declaracion . declaraciones
    (22) declaraciones -> . declaracion declaraciones
    (23) declaraciones -> . e
    (24) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (153) e -> .
    (25) declaracion1 -> . ID declaracion2 declaracion4

    VOID            reduce using rule 153 (e -> .)
    INT             reduce using rule 153 (e -> .)
    FLOAT           reduce using rule 153 (e -> .)
    STRING          reduce using rule 153 (e -> .)
    BOOL            reduce using rule 153 (e -> .)
    MAIN            reduce using rule 153 (e -> .)
    ID              shift and go to state 26

    declaracion                    shift and go to state 33
    declaraciones                  shift and go to state 46
    e                              shift and go to state 35
    declaracion1                   shift and go to state 25

state 34

    (20) vars -> VAR declaracion declaraciones .

    VOID            reduce using rule 20 (vars -> VAR declaracion declaraciones .)
    INT             reduce using rule 20 (vars -> VAR declaracion declaraciones .)
    FLOAT           reduce using rule 20 (vars -> VAR declaracion declaraciones .)
    STRING          reduce using rule 20 (vars -> VAR declaracion declaraciones .)
    BOOL            reduce using rule 20 (vars -> VAR declaracion declaraciones .)
    MAIN            reduce using rule 20 (vars -> VAR declaracion declaraciones .)


state 35

    (23) declaraciones -> e .

    VOID            reduce using rule 23 (declaraciones -> e .)
    INT             reduce using rule 23 (declaraciones -> e .)
    FLOAT           reduce using rule 23 (declaraciones -> e .)
    STRING          reduce using rule 23 (declaraciones -> e .)
    BOOL            reduce using rule 23 (declaraciones -> e .)
    MAIN            reduce using rule 23 (declaraciones -> e .)


state 36

    (24) declaracion -> declaracion1 COLON . declaracion5 SEMICOLON
    (32) declaracion5 -> . tipo
    (33) declaracion5 -> . ID
    (45) tipo -> . INT
    (46) tipo -> . FLOAT
    (47) tipo -> . STRING
    (48) tipo -> . BOOL

    ID              shift and go to state 49
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

    declaracion5                   shift and go to state 47
    tipo                           shift and go to state 48

state 37

    (25) declaracion1 -> ID declaracion2 . declaracion4
    (30) declaracion4 -> . COMMA declaracion1
    (31) declaracion4 -> . e
    (153) e -> .

    COMMA           shift and go to state 51
    COLON           reduce using rule 153 (e -> .)

    declaracion4                   shift and go to state 50
    e                              shift and go to state 52

state 38

    (26) declaracion2 -> LSBRAC . CTEI RSBRAC declaracion3

    CTEI            shift and go to state 53


state 39

    (27) declaracion2 -> e .

    COMMA           reduce using rule 27 (declaracion2 -> e .)
    COLON           reduce using rule 27 (declaracion2 -> e .)


state 40

    (5) clase -> CLASS inicializar_clase ID clase1 . LCBRAC clase2 clase3 RCBRAC clase

    LCBRAC          shift and go to state 54


state 41

    (8) clase1 -> LT . INHERITS ID GT

    INHERITS        shift and go to state 55


state 42

    (9) clase1 -> e .

    LCBRAC          reduce using rule 9 (clase1 -> e .)


state 43

    (3) main -> MAIN LPAR . RPAR main_start bloque

    RPAR            shift and go to state 56


state 44

    (34) funcion -> funcion1 FUNCTION guardar_id . LPAR funcion2 RPAR bloque_return reiniciar_func funcion

    LPAR            shift and go to state 57


state 45

    (36) guardar_id -> ID .

    LPAR            reduce using rule 36 (guardar_id -> ID .)


state 46

    (22) declaraciones -> declaracion declaraciones .

    VOID            reduce using rule 22 (declaraciones -> declaracion declaraciones .)
    INT             reduce using rule 22 (declaraciones -> declaracion declaraciones .)
    FLOAT           reduce using rule 22 (declaraciones -> declaracion declaraciones .)
    STRING          reduce using rule 22 (declaraciones -> declaracion declaraciones .)
    BOOL            reduce using rule 22 (declaraciones -> declaracion declaraciones .)
    MAIN            reduce using rule 22 (declaraciones -> declaracion declaraciones .)


state 47

    (24) declaracion -> declaracion1 COLON declaracion5 . SEMICOLON

    SEMICOLON       shift and go to state 58


state 48

    (32) declaracion5 -> tipo .

    SEMICOLON       reduce using rule 32 (declaracion5 -> tipo .)


state 49

    (33) declaracion5 -> ID .

    SEMICOLON       reduce using rule 33 (declaracion5 -> ID .)


state 50

    (25) declaracion1 -> ID declaracion2 declaracion4 .

    COLON           reduce using rule 25 (declaracion1 -> ID declaracion2 declaracion4 .)


state 51

    (30) declaracion4 -> COMMA . declaracion1
    (25) declaracion1 -> . ID declaracion2 declaracion4

    ID              shift and go to state 26

    declaracion1                   shift and go to state 59

state 52

    (31) declaracion4 -> e .

    COLON           reduce using rule 31 (declaracion4 -> e .)


state 53

    (26) declaracion2 -> LSBRAC CTEI . RSBRAC declaracion3

    RSBRAC          shift and go to state 60


state 54

    (5) clase -> CLASS inicializar_clase ID clase1 LCBRAC . clase2 clase3 RCBRAC clase
    (10) clase2 -> . ATTRIBUTES declaracion atributos asign
    (11) clase2 -> . e
    (153) e -> .

    ATTRIBUTES      shift and go to state 62
    METHODS         reduce using rule 153 (e -> .)
    RCBRAC          reduce using rule 153 (e -> .)

    clase2                         shift and go to state 61
    e                              shift and go to state 63

state 55

    (8) clase1 -> LT INHERITS . ID GT

    ID              shift and go to state 64


state 56

    (3) main -> MAIN LPAR RPAR . main_start bloque
    (4) main_start -> . e
    (153) e -> .

    LCBRAC          reduce using rule 153 (e -> .)

    main_start                     shift and go to state 65
    e                              shift and go to state 66

state 57

    (34) funcion -> funcion1 FUNCTION guardar_id LPAR . funcion2 RPAR bloque_return reiniciar_func funcion
    (41) funcion2 -> . ID COLON tipo funcion3
    (42) funcion2 -> . e
    (153) e -> .

    ID              shift and go to state 68
    RPAR            reduce using rule 153 (e -> .)

    funcion2                       shift and go to state 67
    e                              shift and go to state 69

state 58

    (24) declaracion -> declaracion1 COLON declaracion5 SEMICOLON .

    ID              reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    VOID            reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    INT             reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    FLOAT           reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    STRING          reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    BOOL            reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    MAIN            reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    METHODS         reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    RCBRAC          reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)


state 59

    (30) declaracion4 -> COMMA declaracion1 .

    COLON           reduce using rule 30 (declaracion4 -> COMMA declaracion1 .)


state 60

    (26) declaracion2 -> LSBRAC CTEI RSBRAC . declaracion3
    (28) declaracion3 -> . LSBRAC CTEI RSBRAC
    (29) declaracion3 -> . e
    (153) e -> .

    LSBRAC          shift and go to state 70
    COMMA           reduce using rule 153 (e -> .)
    COLON           reduce using rule 153 (e -> .)

    declaracion3                   shift and go to state 71
    e                              shift and go to state 72

state 61

    (5) clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 . clase3 RCBRAC clase
    (16) clase3 -> . METHODS funcion metodos
    (17) clase3 -> . e
    (153) e -> .

    METHODS         shift and go to state 74
    RCBRAC          reduce using rule 153 (e -> .)

    clase3                         shift and go to state 73
    e                              shift and go to state 75

state 62

    (10) clase2 -> ATTRIBUTES . declaracion atributos asign
    (24) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (25) declaracion1 -> . ID declaracion2 declaracion4

    ID              shift and go to state 26

    declaracion                    shift and go to state 76
    declaracion1                   shift and go to state 25

state 63

    (11) clase2 -> e .

    METHODS         reduce using rule 11 (clase2 -> e .)
    RCBRAC          reduce using rule 11 (clase2 -> e .)


state 64

    (8) clase1 -> LT INHERITS ID . GT

    GT              shift and go to state 77


state 65

    (3) main -> MAIN LPAR RPAR main_start . bloque
    (49) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 79

    bloque                         shift and go to state 78

state 66

    (4) main_start -> e .

    LCBRAC          reduce using rule 4 (main_start -> e .)


state 67

    (34) funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 . RPAR bloque_return reiniciar_func funcion

    RPAR            shift and go to state 80


state 68

    (41) funcion2 -> ID . COLON tipo funcion3

    COLON           shift and go to state 81


state 69

    (42) funcion2 -> e .

    RPAR            reduce using rule 42 (funcion2 -> e .)


state 70

    (28) declaracion3 -> LSBRAC . CTEI RSBRAC

    CTEI            shift and go to state 82


state 71

    (26) declaracion2 -> LSBRAC CTEI RSBRAC declaracion3 .

    COMMA           reduce using rule 26 (declaracion2 -> LSBRAC CTEI RSBRAC declaracion3 .)
    COLON           reduce using rule 26 (declaracion2 -> LSBRAC CTEI RSBRAC declaracion3 .)


state 72

    (29) declaracion3 -> e .

    COMMA           reduce using rule 29 (declaracion3 -> e .)
    COLON           reduce using rule 29 (declaracion3 -> e .)


state 73

    (5) clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 . RCBRAC clase

    RCBRAC          shift and go to state 83


state 74

    (16) clase3 -> METHODS . funcion metodos
    (34) funcion -> . funcion1 FUNCTION guardar_id LPAR funcion2 RPAR bloque_return reiniciar_func funcion
    (35) funcion -> . e
    (38) funcion1 -> . tipo
    (39) funcion1 -> . VOID funcion_void
    (153) e -> .
    (45) tipo -> . INT
    (46) tipo -> . FLOAT
    (47) tipo -> . STRING
    (48) tipo -> . BOOL

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    VOID            shift and go to state 19
    RCBRAC          reduce using rule 153 (e -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

  ! VOID            [ reduce using rule 153 (e -> .) ]
  ! INT             [ reduce using rule 153 (e -> .) ]
  ! FLOAT           [ reduce using rule 153 (e -> .) ]
  ! STRING          [ reduce using rule 153 (e -> .) ]
  ! BOOL            [ reduce using rule 153 (e -> .) ]

    funcion                        shift and go to state 84
    funcion1                       shift and go to state 16
    e                              shift and go to state 17
    tipo                           shift and go to state 18

state 75

    (17) clase3 -> e .

    RCBRAC          reduce using rule 17 (clase3 -> e .)


state 76

    (10) clase2 -> ATTRIBUTES declaracion . atributos asign
    (12) atributos -> . declaracion atributos
    (13) atributos -> . e
    (24) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (153) e -> .
    (25) declaracion1 -> . ID declaracion2 declaracion4

  ! shift/reduce conflict for ID resolved as shift
    METHODS         reduce using rule 153 (e -> .)
    RCBRAC          reduce using rule 153 (e -> .)
    ID              shift and go to state 26

  ! ID              [ reduce using rule 153 (e -> .) ]

    declaracion                    shift and go to state 85
    atributos                      shift and go to state 86
    e                              shift and go to state 87
    declaracion1                   shift and go to state 25

state 77

    (8) clase1 -> LT INHERITS ID GT .

    LCBRAC          reduce using rule 8 (clase1 -> LT INHERITS ID GT .)


state 78

    (3) main -> MAIN LPAR RPAR main_start bloque .

    $end            reduce using rule 3 (main -> MAIN LPAR RPAR main_start bloque .)


state 79

    (49) bloque -> LCBRAC . estatutos RCBRAC
    (52) estatutos -> . estatuto estatutos
    (53) estatutos -> . e
    (54) estatuto -> . asignacion
    (55) estatuto -> . condicion
    (56) estatuto -> . llamada_void SEMICOLON
    (57) estatuto -> . leer
    (58) estatuto -> . escribir
    (59) estatuto -> . ciclo_w
    (60) estatuto -> . ciclo_f
    (153) e -> .
    (61) asignacion -> . variable EQ expresion SEMICOLON atomic_assign
    (70) condicion -> . IF LPAR expresion RPAR gotoF bloque condicion1 fill
    (77) llamada_void -> . validar_id llamada1 LPAR llamada2 RPAR
    (86) leer -> . READ LPAR variable add_read generar_cuadr RPAR SEMICOLON
    (88) escribir -> . WRITE LPAR escribir1 RPAR SEMICOLON
    (95) ciclo_w -> . WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while
    (98) ciclo_f -> . FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (63) variable -> . ID variable1 variable2
    (78) validar_id -> . ID

    RCBRAC          reduce using rule 153 (e -> .)
    IF              shift and go to state 99
    READ            shift and go to state 101
    WRITE           shift and go to state 102
    WHILE           shift and go to state 103
    FROM            shift and go to state 104
    ID              shift and go to state 105

    estatutos                      shift and go to state 88
    estatuto                       shift and go to state 89
    e                              shift and go to state 90
    asignacion                     shift and go to state 91
    condicion                      shift and go to state 92
    llamada_void                   shift and go to state 93
    leer                           shift and go to state 94
    escribir                       shift and go to state 95
    ciclo_w                        shift and go to state 96
    ciclo_f                        shift and go to state 97
    variable                       shift and go to state 98
    validar_id                     shift and go to state 100

state 80

    (34) funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR . bloque_return reiniciar_func funcion
    (50) bloque_return -> . LCBRAC estatutos regresar RCBRAC
    (51) bloque_return -> . LCBRAC estatutos regresar_void RCBRAC

    LCBRAC          shift and go to state 107

    bloque_return                  shift and go to state 106

state 81

    (41) funcion2 -> ID COLON . tipo funcion3
    (45) tipo -> . INT
    (46) tipo -> . FLOAT
    (47) tipo -> . STRING
    (48) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

    tipo                           shift and go to state 108

state 82

    (28) declaracion3 -> LSBRAC CTEI . RSBRAC

    RSBRAC          shift and go to state 109


state 83

    (5) clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC . clase
    (5) clase -> . CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase
    (6) clase -> . e
    (153) e -> .

    CLASS           shift and go to state 8
    VAR             reduce using rule 153 (e -> .)
    VOID            reduce using rule 153 (e -> .)
    INT             reduce using rule 153 (e -> .)
    FLOAT           reduce using rule 153 (e -> .)
    STRING          reduce using rule 153 (e -> .)
    BOOL            reduce using rule 153 (e -> .)
    MAIN            reduce using rule 153 (e -> .)

    clase                          shift and go to state 110
    e                              shift and go to state 9

state 84

    (16) clase3 -> METHODS funcion . metodos
    (18) metodos -> . funcion metodos
    (19) metodos -> . e
    (34) funcion -> . funcion1 FUNCTION guardar_id LPAR funcion2 RPAR bloque_return reiniciar_func funcion
    (35) funcion -> . e
    (153) e -> .
    (38) funcion1 -> . tipo
    (39) funcion1 -> . VOID funcion_void
    (45) tipo -> . INT
    (46) tipo -> . FLOAT
    (47) tipo -> . STRING
    (48) tipo -> . BOOL

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    RCBRAC          reduce using rule 153 (e -> .)
    VOID            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

  ! VOID            [ reduce using rule 153 (e -> .) ]
  ! INT             [ reduce using rule 153 (e -> .) ]
  ! FLOAT           [ reduce using rule 153 (e -> .) ]
  ! STRING          [ reduce using rule 153 (e -> .) ]
  ! BOOL            [ reduce using rule 153 (e -> .) ]

    funcion                        shift and go to state 111
    metodos                        shift and go to state 112
    e                              shift and go to state 113
    funcion1                       shift and go to state 16
    tipo                           shift and go to state 18

state 85

    (12) atributos -> declaracion . atributos
    (12) atributos -> . declaracion atributos
    (13) atributos -> . e
    (24) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (153) e -> .
    (25) declaracion1 -> . ID declaracion2 declaracion4

  ! shift/reduce conflict for ID resolved as shift
    METHODS         reduce using rule 153 (e -> .)
    RCBRAC          reduce using rule 153 (e -> .)
    ID              shift and go to state 26

  ! ID              [ reduce using rule 153 (e -> .) ]

    declaracion                    shift and go to state 85
    atributos                      shift and go to state 114
    e                              shift and go to state 87
    declaracion1                   shift and go to state 25

state 86

    (10) clase2 -> ATTRIBUTES declaracion atributos . asign
    (14) asign -> . asignacion asign
    (15) asign -> . e
    (61) asignacion -> . variable EQ expresion SEMICOLON atomic_assign
    (153) e -> .
    (63) variable -> . ID variable1 variable2

    METHODS         reduce using rule 153 (e -> .)
    RCBRAC          reduce using rule 153 (e -> .)
    ID              shift and go to state 118

    asign                          shift and go to state 115
    asignacion                     shift and go to state 116
    e                              shift and go to state 117
    variable                       shift and go to state 98

state 87

    (13) atributos -> e .

    ID              reduce using rule 13 (atributos -> e .)
    METHODS         reduce using rule 13 (atributos -> e .)
    RCBRAC          reduce using rule 13 (atributos -> e .)


state 88

    (49) bloque -> LCBRAC estatutos . RCBRAC

    RCBRAC          shift and go to state 119


state 89

    (52) estatutos -> estatuto . estatutos
    (52) estatutos -> . estatuto estatutos
    (53) estatutos -> . e
    (54) estatuto -> . asignacion
    (55) estatuto -> . condicion
    (56) estatuto -> . llamada_void SEMICOLON
    (57) estatuto -> . leer
    (58) estatuto -> . escribir
    (59) estatuto -> . ciclo_w
    (60) estatuto -> . ciclo_f
    (153) e -> .
    (61) asignacion -> . variable EQ expresion SEMICOLON atomic_assign
    (70) condicion -> . IF LPAR expresion RPAR gotoF bloque condicion1 fill
    (77) llamada_void -> . validar_id llamada1 LPAR llamada2 RPAR
    (86) leer -> . READ LPAR variable add_read generar_cuadr RPAR SEMICOLON
    (88) escribir -> . WRITE LPAR escribir1 RPAR SEMICOLON
    (95) ciclo_w -> . WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while
    (98) ciclo_f -> . FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (63) variable -> . ID variable1 variable2
    (78) validar_id -> . ID

    RCBRAC          reduce using rule 153 (e -> .)
    RETURN          reduce using rule 153 (e -> .)
    IF              shift and go to state 99
    READ            shift and go to state 101
    WRITE           shift and go to state 102
    WHILE           shift and go to state 103
    FROM            shift and go to state 104
    ID              shift and go to state 105

    estatuto                       shift and go to state 89
    estatutos                      shift and go to state 120
    e                              shift and go to state 90
    asignacion                     shift and go to state 91
    condicion                      shift and go to state 92
    llamada_void                   shift and go to state 93
    leer                           shift and go to state 94
    escribir                       shift and go to state 95
    ciclo_w                        shift and go to state 96
    ciclo_f                        shift and go to state 97
    variable                       shift and go to state 98
    validar_id                     shift and go to state 100

state 90

    (53) estatutos -> e .

    RCBRAC          reduce using rule 53 (estatutos -> e .)
    RETURN          reduce using rule 53 (estatutos -> e .)


state 91

    (54) estatuto -> asignacion .

    IF              reduce using rule 54 (estatuto -> asignacion .)
    READ            reduce using rule 54 (estatuto -> asignacion .)
    WRITE           reduce using rule 54 (estatuto -> asignacion .)
    WHILE           reduce using rule 54 (estatuto -> asignacion .)
    FROM            reduce using rule 54 (estatuto -> asignacion .)
    ID              reduce using rule 54 (estatuto -> asignacion .)
    RCBRAC          reduce using rule 54 (estatuto -> asignacion .)
    RETURN          reduce using rule 54 (estatuto -> asignacion .)


state 92

    (55) estatuto -> condicion .

    IF              reduce using rule 55 (estatuto -> condicion .)
    READ            reduce using rule 55 (estatuto -> condicion .)
    WRITE           reduce using rule 55 (estatuto -> condicion .)
    WHILE           reduce using rule 55 (estatuto -> condicion .)
    FROM            reduce using rule 55 (estatuto -> condicion .)
    ID              reduce using rule 55 (estatuto -> condicion .)
    RCBRAC          reduce using rule 55 (estatuto -> condicion .)
    RETURN          reduce using rule 55 (estatuto -> condicion .)


state 93

    (56) estatuto -> llamada_void . SEMICOLON

    SEMICOLON       shift and go to state 121


state 94

    (57) estatuto -> leer .

    IF              reduce using rule 57 (estatuto -> leer .)
    READ            reduce using rule 57 (estatuto -> leer .)
    WRITE           reduce using rule 57 (estatuto -> leer .)
    WHILE           reduce using rule 57 (estatuto -> leer .)
    FROM            reduce using rule 57 (estatuto -> leer .)
    ID              reduce using rule 57 (estatuto -> leer .)
    RCBRAC          reduce using rule 57 (estatuto -> leer .)
    RETURN          reduce using rule 57 (estatuto -> leer .)


state 95

    (58) estatuto -> escribir .

    IF              reduce using rule 58 (estatuto -> escribir .)
    READ            reduce using rule 58 (estatuto -> escribir .)
    WRITE           reduce using rule 58 (estatuto -> escribir .)
    WHILE           reduce using rule 58 (estatuto -> escribir .)
    FROM            reduce using rule 58 (estatuto -> escribir .)
    ID              reduce using rule 58 (estatuto -> escribir .)
    RCBRAC          reduce using rule 58 (estatuto -> escribir .)
    RETURN          reduce using rule 58 (estatuto -> escribir .)


state 96

    (59) estatuto -> ciclo_w .

    IF              reduce using rule 59 (estatuto -> ciclo_w .)
    READ            reduce using rule 59 (estatuto -> ciclo_w .)
    WRITE           reduce using rule 59 (estatuto -> ciclo_w .)
    WHILE           reduce using rule 59 (estatuto -> ciclo_w .)
    FROM            reduce using rule 59 (estatuto -> ciclo_w .)
    ID              reduce using rule 59 (estatuto -> ciclo_w .)
    RCBRAC          reduce using rule 59 (estatuto -> ciclo_w .)
    RETURN          reduce using rule 59 (estatuto -> ciclo_w .)


state 97

    (60) estatuto -> ciclo_f .

    IF              reduce using rule 60 (estatuto -> ciclo_f .)
    READ            reduce using rule 60 (estatuto -> ciclo_f .)
    WRITE           reduce using rule 60 (estatuto -> ciclo_f .)
    WHILE           reduce using rule 60 (estatuto -> ciclo_f .)
    FROM            reduce using rule 60 (estatuto -> ciclo_f .)
    ID              reduce using rule 60 (estatuto -> ciclo_f .)
    RCBRAC          reduce using rule 60 (estatuto -> ciclo_f .)
    RETURN          reduce using rule 60 (estatuto -> ciclo_f .)


state 98

    (61) asignacion -> variable . EQ expresion SEMICOLON atomic_assign

    EQ              shift and go to state 122


state 99

    (70) condicion -> IF . LPAR expresion RPAR gotoF bloque condicion1 fill

    LPAR            shift and go to state 123


state 100

    (77) llamada_void -> validar_id . llamada1 LPAR llamada2 RPAR
    (79) llamada1 -> . DOT ID
    (80) llamada1 -> . e
    (153) e -> .

    DOT             shift and go to state 125
    LPAR            reduce using rule 153 (e -> .)

    llamada1                       shift and go to state 124
    e                              shift and go to state 126

state 101

    (86) leer -> READ . LPAR variable add_read generar_cuadr RPAR SEMICOLON

    LPAR            shift and go to state 127


state 102

    (88) escribir -> WRITE . LPAR escribir1 RPAR SEMICOLON

    LPAR            shift and go to state 128


state 103

    (95) ciclo_w -> WHILE . push_while LPAR expresion RPAR gotoF DO bloque return_while
    (96) push_while -> . e
    (153) e -> .

    LPAR            reduce using rule 153 (e -> .)

    push_while                     shift and go to state 129
    e                              shift and go to state 130

state 104

    (98) ciclo_f -> FROM . LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go

    LPAR            shift and go to state 131


state 105

    (63) variable -> ID . variable1 variable2
    (78) validar_id -> ID .
    (64) variable1 -> . DOT ID
    (65) variable1 -> . e
    (153) e -> .

  ! shift/reduce conflict for DOT resolved as shift
    LPAR            reduce using rule 78 (validar_id -> ID .)
    DOT             shift and go to state 133
    LSBRAC          reduce using rule 153 (e -> .)
    EQ              reduce using rule 153 (e -> .)
    MULT            reduce using rule 153 (e -> .)
    DIV             reduce using rule 153 (e -> .)
    PLUS            reduce using rule 153 (e -> .)
    MINUS           reduce using rule 153 (e -> .)
    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

  ! DOT             [ reduce using rule 78 (validar_id -> ID .) ]

    variable1                      shift and go to state 132
    e                              shift and go to state 134

state 106

    (34) funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR bloque_return . reiniciar_func funcion
    (37) reiniciar_func -> . e
    (153) e -> .

    VOID            reduce using rule 153 (e -> .)
    INT             reduce using rule 153 (e -> .)
    FLOAT           reduce using rule 153 (e -> .)
    STRING          reduce using rule 153 (e -> .)
    BOOL            reduce using rule 153 (e -> .)
    MAIN            reduce using rule 153 (e -> .)
    RCBRAC          reduce using rule 153 (e -> .)

    reiniciar_func                 shift and go to state 135
    e                              shift and go to state 136

state 107

    (50) bloque_return -> LCBRAC . estatutos regresar RCBRAC
    (51) bloque_return -> LCBRAC . estatutos regresar_void RCBRAC
    (52) estatutos -> . estatuto estatutos
    (53) estatutos -> . e
    (54) estatuto -> . asignacion
    (55) estatuto -> . condicion
    (56) estatuto -> . llamada_void SEMICOLON
    (57) estatuto -> . leer
    (58) estatuto -> . escribir
    (59) estatuto -> . ciclo_w
    (60) estatuto -> . ciclo_f
    (153) e -> .
    (61) asignacion -> . variable EQ expresion SEMICOLON atomic_assign
    (70) condicion -> . IF LPAR expresion RPAR gotoF bloque condicion1 fill
    (77) llamada_void -> . validar_id llamada1 LPAR llamada2 RPAR
    (86) leer -> . READ LPAR variable add_read generar_cuadr RPAR SEMICOLON
    (88) escribir -> . WRITE LPAR escribir1 RPAR SEMICOLON
    (95) ciclo_w -> . WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while
    (98) ciclo_f -> . FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (63) variable -> . ID variable1 variable2
    (78) validar_id -> . ID

    RETURN          reduce using rule 153 (e -> .)
    IF              shift and go to state 99
    READ            shift and go to state 101
    WRITE           shift and go to state 102
    WHILE           shift and go to state 103
    FROM            shift and go to state 104
    ID              shift and go to state 105

    estatutos                      shift and go to state 137
    estatuto                       shift and go to state 89
    e                              shift and go to state 90
    asignacion                     shift and go to state 91
    condicion                      shift and go to state 92
    llamada_void                   shift and go to state 93
    leer                           shift and go to state 94
    escribir                       shift and go to state 95
    ciclo_w                        shift and go to state 96
    ciclo_f                        shift and go to state 97
    variable                       shift and go to state 98
    validar_id                     shift and go to state 100

state 108

    (41) funcion2 -> ID COLON tipo . funcion3
    (43) funcion3 -> . COMMA ID COLON tipo funcion3
    (44) funcion3 -> . e
    (153) e -> .

    COMMA           shift and go to state 139
    RPAR            reduce using rule 153 (e -> .)

    funcion3                       shift and go to state 138
    e                              shift and go to state 140

state 109

    (28) declaracion3 -> LSBRAC CTEI RSBRAC .

    COMMA           reduce using rule 28 (declaracion3 -> LSBRAC CTEI RSBRAC .)
    COLON           reduce using rule 28 (declaracion3 -> LSBRAC CTEI RSBRAC .)


state 110

    (5) clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .

    VAR             reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)
    VOID            reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)
    INT             reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)
    FLOAT           reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)
    STRING          reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)
    BOOL            reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)
    MAIN            reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)


state 111

    (18) metodos -> funcion . metodos
    (18) metodos -> . funcion metodos
    (19) metodos -> . e
    (34) funcion -> . funcion1 FUNCTION guardar_id LPAR funcion2 RPAR bloque_return reiniciar_func funcion
    (35) funcion -> . e
    (153) e -> .
    (38) funcion1 -> . tipo
    (39) funcion1 -> . VOID funcion_void
    (45) tipo -> . INT
    (46) tipo -> . FLOAT
    (47) tipo -> . STRING
    (48) tipo -> . BOOL

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    RCBRAC          reduce using rule 153 (e -> .)
    VOID            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

  ! VOID            [ reduce using rule 153 (e -> .) ]
  ! INT             [ reduce using rule 153 (e -> .) ]
  ! FLOAT           [ reduce using rule 153 (e -> .) ]
  ! STRING          [ reduce using rule 153 (e -> .) ]
  ! BOOL            [ reduce using rule 153 (e -> .) ]

    funcion                        shift and go to state 111
    metodos                        shift and go to state 141
    e                              shift and go to state 113
    funcion1                       shift and go to state 16
    tipo                           shift and go to state 18

state 112

    (16) clase3 -> METHODS funcion metodos .

    RCBRAC          reduce using rule 16 (clase3 -> METHODS funcion metodos .)


state 113

    (19) metodos -> e .
    (35) funcion -> e .

  ! reduce/reduce conflict for RCBRAC resolved using rule 19 (metodos -> e .)
    RCBRAC          reduce using rule 19 (metodos -> e .)
    VOID            reduce using rule 35 (funcion -> e .)
    INT             reduce using rule 35 (funcion -> e .)
    FLOAT           reduce using rule 35 (funcion -> e .)
    STRING          reduce using rule 35 (funcion -> e .)
    BOOL            reduce using rule 35 (funcion -> e .)

  ! RCBRAC          [ reduce using rule 35 (funcion -> e .) ]


state 114

    (12) atributos -> declaracion atributos .

    ID              reduce using rule 12 (atributos -> declaracion atributos .)
    METHODS         reduce using rule 12 (atributos -> declaracion atributos .)
    RCBRAC          reduce using rule 12 (atributos -> declaracion atributos .)


state 115

    (10) clase2 -> ATTRIBUTES declaracion atributos asign .

    METHODS         reduce using rule 10 (clase2 -> ATTRIBUTES declaracion atributos asign .)
    RCBRAC          reduce using rule 10 (clase2 -> ATTRIBUTES declaracion atributos asign .)


state 116

    (14) asign -> asignacion . asign
    (14) asign -> . asignacion asign
    (15) asign -> . e
    (61) asignacion -> . variable EQ expresion SEMICOLON atomic_assign
    (153) e -> .
    (63) variable -> . ID variable1 variable2

    METHODS         reduce using rule 153 (e -> .)
    RCBRAC          reduce using rule 153 (e -> .)
    ID              shift and go to state 118

    asignacion                     shift and go to state 116
    asign                          shift and go to state 142
    e                              shift and go to state 117
    variable                       shift and go to state 98

state 117

    (15) asign -> e .

    METHODS         reduce using rule 15 (asign -> e .)
    RCBRAC          reduce using rule 15 (asign -> e .)


state 118

    (63) variable -> ID . variable1 variable2
    (64) variable1 -> . DOT ID
    (65) variable1 -> . e
    (153) e -> .

    DOT             shift and go to state 133
    LSBRAC          reduce using rule 153 (e -> .)
    EQ              reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)

    variable1                      shift and go to state 132
    e                              shift and go to state 134

state 119

    (49) bloque -> LCBRAC estatutos RCBRAC .

    $end            reduce using rule 49 (bloque -> LCBRAC estatutos RCBRAC .)
    ELSE            reduce using rule 49 (bloque -> LCBRAC estatutos RCBRAC .)
    IF              reduce using rule 49 (bloque -> LCBRAC estatutos RCBRAC .)
    READ            reduce using rule 49 (bloque -> LCBRAC estatutos RCBRAC .)
    WRITE           reduce using rule 49 (bloque -> LCBRAC estatutos RCBRAC .)
    WHILE           reduce using rule 49 (bloque -> LCBRAC estatutos RCBRAC .)
    FROM            reduce using rule 49 (bloque -> LCBRAC estatutos RCBRAC .)
    ID              reduce using rule 49 (bloque -> LCBRAC estatutos RCBRAC .)
    RCBRAC          reduce using rule 49 (bloque -> LCBRAC estatutos RCBRAC .)
    RETURN          reduce using rule 49 (bloque -> LCBRAC estatutos RCBRAC .)


state 120

    (52) estatutos -> estatuto estatutos .

    RCBRAC          reduce using rule 52 (estatutos -> estatuto estatutos .)
    RETURN          reduce using rule 52 (estatutos -> estatuto estatutos .)


state 121

    (56) estatuto -> llamada_void SEMICOLON .

    IF              reduce using rule 56 (estatuto -> llamada_void SEMICOLON .)
    READ            reduce using rule 56 (estatuto -> llamada_void SEMICOLON .)
    WRITE           reduce using rule 56 (estatuto -> llamada_void SEMICOLON .)
    WHILE           reduce using rule 56 (estatuto -> llamada_void SEMICOLON .)
    FROM            reduce using rule 56 (estatuto -> llamada_void SEMICOLON .)
    ID              reduce using rule 56 (estatuto -> llamada_void SEMICOLON .)
    RCBRAC          reduce using rule 56 (estatuto -> llamada_void SEMICOLON .)
    RETURN          reduce using rule 56 (estatuto -> llamada_void SEMICOLON .)


state 122

    (61) asignacion -> variable EQ . expresion SEMICOLON atomic_assign
    (109) expresion -> . a_exp exp1
    (114) a_exp -> . b_exp exp2
    (118) b_exp -> . c_exp exp3
    (128) c_exp -> . d_exp exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    variable                       shift and go to state 143
    expresion                      shift and go to state 144
    a_exp                          shift and go to state 145
    b_exp                          shift and go to state 146
    c_exp                          shift and go to state 147
    d_exp                          shift and go to state 148
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 123

    (70) condicion -> IF LPAR . expresion RPAR gotoF bloque condicion1 fill
    (109) expresion -> . a_exp exp1
    (114) a_exp -> . b_exp exp2
    (118) b_exp -> . c_exp exp3
    (128) c_exp -> . d_exp exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    expresion                      shift and go to state 158
    a_exp                          shift and go to state 145
    b_exp                          shift and go to state 146
    c_exp                          shift and go to state 147
    d_exp                          shift and go to state 148
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 124

    (77) llamada_void -> validar_id llamada1 . LPAR llamada2 RPAR

    LPAR            shift and go to state 159


state 125

    (79) llamada1 -> DOT . ID

    ID              shift and go to state 160


state 126

    (80) llamada1 -> e .

    LPAR            reduce using rule 80 (llamada1 -> e .)


state 127

    (86) leer -> READ LPAR . variable add_read generar_cuadr RPAR SEMICOLON
    (63) variable -> . ID variable1 variable2

    ID              shift and go to state 118

    variable                       shift and go to state 161

state 128

    (88) escribir -> WRITE LPAR . escribir1 RPAR SEMICOLON
    (89) escribir1 -> . texto add_print generar_cuadr escribir2
    (90) escribir1 -> . expresion add_print generar_cuadr escribir2
    (94) texto -> . CTESTR
    (109) expresion -> . a_exp exp1
    (114) a_exp -> . b_exp exp2
    (118) b_exp -> . c_exp exp3
    (128) c_exp -> . d_exp exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    CTESTR          shift and go to state 165
    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    escribir1                      shift and go to state 162
    texto                          shift and go to state 163
    expresion                      shift and go to state 164
    a_exp                          shift and go to state 145
    b_exp                          shift and go to state 146
    c_exp                          shift and go to state 147
    d_exp                          shift and go to state 148
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 129

    (95) ciclo_w -> WHILE push_while . LPAR expresion RPAR gotoF DO bloque return_while

    LPAR            shift and go to state 166


state 130

    (96) push_while -> e .

    LPAR            reduce using rule 96 (push_while -> e .)


state 131

    (98) ciclo_f -> FROM LPAR . variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (63) variable -> . ID variable1 variable2

    ID              shift and go to state 118

    variable                       shift and go to state 167

state 132

    (63) variable -> ID variable1 . variable2
    (66) variable2 -> . LSBRAC expresion RSBRAC variable3
    (67) variable2 -> . e
    (153) e -> .

    LSBRAC          shift and go to state 169
    EQ              reduce using rule 153 (e -> .)
    MULT            reduce using rule 153 (e -> .)
    DIV             reduce using rule 153 (e -> .)
    PLUS            reduce using rule 153 (e -> .)
    MINUS           reduce using rule 153 (e -> .)
    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    variable2                      shift and go to state 168
    e                              shift and go to state 170

state 133

    (64) variable1 -> DOT . ID

    ID              shift and go to state 171


state 134

    (65) variable1 -> e .

    LSBRAC          reduce using rule 65 (variable1 -> e .)
    EQ              reduce using rule 65 (variable1 -> e .)
    MULT            reduce using rule 65 (variable1 -> e .)
    DIV             reduce using rule 65 (variable1 -> e .)
    PLUS            reduce using rule 65 (variable1 -> e .)
    MINUS           reduce using rule 65 (variable1 -> e .)
    LT              reduce using rule 65 (variable1 -> e .)
    GT              reduce using rule 65 (variable1 -> e .)
    COMP            reduce using rule 65 (variable1 -> e .)
    NOTEQ           reduce using rule 65 (variable1 -> e .)
    AND             reduce using rule 65 (variable1 -> e .)
    OR              reduce using rule 65 (variable1 -> e .)
    SEMICOLON       reduce using rule 65 (variable1 -> e .)
    RPAR            reduce using rule 65 (variable1 -> e .)
    COMMA           reduce using rule 65 (variable1 -> e .)
    RSBRAC          reduce using rule 65 (variable1 -> e .)
    TO              reduce using rule 65 (variable1 -> e .)


state 135

    (34) funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR bloque_return reiniciar_func . funcion
    (34) funcion -> . funcion1 FUNCTION guardar_id LPAR funcion2 RPAR bloque_return reiniciar_func funcion
    (35) funcion -> . e
    (38) funcion1 -> . tipo
    (39) funcion1 -> . VOID funcion_void
    (153) e -> .
    (45) tipo -> . INT
    (46) tipo -> . FLOAT
    (47) tipo -> . STRING
    (48) tipo -> . BOOL

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    VOID            shift and go to state 19
    MAIN            reduce using rule 153 (e -> .)
    RCBRAC          reduce using rule 153 (e -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

  ! VOID            [ reduce using rule 153 (e -> .) ]
  ! INT             [ reduce using rule 153 (e -> .) ]
  ! FLOAT           [ reduce using rule 153 (e -> .) ]
  ! STRING          [ reduce using rule 153 (e -> .) ]
  ! BOOL            [ reduce using rule 153 (e -> .) ]

    funcion1                       shift and go to state 16
    funcion                        shift and go to state 172
    e                              shift and go to state 17
    tipo                           shift and go to state 18

state 136

    (37) reiniciar_func -> e .

    VOID            reduce using rule 37 (reiniciar_func -> e .)
    INT             reduce using rule 37 (reiniciar_func -> e .)
    FLOAT           reduce using rule 37 (reiniciar_func -> e .)
    STRING          reduce using rule 37 (reiniciar_func -> e .)
    BOOL            reduce using rule 37 (reiniciar_func -> e .)
    MAIN            reduce using rule 37 (reiniciar_func -> e .)
    RCBRAC          reduce using rule 37 (reiniciar_func -> e .)


state 137

    (50) bloque_return -> LCBRAC estatutos . regresar RCBRAC
    (51) bloque_return -> LCBRAC estatutos . regresar_void RCBRAC
    (108) regresar -> . RETURN expresion SEMICOLON
    (107) regresar_void -> . RETURN SEMICOLON

    RETURN          shift and go to state 175

    regresar                       shift and go to state 173
    regresar_void                  shift and go to state 174

state 138

    (41) funcion2 -> ID COLON tipo funcion3 .

    RPAR            reduce using rule 41 (funcion2 -> ID COLON tipo funcion3 .)


state 139

    (43) funcion3 -> COMMA . ID COLON tipo funcion3

    ID              shift and go to state 176


state 140

    (44) funcion3 -> e .

    RPAR            reduce using rule 44 (funcion3 -> e .)


state 141

    (18) metodos -> funcion metodos .

    RCBRAC          reduce using rule 18 (metodos -> funcion metodos .)


state 142

    (14) asign -> asignacion asign .

    METHODS         reduce using rule 14 (asign -> asignacion asign .)
    RCBRAC          reduce using rule 14 (asign -> asignacion asign .)


state 143

    (142) e_exp -> variable .

    MULT            reduce using rule 142 (e_exp -> variable .)
    DIV             reduce using rule 142 (e_exp -> variable .)
    PLUS            reduce using rule 142 (e_exp -> variable .)
    MINUS           reduce using rule 142 (e_exp -> variable .)
    LT              reduce using rule 142 (e_exp -> variable .)
    GT              reduce using rule 142 (e_exp -> variable .)
    COMP            reduce using rule 142 (e_exp -> variable .)
    NOTEQ           reduce using rule 142 (e_exp -> variable .)
    AND             reduce using rule 142 (e_exp -> variable .)
    OR              reduce using rule 142 (e_exp -> variable .)
    SEMICOLON       reduce using rule 142 (e_exp -> variable .)
    RPAR            reduce using rule 142 (e_exp -> variable .)
    COMMA           reduce using rule 142 (e_exp -> variable .)
    RSBRAC          reduce using rule 142 (e_exp -> variable .)
    TO              reduce using rule 142 (e_exp -> variable .)


state 144

    (61) asignacion -> variable EQ expresion . SEMICOLON atomic_assign

    SEMICOLON       shift and go to state 177


state 145

    (109) expresion -> a_exp . exp1
    (110) exp1 -> . OR push_or a_exp pop_operador exp1
    (111) exp1 -> . e
    (153) e -> .

    OR              shift and go to state 179
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    exp1                           shift and go to state 178
    e                              shift and go to state 180

state 146

    (114) a_exp -> b_exp . exp2
    (115) exp2 -> . AND push_and b_exp pop_operador exp2
    (116) exp2 -> . e
    (153) e -> .

    AND             shift and go to state 182
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    exp2                           shift and go to state 181
    e                              shift and go to state 183

state 147

    (118) b_exp -> c_exp . exp3
    (119) exp3 -> . LT push_lt c_exp pop_operador exp3
    (120) exp3 -> . GT push_gt c_exp pop_operador exp3
    (121) exp3 -> . COMP push_comp c_exp pop_operador exp3
    (122) exp3 -> . NOTEQ push_noteq c_exp pop_operador exp3
    (123) exp3 -> . e
    (153) e -> .

    LT              shift and go to state 185
    GT              shift and go to state 186
    COMP            shift and go to state 187
    NOTEQ           shift and go to state 188
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    exp3                           shift and go to state 184
    e                              shift and go to state 189

state 148

    (128) c_exp -> d_exp . exp4
    (129) exp4 -> . PLUS push_plus d_exp pop_operador exp4
    (130) exp4 -> . MINUS push_minus d_exp pop_operador exp4
    (131) exp4 -> . e
    (153) e -> .

    PLUS            shift and go to state 191
    MINUS           shift and go to state 192
    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    exp4                           shift and go to state 190
    e                              shift and go to state 193

state 149

    (134) d_exp -> e_exp . exp5
    (135) exp5 -> . MULT push_mult e_exp pop_operador exp5
    (136) exp5 -> . DIV push_div e_exp pop_operador exp5
    (137) exp5 -> . e
    (153) e -> .

    MULT            shift and go to state 195
    DIV             shift and go to state 196
    PLUS            reduce using rule 153 (e -> .)
    MINUS           reduce using rule 153 (e -> .)
    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    exp5                           shift and go to state 194
    e                              shift and go to state 197

state 150

    (140) e_exp -> LPAR . expresion RPAR
    (109) expresion -> . a_exp exp1
    (114) a_exp -> . b_exp exp2
    (118) b_exp -> . c_exp exp3
    (128) c_exp -> . d_exp exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    expresion                      shift and go to state 198
    a_exp                          shift and go to state 145
    b_exp                          shift and go to state 146
    c_exp                          shift and go to state 147
    d_exp                          shift and go to state 148
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 151

    (141) e_exp -> var_cte .

    MULT            reduce using rule 141 (e_exp -> var_cte .)
    DIV             reduce using rule 141 (e_exp -> var_cte .)
    PLUS            reduce using rule 141 (e_exp -> var_cte .)
    MINUS           reduce using rule 141 (e_exp -> var_cte .)
    LT              reduce using rule 141 (e_exp -> var_cte .)
    GT              reduce using rule 141 (e_exp -> var_cte .)
    COMP            reduce using rule 141 (e_exp -> var_cte .)
    NOTEQ           reduce using rule 141 (e_exp -> var_cte .)
    AND             reduce using rule 141 (e_exp -> var_cte .)
    OR              reduce using rule 141 (e_exp -> var_cte .)
    SEMICOLON       reduce using rule 141 (e_exp -> var_cte .)
    RPAR            reduce using rule 141 (e_exp -> var_cte .)
    COMMA           reduce using rule 141 (e_exp -> var_cte .)
    RSBRAC          reduce using rule 141 (e_exp -> var_cte .)
    TO              reduce using rule 141 (e_exp -> var_cte .)


state 152

    (143) e_exp -> llamada .

    MULT            reduce using rule 143 (e_exp -> llamada .)
    DIV             reduce using rule 143 (e_exp -> llamada .)
    PLUS            reduce using rule 143 (e_exp -> llamada .)
    MINUS           reduce using rule 143 (e_exp -> llamada .)
    LT              reduce using rule 143 (e_exp -> llamada .)
    GT              reduce using rule 143 (e_exp -> llamada .)
    COMP            reduce using rule 143 (e_exp -> llamada .)
    NOTEQ           reduce using rule 143 (e_exp -> llamada .)
    AND             reduce using rule 143 (e_exp -> llamada .)
    OR              reduce using rule 143 (e_exp -> llamada .)
    SEMICOLON       reduce using rule 143 (e_exp -> llamada .)
    RPAR            reduce using rule 143 (e_exp -> llamada .)
    COMMA           reduce using rule 143 (e_exp -> llamada .)
    RSBRAC          reduce using rule 143 (e_exp -> llamada .)
    TO              reduce using rule 143 (e_exp -> llamada .)


state 153

    (144) var_cte -> CTEI . ctei
    (148) ctei -> . e
    (153) e -> .

    MULT            reduce using rule 153 (e -> .)
    DIV             reduce using rule 153 (e -> .)
    PLUS            reduce using rule 153 (e -> .)
    MINUS           reduce using rule 153 (e -> .)
    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    ctei                           shift and go to state 199
    e                              shift and go to state 200

state 154

    (145) var_cte -> CTEF . ctef
    (149) ctef -> . e
    (153) e -> .

    MULT            reduce using rule 153 (e -> .)
    DIV             reduce using rule 153 (e -> .)
    PLUS            reduce using rule 153 (e -> .)
    MINUS           reduce using rule 153 (e -> .)
    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    ctef                           shift and go to state 201
    e                              shift and go to state 202

state 155

    (146) var_cte -> CTESTR . ctestr
    (150) ctestr -> . e
    (153) e -> .

    MULT            reduce using rule 153 (e -> .)
    DIV             reduce using rule 153 (e -> .)
    PLUS            reduce using rule 153 (e -> .)
    MINUS           reduce using rule 153 (e -> .)
    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    ctestr                         shift and go to state 203
    e                              shift and go to state 204

state 156

    (147) var_cte -> CTEB . cteb
    (151) cteb -> . e
    (153) e -> .

    MULT            reduce using rule 153 (e -> .)
    DIV             reduce using rule 153 (e -> .)
    PLUS            reduce using rule 153 (e -> .)
    MINUS           reduce using rule 153 (e -> .)
    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    cteb                           shift and go to state 205
    e                              shift and go to state 206

state 157

    (76) llamada -> validar_id . llamada1 LPAR llamada2 RPAR
    (79) llamada1 -> . DOT ID
    (80) llamada1 -> . e
    (153) e -> .

    DOT             shift and go to state 125
    LPAR            reduce using rule 153 (e -> .)

    llamada1                       shift and go to state 207
    e                              shift and go to state 126

state 158

    (70) condicion -> IF LPAR expresion . RPAR gotoF bloque condicion1 fill

    RPAR            shift and go to state 208


state 159

    (77) llamada_void -> validar_id llamada1 LPAR . llamada2 RPAR
    (81) llamada2 -> . expresion cuad_param llamada3
    (82) llamada2 -> . e
    (109) expresion -> . a_exp exp1
    (153) e -> .
    (114) a_exp -> . b_exp exp2
    (118) b_exp -> . c_exp exp3
    (128) c_exp -> . d_exp exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    RPAR            reduce using rule 153 (e -> .)
    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    validar_id                     shift and go to state 157
    llamada2                       shift and go to state 209
    expresion                      shift and go to state 210
    e                              shift and go to state 211
    a_exp                          shift and go to state 145
    b_exp                          shift and go to state 146
    c_exp                          shift and go to state 147
    d_exp                          shift and go to state 148
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152

state 160

    (79) llamada1 -> DOT ID .

    LPAR            reduce using rule 79 (llamada1 -> DOT ID .)


state 161

    (86) leer -> READ LPAR variable . add_read generar_cuadr RPAR SEMICOLON
    (87) add_read -> . e
    (153) e -> .

    RPAR            reduce using rule 153 (e -> .)

    add_read                       shift and go to state 212
    e                              shift and go to state 213

state 162

    (88) escribir -> WRITE LPAR escribir1 . RPAR SEMICOLON

    RPAR            shift and go to state 214


state 163

    (89) escribir1 -> texto . add_print generar_cuadr escribir2
    (91) add_print -> . e
    (153) e -> .

    COMMA           reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)

    add_print                      shift and go to state 215
    e                              shift and go to state 216

state 164

    (90) escribir1 -> expresion . add_print generar_cuadr escribir2
    (91) add_print -> . e
    (153) e -> .

    COMMA           reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)

    add_print                      shift and go to state 217
    e                              shift and go to state 216

state 165

    (94) texto -> CTESTR .
    (146) var_cte -> CTESTR . ctestr
    (150) ctestr -> . e
    (153) e -> .

  ! reduce/reduce conflict for COMMA resolved using rule 94 (texto -> CTESTR .)
  ! reduce/reduce conflict for RPAR resolved using rule 94 (texto -> CTESTR .)
    COMMA           reduce using rule 94 (texto -> CTESTR .)
    RPAR            reduce using rule 94 (texto -> CTESTR .)
    MULT            reduce using rule 153 (e -> .)
    DIV             reduce using rule 153 (e -> .)
    PLUS            reduce using rule 153 (e -> .)
    MINUS           reduce using rule 153 (e -> .)
    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)

  ! COMMA           [ reduce using rule 153 (e -> .) ]
  ! RPAR            [ reduce using rule 153 (e -> .) ]

    ctestr                         shift and go to state 203
    e                              shift and go to state 204

state 166

    (95) ciclo_w -> WHILE push_while LPAR . expresion RPAR gotoF DO bloque return_while
    (109) expresion -> . a_exp exp1
    (114) a_exp -> . b_exp exp2
    (118) b_exp -> . c_exp exp3
    (128) c_exp -> . d_exp exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    expresion                      shift and go to state 218
    a_exp                          shift and go to state 145
    b_exp                          shift and go to state 146
    c_exp                          shift and go to state 147
    d_exp                          shift and go to state 148
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 167

    (98) ciclo_f -> FROM LPAR variable . asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (102) asign_aux -> . e
    (153) e -> .

    EQ              reduce using rule 153 (e -> .)

    asign_aux                      shift and go to state 219
    e                              shift and go to state 220

state 168

    (63) variable -> ID variable1 variable2 .

    EQ              reduce using rule 63 (variable -> ID variable1 variable2 .)
    MULT            reduce using rule 63 (variable -> ID variable1 variable2 .)
    DIV             reduce using rule 63 (variable -> ID variable1 variable2 .)
    PLUS            reduce using rule 63 (variable -> ID variable1 variable2 .)
    MINUS           reduce using rule 63 (variable -> ID variable1 variable2 .)
    LT              reduce using rule 63 (variable -> ID variable1 variable2 .)
    GT              reduce using rule 63 (variable -> ID variable1 variable2 .)
    COMP            reduce using rule 63 (variable -> ID variable1 variable2 .)
    NOTEQ           reduce using rule 63 (variable -> ID variable1 variable2 .)
    AND             reduce using rule 63 (variable -> ID variable1 variable2 .)
    OR              reduce using rule 63 (variable -> ID variable1 variable2 .)
    SEMICOLON       reduce using rule 63 (variable -> ID variable1 variable2 .)
    RPAR            reduce using rule 63 (variable -> ID variable1 variable2 .)
    COMMA           reduce using rule 63 (variable -> ID variable1 variable2 .)
    RSBRAC          reduce using rule 63 (variable -> ID variable1 variable2 .)
    TO              reduce using rule 63 (variable -> ID variable1 variable2 .)


state 169

    (66) variable2 -> LSBRAC . expresion RSBRAC variable3
    (109) expresion -> . a_exp exp1
    (114) a_exp -> . b_exp exp2
    (118) b_exp -> . c_exp exp3
    (128) c_exp -> . d_exp exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    expresion                      shift and go to state 221
    a_exp                          shift and go to state 145
    b_exp                          shift and go to state 146
    c_exp                          shift and go to state 147
    d_exp                          shift and go to state 148
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 170

    (67) variable2 -> e .

    EQ              reduce using rule 67 (variable2 -> e .)
    MULT            reduce using rule 67 (variable2 -> e .)
    DIV             reduce using rule 67 (variable2 -> e .)
    PLUS            reduce using rule 67 (variable2 -> e .)
    MINUS           reduce using rule 67 (variable2 -> e .)
    LT              reduce using rule 67 (variable2 -> e .)
    GT              reduce using rule 67 (variable2 -> e .)
    COMP            reduce using rule 67 (variable2 -> e .)
    NOTEQ           reduce using rule 67 (variable2 -> e .)
    AND             reduce using rule 67 (variable2 -> e .)
    OR              reduce using rule 67 (variable2 -> e .)
    SEMICOLON       reduce using rule 67 (variable2 -> e .)
    RPAR            reduce using rule 67 (variable2 -> e .)
    COMMA           reduce using rule 67 (variable2 -> e .)
    RSBRAC          reduce using rule 67 (variable2 -> e .)
    TO              reduce using rule 67 (variable2 -> e .)


state 171

    (64) variable1 -> DOT ID .

    LSBRAC          reduce using rule 64 (variable1 -> DOT ID .)
    EQ              reduce using rule 64 (variable1 -> DOT ID .)
    MULT            reduce using rule 64 (variable1 -> DOT ID .)
    DIV             reduce using rule 64 (variable1 -> DOT ID .)
    PLUS            reduce using rule 64 (variable1 -> DOT ID .)
    MINUS           reduce using rule 64 (variable1 -> DOT ID .)
    LT              reduce using rule 64 (variable1 -> DOT ID .)
    GT              reduce using rule 64 (variable1 -> DOT ID .)
    COMP            reduce using rule 64 (variable1 -> DOT ID .)
    NOTEQ           reduce using rule 64 (variable1 -> DOT ID .)
    AND             reduce using rule 64 (variable1 -> DOT ID .)
    OR              reduce using rule 64 (variable1 -> DOT ID .)
    SEMICOLON       reduce using rule 64 (variable1 -> DOT ID .)
    RPAR            reduce using rule 64 (variable1 -> DOT ID .)
    COMMA           reduce using rule 64 (variable1 -> DOT ID .)
    RSBRAC          reduce using rule 64 (variable1 -> DOT ID .)
    TO              reduce using rule 64 (variable1 -> DOT ID .)


state 172

    (34) funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR bloque_return reiniciar_func funcion .

    MAIN            reduce using rule 34 (funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR bloque_return reiniciar_func funcion .)
    VOID            reduce using rule 34 (funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR bloque_return reiniciar_func funcion .)
    INT             reduce using rule 34 (funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR bloque_return reiniciar_func funcion .)
    FLOAT           reduce using rule 34 (funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR bloque_return reiniciar_func funcion .)
    STRING          reduce using rule 34 (funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR bloque_return reiniciar_func funcion .)
    BOOL            reduce using rule 34 (funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR bloque_return reiniciar_func funcion .)
    RCBRAC          reduce using rule 34 (funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR bloque_return reiniciar_func funcion .)


state 173

    (50) bloque_return -> LCBRAC estatutos regresar . RCBRAC

    RCBRAC          shift and go to state 222


state 174

    (51) bloque_return -> LCBRAC estatutos regresar_void . RCBRAC

    RCBRAC          shift and go to state 223


state 175

    (108) regresar -> RETURN . expresion SEMICOLON
    (107) regresar_void -> RETURN . SEMICOLON
    (109) expresion -> . a_exp exp1
    (114) a_exp -> . b_exp exp2
    (118) b_exp -> . c_exp exp3
    (128) c_exp -> . d_exp exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    SEMICOLON       shift and go to state 225
    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    expresion                      shift and go to state 224
    a_exp                          shift and go to state 145
    b_exp                          shift and go to state 146
    c_exp                          shift and go to state 147
    d_exp                          shift and go to state 148
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 176

    (43) funcion3 -> COMMA ID . COLON tipo funcion3

    COLON           shift and go to state 226


state 177

    (61) asignacion -> variable EQ expresion SEMICOLON . atomic_assign
    (62) atomic_assign -> . e
    (153) e -> .

    IF              reduce using rule 153 (e -> .)
    READ            reduce using rule 153 (e -> .)
    WRITE           reduce using rule 153 (e -> .)
    WHILE           reduce using rule 153 (e -> .)
    FROM            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)
    RCBRAC          reduce using rule 153 (e -> .)
    METHODS         reduce using rule 153 (e -> .)
    RETURN          reduce using rule 153 (e -> .)

    atomic_assign                  shift and go to state 227
    e                              shift and go to state 228

state 178

    (109) expresion -> a_exp exp1 .

    SEMICOLON       reduce using rule 109 (expresion -> a_exp exp1 .)
    RPAR            reduce using rule 109 (expresion -> a_exp exp1 .)
    COMMA           reduce using rule 109 (expresion -> a_exp exp1 .)
    RSBRAC          reduce using rule 109 (expresion -> a_exp exp1 .)
    TO              reduce using rule 109 (expresion -> a_exp exp1 .)


state 179

    (110) exp1 -> OR . push_or a_exp pop_operador exp1
    (112) push_or -> . e
    (153) e -> .

    LPAR            reduce using rule 153 (e -> .)
    CTEI            reduce using rule 153 (e -> .)
    CTEF            reduce using rule 153 (e -> .)
    CTESTR          reduce using rule 153 (e -> .)
    CTEB            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)

    push_or                        shift and go to state 229
    e                              shift and go to state 230

state 180

    (111) exp1 -> e .

    SEMICOLON       reduce using rule 111 (exp1 -> e .)
    RPAR            reduce using rule 111 (exp1 -> e .)
    COMMA           reduce using rule 111 (exp1 -> e .)
    RSBRAC          reduce using rule 111 (exp1 -> e .)
    TO              reduce using rule 111 (exp1 -> e .)


state 181

    (114) a_exp -> b_exp exp2 .

    OR              reduce using rule 114 (a_exp -> b_exp exp2 .)
    SEMICOLON       reduce using rule 114 (a_exp -> b_exp exp2 .)
    RPAR            reduce using rule 114 (a_exp -> b_exp exp2 .)
    COMMA           reduce using rule 114 (a_exp -> b_exp exp2 .)
    RSBRAC          reduce using rule 114 (a_exp -> b_exp exp2 .)
    TO              reduce using rule 114 (a_exp -> b_exp exp2 .)


state 182

    (115) exp2 -> AND . push_and b_exp pop_operador exp2
    (117) push_and -> . e
    (153) e -> .

    LPAR            reduce using rule 153 (e -> .)
    CTEI            reduce using rule 153 (e -> .)
    CTEF            reduce using rule 153 (e -> .)
    CTESTR          reduce using rule 153 (e -> .)
    CTEB            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)

    push_and                       shift and go to state 231
    e                              shift and go to state 232

state 183

    (116) exp2 -> e .

    OR              reduce using rule 116 (exp2 -> e .)
    SEMICOLON       reduce using rule 116 (exp2 -> e .)
    RPAR            reduce using rule 116 (exp2 -> e .)
    COMMA           reduce using rule 116 (exp2 -> e .)
    RSBRAC          reduce using rule 116 (exp2 -> e .)
    TO              reduce using rule 116 (exp2 -> e .)


state 184

    (118) b_exp -> c_exp exp3 .

    AND             reduce using rule 118 (b_exp -> c_exp exp3 .)
    OR              reduce using rule 118 (b_exp -> c_exp exp3 .)
    SEMICOLON       reduce using rule 118 (b_exp -> c_exp exp3 .)
    RPAR            reduce using rule 118 (b_exp -> c_exp exp3 .)
    COMMA           reduce using rule 118 (b_exp -> c_exp exp3 .)
    RSBRAC          reduce using rule 118 (b_exp -> c_exp exp3 .)
    TO              reduce using rule 118 (b_exp -> c_exp exp3 .)


state 185

    (119) exp3 -> LT . push_lt c_exp pop_operador exp3
    (124) push_lt -> . e
    (153) e -> .

    LPAR            reduce using rule 153 (e -> .)
    CTEI            reduce using rule 153 (e -> .)
    CTEF            reduce using rule 153 (e -> .)
    CTESTR          reduce using rule 153 (e -> .)
    CTEB            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)

    push_lt                        shift and go to state 233
    e                              shift and go to state 234

state 186

    (120) exp3 -> GT . push_gt c_exp pop_operador exp3
    (125) push_gt -> . e
    (153) e -> .

    LPAR            reduce using rule 153 (e -> .)
    CTEI            reduce using rule 153 (e -> .)
    CTEF            reduce using rule 153 (e -> .)
    CTESTR          reduce using rule 153 (e -> .)
    CTEB            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)

    push_gt                        shift and go to state 235
    e                              shift and go to state 236

state 187

    (121) exp3 -> COMP . push_comp c_exp pop_operador exp3
    (126) push_comp -> . e
    (153) e -> .

    LPAR            reduce using rule 153 (e -> .)
    CTEI            reduce using rule 153 (e -> .)
    CTEF            reduce using rule 153 (e -> .)
    CTESTR          reduce using rule 153 (e -> .)
    CTEB            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)

    push_comp                      shift and go to state 237
    e                              shift and go to state 238

state 188

    (122) exp3 -> NOTEQ . push_noteq c_exp pop_operador exp3
    (127) push_noteq -> . e
    (153) e -> .

    LPAR            reduce using rule 153 (e -> .)
    CTEI            reduce using rule 153 (e -> .)
    CTEF            reduce using rule 153 (e -> .)
    CTESTR          reduce using rule 153 (e -> .)
    CTEB            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)

    push_noteq                     shift and go to state 239
    e                              shift and go to state 240

state 189

    (123) exp3 -> e .

    AND             reduce using rule 123 (exp3 -> e .)
    OR              reduce using rule 123 (exp3 -> e .)
    SEMICOLON       reduce using rule 123 (exp3 -> e .)
    RPAR            reduce using rule 123 (exp3 -> e .)
    COMMA           reduce using rule 123 (exp3 -> e .)
    RSBRAC          reduce using rule 123 (exp3 -> e .)
    TO              reduce using rule 123 (exp3 -> e .)


state 190

    (128) c_exp -> d_exp exp4 .

    LT              reduce using rule 128 (c_exp -> d_exp exp4 .)
    GT              reduce using rule 128 (c_exp -> d_exp exp4 .)
    COMP            reduce using rule 128 (c_exp -> d_exp exp4 .)
    NOTEQ           reduce using rule 128 (c_exp -> d_exp exp4 .)
    AND             reduce using rule 128 (c_exp -> d_exp exp4 .)
    OR              reduce using rule 128 (c_exp -> d_exp exp4 .)
    SEMICOLON       reduce using rule 128 (c_exp -> d_exp exp4 .)
    RPAR            reduce using rule 128 (c_exp -> d_exp exp4 .)
    COMMA           reduce using rule 128 (c_exp -> d_exp exp4 .)
    RSBRAC          reduce using rule 128 (c_exp -> d_exp exp4 .)
    TO              reduce using rule 128 (c_exp -> d_exp exp4 .)


state 191

    (129) exp4 -> PLUS . push_plus d_exp pop_operador exp4
    (132) push_plus -> . e
    (153) e -> .

    LPAR            reduce using rule 153 (e -> .)
    CTEI            reduce using rule 153 (e -> .)
    CTEF            reduce using rule 153 (e -> .)
    CTESTR          reduce using rule 153 (e -> .)
    CTEB            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)

    push_plus                      shift and go to state 241
    e                              shift and go to state 242

state 192

    (130) exp4 -> MINUS . push_minus d_exp pop_operador exp4
    (133) push_minus -> . e
    (153) e -> .

    LPAR            reduce using rule 153 (e -> .)
    CTEI            reduce using rule 153 (e -> .)
    CTEF            reduce using rule 153 (e -> .)
    CTESTR          reduce using rule 153 (e -> .)
    CTEB            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)

    push_minus                     shift and go to state 243
    e                              shift and go to state 244

state 193

    (131) exp4 -> e .

    LT              reduce using rule 131 (exp4 -> e .)
    GT              reduce using rule 131 (exp4 -> e .)
    COMP            reduce using rule 131 (exp4 -> e .)
    NOTEQ           reduce using rule 131 (exp4 -> e .)
    AND             reduce using rule 131 (exp4 -> e .)
    OR              reduce using rule 131 (exp4 -> e .)
    SEMICOLON       reduce using rule 131 (exp4 -> e .)
    RPAR            reduce using rule 131 (exp4 -> e .)
    COMMA           reduce using rule 131 (exp4 -> e .)
    RSBRAC          reduce using rule 131 (exp4 -> e .)
    TO              reduce using rule 131 (exp4 -> e .)


state 194

    (134) d_exp -> e_exp exp5 .

    PLUS            reduce using rule 134 (d_exp -> e_exp exp5 .)
    MINUS           reduce using rule 134 (d_exp -> e_exp exp5 .)
    LT              reduce using rule 134 (d_exp -> e_exp exp5 .)
    GT              reduce using rule 134 (d_exp -> e_exp exp5 .)
    COMP            reduce using rule 134 (d_exp -> e_exp exp5 .)
    NOTEQ           reduce using rule 134 (d_exp -> e_exp exp5 .)
    AND             reduce using rule 134 (d_exp -> e_exp exp5 .)
    OR              reduce using rule 134 (d_exp -> e_exp exp5 .)
    SEMICOLON       reduce using rule 134 (d_exp -> e_exp exp5 .)
    RPAR            reduce using rule 134 (d_exp -> e_exp exp5 .)
    COMMA           reduce using rule 134 (d_exp -> e_exp exp5 .)
    RSBRAC          reduce using rule 134 (d_exp -> e_exp exp5 .)
    TO              reduce using rule 134 (d_exp -> e_exp exp5 .)


state 195

    (135) exp5 -> MULT . push_mult e_exp pop_operador exp5
    (138) push_mult -> . e
    (153) e -> .

    LPAR            reduce using rule 153 (e -> .)
    CTEI            reduce using rule 153 (e -> .)
    CTEF            reduce using rule 153 (e -> .)
    CTESTR          reduce using rule 153 (e -> .)
    CTEB            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)

    push_mult                      shift and go to state 245
    e                              shift and go to state 246

state 196

    (136) exp5 -> DIV . push_div e_exp pop_operador exp5
    (139) push_div -> . e
    (153) e -> .

    LPAR            reduce using rule 153 (e -> .)
    CTEI            reduce using rule 153 (e -> .)
    CTEF            reduce using rule 153 (e -> .)
    CTESTR          reduce using rule 153 (e -> .)
    CTEB            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)

    push_div                       shift and go to state 247
    e                              shift and go to state 248

state 197

    (137) exp5 -> e .

    PLUS            reduce using rule 137 (exp5 -> e .)
    MINUS           reduce using rule 137 (exp5 -> e .)
    LT              reduce using rule 137 (exp5 -> e .)
    GT              reduce using rule 137 (exp5 -> e .)
    COMP            reduce using rule 137 (exp5 -> e .)
    NOTEQ           reduce using rule 137 (exp5 -> e .)
    AND             reduce using rule 137 (exp5 -> e .)
    OR              reduce using rule 137 (exp5 -> e .)
    SEMICOLON       reduce using rule 137 (exp5 -> e .)
    RPAR            reduce using rule 137 (exp5 -> e .)
    COMMA           reduce using rule 137 (exp5 -> e .)
    RSBRAC          reduce using rule 137 (exp5 -> e .)
    TO              reduce using rule 137 (exp5 -> e .)


state 198

    (140) e_exp -> LPAR expresion . RPAR

    RPAR            shift and go to state 249


state 199

    (144) var_cte -> CTEI ctei .

    MULT            reduce using rule 144 (var_cte -> CTEI ctei .)
    DIV             reduce using rule 144 (var_cte -> CTEI ctei .)
    PLUS            reduce using rule 144 (var_cte -> CTEI ctei .)
    MINUS           reduce using rule 144 (var_cte -> CTEI ctei .)
    LT              reduce using rule 144 (var_cte -> CTEI ctei .)
    GT              reduce using rule 144 (var_cte -> CTEI ctei .)
    COMP            reduce using rule 144 (var_cte -> CTEI ctei .)
    NOTEQ           reduce using rule 144 (var_cte -> CTEI ctei .)
    AND             reduce using rule 144 (var_cte -> CTEI ctei .)
    OR              reduce using rule 144 (var_cte -> CTEI ctei .)
    SEMICOLON       reduce using rule 144 (var_cte -> CTEI ctei .)
    RPAR            reduce using rule 144 (var_cte -> CTEI ctei .)
    COMMA           reduce using rule 144 (var_cte -> CTEI ctei .)
    RSBRAC          reduce using rule 144 (var_cte -> CTEI ctei .)
    TO              reduce using rule 144 (var_cte -> CTEI ctei .)


state 200

    (148) ctei -> e .

    MULT            reduce using rule 148 (ctei -> e .)
    DIV             reduce using rule 148 (ctei -> e .)
    PLUS            reduce using rule 148 (ctei -> e .)
    MINUS           reduce using rule 148 (ctei -> e .)
    LT              reduce using rule 148 (ctei -> e .)
    GT              reduce using rule 148 (ctei -> e .)
    COMP            reduce using rule 148 (ctei -> e .)
    NOTEQ           reduce using rule 148 (ctei -> e .)
    AND             reduce using rule 148 (ctei -> e .)
    OR              reduce using rule 148 (ctei -> e .)
    SEMICOLON       reduce using rule 148 (ctei -> e .)
    RPAR            reduce using rule 148 (ctei -> e .)
    COMMA           reduce using rule 148 (ctei -> e .)
    RSBRAC          reduce using rule 148 (ctei -> e .)
    TO              reduce using rule 148 (ctei -> e .)


state 201

    (145) var_cte -> CTEF ctef .

    MULT            reduce using rule 145 (var_cte -> CTEF ctef .)
    DIV             reduce using rule 145 (var_cte -> CTEF ctef .)
    PLUS            reduce using rule 145 (var_cte -> CTEF ctef .)
    MINUS           reduce using rule 145 (var_cte -> CTEF ctef .)
    LT              reduce using rule 145 (var_cte -> CTEF ctef .)
    GT              reduce using rule 145 (var_cte -> CTEF ctef .)
    COMP            reduce using rule 145 (var_cte -> CTEF ctef .)
    NOTEQ           reduce using rule 145 (var_cte -> CTEF ctef .)
    AND             reduce using rule 145 (var_cte -> CTEF ctef .)
    OR              reduce using rule 145 (var_cte -> CTEF ctef .)
    SEMICOLON       reduce using rule 145 (var_cte -> CTEF ctef .)
    RPAR            reduce using rule 145 (var_cte -> CTEF ctef .)
    COMMA           reduce using rule 145 (var_cte -> CTEF ctef .)
    RSBRAC          reduce using rule 145 (var_cte -> CTEF ctef .)
    TO              reduce using rule 145 (var_cte -> CTEF ctef .)


state 202

    (149) ctef -> e .

    MULT            reduce using rule 149 (ctef -> e .)
    DIV             reduce using rule 149 (ctef -> e .)
    PLUS            reduce using rule 149 (ctef -> e .)
    MINUS           reduce using rule 149 (ctef -> e .)
    LT              reduce using rule 149 (ctef -> e .)
    GT              reduce using rule 149 (ctef -> e .)
    COMP            reduce using rule 149 (ctef -> e .)
    NOTEQ           reduce using rule 149 (ctef -> e .)
    AND             reduce using rule 149 (ctef -> e .)
    OR              reduce using rule 149 (ctef -> e .)
    SEMICOLON       reduce using rule 149 (ctef -> e .)
    RPAR            reduce using rule 149 (ctef -> e .)
    COMMA           reduce using rule 149 (ctef -> e .)
    RSBRAC          reduce using rule 149 (ctef -> e .)
    TO              reduce using rule 149 (ctef -> e .)


state 203

    (146) var_cte -> CTESTR ctestr .

    MULT            reduce using rule 146 (var_cte -> CTESTR ctestr .)
    DIV             reduce using rule 146 (var_cte -> CTESTR ctestr .)
    PLUS            reduce using rule 146 (var_cte -> CTESTR ctestr .)
    MINUS           reduce using rule 146 (var_cte -> CTESTR ctestr .)
    LT              reduce using rule 146 (var_cte -> CTESTR ctestr .)
    GT              reduce using rule 146 (var_cte -> CTESTR ctestr .)
    COMP            reduce using rule 146 (var_cte -> CTESTR ctestr .)
    NOTEQ           reduce using rule 146 (var_cte -> CTESTR ctestr .)
    AND             reduce using rule 146 (var_cte -> CTESTR ctestr .)
    OR              reduce using rule 146 (var_cte -> CTESTR ctestr .)
    SEMICOLON       reduce using rule 146 (var_cte -> CTESTR ctestr .)
    RPAR            reduce using rule 146 (var_cte -> CTESTR ctestr .)
    COMMA           reduce using rule 146 (var_cte -> CTESTR ctestr .)
    RSBRAC          reduce using rule 146 (var_cte -> CTESTR ctestr .)
    TO              reduce using rule 146 (var_cte -> CTESTR ctestr .)


state 204

    (150) ctestr -> e .

    MULT            reduce using rule 150 (ctestr -> e .)
    DIV             reduce using rule 150 (ctestr -> e .)
    PLUS            reduce using rule 150 (ctestr -> e .)
    MINUS           reduce using rule 150 (ctestr -> e .)
    LT              reduce using rule 150 (ctestr -> e .)
    GT              reduce using rule 150 (ctestr -> e .)
    COMP            reduce using rule 150 (ctestr -> e .)
    NOTEQ           reduce using rule 150 (ctestr -> e .)
    AND             reduce using rule 150 (ctestr -> e .)
    OR              reduce using rule 150 (ctestr -> e .)
    SEMICOLON       reduce using rule 150 (ctestr -> e .)
    RPAR            reduce using rule 150 (ctestr -> e .)
    COMMA           reduce using rule 150 (ctestr -> e .)
    RSBRAC          reduce using rule 150 (ctestr -> e .)
    TO              reduce using rule 150 (ctestr -> e .)


state 205

    (147) var_cte -> CTEB cteb .

    MULT            reduce using rule 147 (var_cte -> CTEB cteb .)
    DIV             reduce using rule 147 (var_cte -> CTEB cteb .)
    PLUS            reduce using rule 147 (var_cte -> CTEB cteb .)
    MINUS           reduce using rule 147 (var_cte -> CTEB cteb .)
    LT              reduce using rule 147 (var_cte -> CTEB cteb .)
    GT              reduce using rule 147 (var_cte -> CTEB cteb .)
    COMP            reduce using rule 147 (var_cte -> CTEB cteb .)
    NOTEQ           reduce using rule 147 (var_cte -> CTEB cteb .)
    AND             reduce using rule 147 (var_cte -> CTEB cteb .)
    OR              reduce using rule 147 (var_cte -> CTEB cteb .)
    SEMICOLON       reduce using rule 147 (var_cte -> CTEB cteb .)
    RPAR            reduce using rule 147 (var_cte -> CTEB cteb .)
    COMMA           reduce using rule 147 (var_cte -> CTEB cteb .)
    RSBRAC          reduce using rule 147 (var_cte -> CTEB cteb .)
    TO              reduce using rule 147 (var_cte -> CTEB cteb .)


state 206

    (151) cteb -> e .

    MULT            reduce using rule 151 (cteb -> e .)
    DIV             reduce using rule 151 (cteb -> e .)
    PLUS            reduce using rule 151 (cteb -> e .)
    MINUS           reduce using rule 151 (cteb -> e .)
    LT              reduce using rule 151 (cteb -> e .)
    GT              reduce using rule 151 (cteb -> e .)
    COMP            reduce using rule 151 (cteb -> e .)
    NOTEQ           reduce using rule 151 (cteb -> e .)
    AND             reduce using rule 151 (cteb -> e .)
    OR              reduce using rule 151 (cteb -> e .)
    SEMICOLON       reduce using rule 151 (cteb -> e .)
    RPAR            reduce using rule 151 (cteb -> e .)
    COMMA           reduce using rule 151 (cteb -> e .)
    RSBRAC          reduce using rule 151 (cteb -> e .)
    TO              reduce using rule 151 (cteb -> e .)


state 207

    (76) llamada -> validar_id llamada1 . LPAR llamada2 RPAR

    LPAR            shift and go to state 250


state 208

    (70) condicion -> IF LPAR expresion RPAR . gotoF bloque condicion1 fill
    (71) gotoF -> . e
    (153) e -> .

    LCBRAC          reduce using rule 153 (e -> .)

    gotoF                          shift and go to state 251
    e                              shift and go to state 252

state 209

    (77) llamada_void -> validar_id llamada1 LPAR llamada2 . RPAR

    RPAR            shift and go to state 253


state 210

    (81) llamada2 -> expresion . cuad_param llamada3
    (83) cuad_param -> . e
    (153) e -> .

    COMMA           reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)

    cuad_param                     shift and go to state 254
    e                              shift and go to state 255

state 211

    (82) llamada2 -> e .

    RPAR            reduce using rule 82 (llamada2 -> e .)


state 212

    (86) leer -> READ LPAR variable add_read . generar_cuadr RPAR SEMICOLON
    (152) generar_cuadr -> . e
    (153) e -> .

    RPAR            reduce using rule 153 (e -> .)

    generar_cuadr                  shift and go to state 256
    e                              shift and go to state 257

state 213

    (87) add_read -> e .

    RPAR            reduce using rule 87 (add_read -> e .)


state 214

    (88) escribir -> WRITE LPAR escribir1 RPAR . SEMICOLON

    SEMICOLON       shift and go to state 258


state 215

    (89) escribir1 -> texto add_print . generar_cuadr escribir2
    (152) generar_cuadr -> . e
    (153) e -> .

    COMMA           reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)

    generar_cuadr                  shift and go to state 259
    e                              shift and go to state 257

state 216

    (91) add_print -> e .

    COMMA           reduce using rule 91 (add_print -> e .)
    RPAR            reduce using rule 91 (add_print -> e .)


state 217

    (90) escribir1 -> expresion add_print . generar_cuadr escribir2
    (152) generar_cuadr -> . e
    (153) e -> .

    COMMA           reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)

    generar_cuadr                  shift and go to state 260
    e                              shift and go to state 257

state 218

    (95) ciclo_w -> WHILE push_while LPAR expresion . RPAR gotoF DO bloque return_while

    RPAR            shift and go to state 261


state 219

    (98) ciclo_f -> FROM LPAR variable asign_aux . EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go

    EQ              shift and go to state 262


state 220

    (102) asign_aux -> e .

    EQ              reduce using rule 102 (asign_aux -> e .)


state 221

    (66) variable2 -> LSBRAC expresion . RSBRAC variable3

    RSBRAC          shift and go to state 263


state 222

    (50) bloque_return -> LCBRAC estatutos regresar RCBRAC .

    VOID            reduce using rule 50 (bloque_return -> LCBRAC estatutos regresar RCBRAC .)
    INT             reduce using rule 50 (bloque_return -> LCBRAC estatutos regresar RCBRAC .)
    FLOAT           reduce using rule 50 (bloque_return -> LCBRAC estatutos regresar RCBRAC .)
    STRING          reduce using rule 50 (bloque_return -> LCBRAC estatutos regresar RCBRAC .)
    BOOL            reduce using rule 50 (bloque_return -> LCBRAC estatutos regresar RCBRAC .)
    MAIN            reduce using rule 50 (bloque_return -> LCBRAC estatutos regresar RCBRAC .)
    RCBRAC          reduce using rule 50 (bloque_return -> LCBRAC estatutos regresar RCBRAC .)


state 223

    (51) bloque_return -> LCBRAC estatutos regresar_void RCBRAC .

    VOID            reduce using rule 51 (bloque_return -> LCBRAC estatutos regresar_void RCBRAC .)
    INT             reduce using rule 51 (bloque_return -> LCBRAC estatutos regresar_void RCBRAC .)
    FLOAT           reduce using rule 51 (bloque_return -> LCBRAC estatutos regresar_void RCBRAC .)
    STRING          reduce using rule 51 (bloque_return -> LCBRAC estatutos regresar_void RCBRAC .)
    BOOL            reduce using rule 51 (bloque_return -> LCBRAC estatutos regresar_void RCBRAC .)
    MAIN            reduce using rule 51 (bloque_return -> LCBRAC estatutos regresar_void RCBRAC .)
    RCBRAC          reduce using rule 51 (bloque_return -> LCBRAC estatutos regresar_void RCBRAC .)


state 224

    (108) regresar -> RETURN expresion . SEMICOLON

    SEMICOLON       shift and go to state 264


state 225

    (107) regresar_void -> RETURN SEMICOLON .

    RCBRAC          reduce using rule 107 (regresar_void -> RETURN SEMICOLON .)


state 226

    (43) funcion3 -> COMMA ID COLON . tipo funcion3
    (45) tipo -> . INT
    (46) tipo -> . FLOAT
    (47) tipo -> . STRING
    (48) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

    tipo                           shift and go to state 265

state 227

    (61) asignacion -> variable EQ expresion SEMICOLON atomic_assign .

    IF              reduce using rule 61 (asignacion -> variable EQ expresion SEMICOLON atomic_assign .)
    READ            reduce using rule 61 (asignacion -> variable EQ expresion SEMICOLON atomic_assign .)
    WRITE           reduce using rule 61 (asignacion -> variable EQ expresion SEMICOLON atomic_assign .)
    WHILE           reduce using rule 61 (asignacion -> variable EQ expresion SEMICOLON atomic_assign .)
    FROM            reduce using rule 61 (asignacion -> variable EQ expresion SEMICOLON atomic_assign .)
    ID              reduce using rule 61 (asignacion -> variable EQ expresion SEMICOLON atomic_assign .)
    RCBRAC          reduce using rule 61 (asignacion -> variable EQ expresion SEMICOLON atomic_assign .)
    METHODS         reduce using rule 61 (asignacion -> variable EQ expresion SEMICOLON atomic_assign .)
    RETURN          reduce using rule 61 (asignacion -> variable EQ expresion SEMICOLON atomic_assign .)


state 228

    (62) atomic_assign -> e .

    IF              reduce using rule 62 (atomic_assign -> e .)
    READ            reduce using rule 62 (atomic_assign -> e .)
    WRITE           reduce using rule 62 (atomic_assign -> e .)
    WHILE           reduce using rule 62 (atomic_assign -> e .)
    FROM            reduce using rule 62 (atomic_assign -> e .)
    ID              reduce using rule 62 (atomic_assign -> e .)
    RCBRAC          reduce using rule 62 (atomic_assign -> e .)
    METHODS         reduce using rule 62 (atomic_assign -> e .)
    RETURN          reduce using rule 62 (atomic_assign -> e .)
    TO              reduce using rule 62 (atomic_assign -> e .)
    RPAR            reduce using rule 62 (atomic_assign -> e .)


state 229

    (110) exp1 -> OR push_or . a_exp pop_operador exp1
    (114) a_exp -> . b_exp exp2
    (118) b_exp -> . c_exp exp3
    (128) c_exp -> . d_exp exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    a_exp                          shift and go to state 266
    b_exp                          shift and go to state 146
    c_exp                          shift and go to state 147
    d_exp                          shift and go to state 148
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 230

    (112) push_or -> e .

    LPAR            reduce using rule 112 (push_or -> e .)
    CTEI            reduce using rule 112 (push_or -> e .)
    CTEF            reduce using rule 112 (push_or -> e .)
    CTESTR          reduce using rule 112 (push_or -> e .)
    CTEB            reduce using rule 112 (push_or -> e .)
    ID              reduce using rule 112 (push_or -> e .)


state 231

    (115) exp2 -> AND push_and . b_exp pop_operador exp2
    (118) b_exp -> . c_exp exp3
    (128) c_exp -> . d_exp exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    b_exp                          shift and go to state 267
    c_exp                          shift and go to state 147
    d_exp                          shift and go to state 148
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 232

    (117) push_and -> e .

    LPAR            reduce using rule 117 (push_and -> e .)
    CTEI            reduce using rule 117 (push_and -> e .)
    CTEF            reduce using rule 117 (push_and -> e .)
    CTESTR          reduce using rule 117 (push_and -> e .)
    CTEB            reduce using rule 117 (push_and -> e .)
    ID              reduce using rule 117 (push_and -> e .)


state 233

    (119) exp3 -> LT push_lt . c_exp pop_operador exp3
    (128) c_exp -> . d_exp exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    c_exp                          shift and go to state 268
    d_exp                          shift and go to state 148
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 234

    (124) push_lt -> e .

    LPAR            reduce using rule 124 (push_lt -> e .)
    CTEI            reduce using rule 124 (push_lt -> e .)
    CTEF            reduce using rule 124 (push_lt -> e .)
    CTESTR          reduce using rule 124 (push_lt -> e .)
    CTEB            reduce using rule 124 (push_lt -> e .)
    ID              reduce using rule 124 (push_lt -> e .)
    RPAR            reduce using rule 124 (push_lt -> e .)


state 235

    (120) exp3 -> GT push_gt . c_exp pop_operador exp3
    (128) c_exp -> . d_exp exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    c_exp                          shift and go to state 269
    d_exp                          shift and go to state 148
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 236

    (125) push_gt -> e .

    LPAR            reduce using rule 125 (push_gt -> e .)
    CTEI            reduce using rule 125 (push_gt -> e .)
    CTEF            reduce using rule 125 (push_gt -> e .)
    CTESTR          reduce using rule 125 (push_gt -> e .)
    CTEB            reduce using rule 125 (push_gt -> e .)
    ID              reduce using rule 125 (push_gt -> e .)


state 237

    (121) exp3 -> COMP push_comp . c_exp pop_operador exp3
    (128) c_exp -> . d_exp exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    c_exp                          shift and go to state 270
    d_exp                          shift and go to state 148
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 238

    (126) push_comp -> e .

    LPAR            reduce using rule 126 (push_comp -> e .)
    CTEI            reduce using rule 126 (push_comp -> e .)
    CTEF            reduce using rule 126 (push_comp -> e .)
    CTESTR          reduce using rule 126 (push_comp -> e .)
    CTEB            reduce using rule 126 (push_comp -> e .)
    ID              reduce using rule 126 (push_comp -> e .)


state 239

    (122) exp3 -> NOTEQ push_noteq . c_exp pop_operador exp3
    (128) c_exp -> . d_exp exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    c_exp                          shift and go to state 271
    d_exp                          shift and go to state 148
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 240

    (127) push_noteq -> e .

    LPAR            reduce using rule 127 (push_noteq -> e .)
    CTEI            reduce using rule 127 (push_noteq -> e .)
    CTEF            reduce using rule 127 (push_noteq -> e .)
    CTESTR          reduce using rule 127 (push_noteq -> e .)
    CTEB            reduce using rule 127 (push_noteq -> e .)
    ID              reduce using rule 127 (push_noteq -> e .)


state 241

    (129) exp4 -> PLUS push_plus . d_exp pop_operador exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    d_exp                          shift and go to state 272
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 242

    (132) push_plus -> e .

    LPAR            reduce using rule 132 (push_plus -> e .)
    CTEI            reduce using rule 132 (push_plus -> e .)
    CTEF            reduce using rule 132 (push_plus -> e .)
    CTESTR          reduce using rule 132 (push_plus -> e .)
    CTEB            reduce using rule 132 (push_plus -> e .)
    ID              reduce using rule 132 (push_plus -> e .)
    IF              reduce using rule 132 (push_plus -> e .)
    READ            reduce using rule 132 (push_plus -> e .)
    WRITE           reduce using rule 132 (push_plus -> e .)
    WHILE           reduce using rule 132 (push_plus -> e .)
    FROM            reduce using rule 132 (push_plus -> e .)
    RCBRAC          reduce using rule 132 (push_plus -> e .)
    RETURN          reduce using rule 132 (push_plus -> e .)


state 243

    (130) exp4 -> MINUS push_minus . d_exp pop_operador exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    d_exp                          shift and go to state 273
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 244

    (133) push_minus -> e .

    LPAR            reduce using rule 133 (push_minus -> e .)
    CTEI            reduce using rule 133 (push_minus -> e .)
    CTEF            reduce using rule 133 (push_minus -> e .)
    CTESTR          reduce using rule 133 (push_minus -> e .)
    CTEB            reduce using rule 133 (push_minus -> e .)
    ID              reduce using rule 133 (push_minus -> e .)


state 245

    (135) exp5 -> MULT push_mult . e_exp pop_operador exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    e_exp                          shift and go to state 274
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 246

    (138) push_mult -> e .

    LPAR            reduce using rule 138 (push_mult -> e .)
    CTEI            reduce using rule 138 (push_mult -> e .)
    CTEF            reduce using rule 138 (push_mult -> e .)
    CTESTR          reduce using rule 138 (push_mult -> e .)
    CTEB            reduce using rule 138 (push_mult -> e .)
    ID              reduce using rule 138 (push_mult -> e .)


state 247

    (136) exp5 -> DIV push_div . e_exp pop_operador exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    e_exp                          shift and go to state 275
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 248

    (139) push_div -> e .

    LPAR            reduce using rule 139 (push_div -> e .)
    CTEI            reduce using rule 139 (push_div -> e .)
    CTEF            reduce using rule 139 (push_div -> e .)
    CTESTR          reduce using rule 139 (push_div -> e .)
    CTEB            reduce using rule 139 (push_div -> e .)
    ID              reduce using rule 139 (push_div -> e .)


state 249

    (140) e_exp -> LPAR expresion RPAR .

    MULT            reduce using rule 140 (e_exp -> LPAR expresion RPAR .)
    DIV             reduce using rule 140 (e_exp -> LPAR expresion RPAR .)
    PLUS            reduce using rule 140 (e_exp -> LPAR expresion RPAR .)
    MINUS           reduce using rule 140 (e_exp -> LPAR expresion RPAR .)
    LT              reduce using rule 140 (e_exp -> LPAR expresion RPAR .)
    GT              reduce using rule 140 (e_exp -> LPAR expresion RPAR .)
    COMP            reduce using rule 140 (e_exp -> LPAR expresion RPAR .)
    NOTEQ           reduce using rule 140 (e_exp -> LPAR expresion RPAR .)
    AND             reduce using rule 140 (e_exp -> LPAR expresion RPAR .)
    OR              reduce using rule 140 (e_exp -> LPAR expresion RPAR .)
    SEMICOLON       reduce using rule 140 (e_exp -> LPAR expresion RPAR .)
    RPAR            reduce using rule 140 (e_exp -> LPAR expresion RPAR .)
    COMMA           reduce using rule 140 (e_exp -> LPAR expresion RPAR .)
    RSBRAC          reduce using rule 140 (e_exp -> LPAR expresion RPAR .)
    TO              reduce using rule 140 (e_exp -> LPAR expresion RPAR .)


state 250

    (76) llamada -> validar_id llamada1 LPAR . llamada2 RPAR
    (81) llamada2 -> . expresion cuad_param llamada3
    (82) llamada2 -> . e
    (109) expresion -> . a_exp exp1
    (153) e -> .
    (114) a_exp -> . b_exp exp2
    (118) b_exp -> . c_exp exp3
    (128) c_exp -> . d_exp exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    RPAR            reduce using rule 153 (e -> .)
    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    validar_id                     shift and go to state 157
    llamada2                       shift and go to state 276
    expresion                      shift and go to state 210
    e                              shift and go to state 211
    a_exp                          shift and go to state 145
    b_exp                          shift and go to state 146
    c_exp                          shift and go to state 147
    d_exp                          shift and go to state 148
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152

state 251

    (70) condicion -> IF LPAR expresion RPAR gotoF . bloque condicion1 fill
    (49) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 79

    bloque                         shift and go to state 277

state 252

    (71) gotoF -> e .

    LCBRAC          reduce using rule 71 (gotoF -> e .)
    DO              reduce using rule 71 (gotoF -> e .)
    RPAR            reduce using rule 71 (gotoF -> e .)


state 253

    (77) llamada_void -> validar_id llamada1 LPAR llamada2 RPAR .

    SEMICOLON       reduce using rule 77 (llamada_void -> validar_id llamada1 LPAR llamada2 RPAR .)


state 254

    (81) llamada2 -> expresion cuad_param . llamada3
    (84) llamada3 -> . COMMA expresion cuad_param llamada3
    (85) llamada3 -> . e
    (153) e -> .

    COMMA           shift and go to state 279
    RPAR            reduce using rule 153 (e -> .)

    llamada3                       shift and go to state 278
    e                              shift and go to state 280

state 255

    (83) cuad_param -> e .

    COMMA           reduce using rule 83 (cuad_param -> e .)
    RPAR            reduce using rule 83 (cuad_param -> e .)


state 256

    (86) leer -> READ LPAR variable add_read generar_cuadr . RPAR SEMICOLON

    RPAR            shift and go to state 281


state 257

    (152) generar_cuadr -> e .

    RPAR            reduce using rule 152 (generar_cuadr -> e .)
    COMMA           reduce using rule 152 (generar_cuadr -> e .)


state 258

    (88) escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .

    IF              reduce using rule 88 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    READ            reduce using rule 88 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    WRITE           reduce using rule 88 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    WHILE           reduce using rule 88 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    FROM            reduce using rule 88 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    ID              reduce using rule 88 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    RCBRAC          reduce using rule 88 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    RETURN          reduce using rule 88 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)


state 259

    (89) escribir1 -> texto add_print generar_cuadr . escribir2
    (92) escribir2 -> . COMMA escribir1
    (93) escribir2 -> . e
    (153) e -> .

    COMMA           shift and go to state 283
    RPAR            reduce using rule 153 (e -> .)

    escribir2                      shift and go to state 282
    e                              shift and go to state 284

state 260

    (90) escribir1 -> expresion add_print generar_cuadr . escribir2
    (92) escribir2 -> . COMMA escribir1
    (93) escribir2 -> . e
    (153) e -> .

    COMMA           shift and go to state 283
    RPAR            reduce using rule 153 (e -> .)

    escribir2                      shift and go to state 285
    e                              shift and go to state 284

state 261

    (95) ciclo_w -> WHILE push_while LPAR expresion RPAR . gotoF DO bloque return_while
    (71) gotoF -> . e
    (153) e -> .

    DO              reduce using rule 153 (e -> .)

    gotoF                          shift and go to state 286
    e                              shift and go to state 252

state 262

    (98) ciclo_f -> FROM LPAR variable asign_aux EQ . expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (109) expresion -> . a_exp exp1
    (114) a_exp -> . b_exp exp2
    (118) b_exp -> . c_exp exp3
    (128) c_exp -> . d_exp exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    variable                       shift and go to state 143
    expresion                      shift and go to state 287
    a_exp                          shift and go to state 145
    b_exp                          shift and go to state 146
    c_exp                          shift and go to state 147
    d_exp                          shift and go to state 148
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 263

    (66) variable2 -> LSBRAC expresion RSBRAC . variable3
    (68) variable3 -> . LSBRAC expresion RSBRAC
    (69) variable3 -> . e
    (153) e -> .

    LSBRAC          shift and go to state 288
    EQ              reduce using rule 153 (e -> .)
    MULT            reduce using rule 153 (e -> .)
    DIV             reduce using rule 153 (e -> .)
    PLUS            reduce using rule 153 (e -> .)
    MINUS           reduce using rule 153 (e -> .)
    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    variable3                      shift and go to state 289
    e                              shift and go to state 290

state 264

    (108) regresar -> RETURN expresion SEMICOLON .

    RCBRAC          reduce using rule 108 (regresar -> RETURN expresion SEMICOLON .)


state 265

    (43) funcion3 -> COMMA ID COLON tipo . funcion3
    (43) funcion3 -> . COMMA ID COLON tipo funcion3
    (44) funcion3 -> . e
    (153) e -> .

    COMMA           shift and go to state 139
    RPAR            reduce using rule 153 (e -> .)

    funcion3                       shift and go to state 291
    e                              shift and go to state 140

state 266

    (110) exp1 -> OR push_or a_exp . pop_operador exp1
    (113) pop_operador -> . e
    (153) e -> .

    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    pop_operador                   shift and go to state 292
    e                              shift and go to state 293

state 267

    (115) exp2 -> AND push_and b_exp . pop_operador exp2
    (113) pop_operador -> . e
    (153) e -> .

    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    pop_operador                   shift and go to state 294
    e                              shift and go to state 293

state 268

    (119) exp3 -> LT push_lt c_exp . pop_operador exp3
    (113) pop_operador -> . e
    (153) e -> .

    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    pop_operador                   shift and go to state 295
    e                              shift and go to state 293

state 269

    (120) exp3 -> GT push_gt c_exp . pop_operador exp3
    (113) pop_operador -> . e
    (153) e -> .

    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    pop_operador                   shift and go to state 296
    e                              shift and go to state 293

state 270

    (121) exp3 -> COMP push_comp c_exp . pop_operador exp3
    (113) pop_operador -> . e
    (153) e -> .

    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    pop_operador                   shift and go to state 297
    e                              shift and go to state 293

state 271

    (122) exp3 -> NOTEQ push_noteq c_exp . pop_operador exp3
    (113) pop_operador -> . e
    (153) e -> .

    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    pop_operador                   shift and go to state 298
    e                              shift and go to state 293

state 272

    (129) exp4 -> PLUS push_plus d_exp . pop_operador exp4
    (113) pop_operador -> . e
    (153) e -> .

    PLUS            reduce using rule 153 (e -> .)
    MINUS           reduce using rule 153 (e -> .)
    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    pop_operador                   shift and go to state 299
    e                              shift and go to state 293

state 273

    (130) exp4 -> MINUS push_minus d_exp . pop_operador exp4
    (113) pop_operador -> . e
    (153) e -> .

    PLUS            reduce using rule 153 (e -> .)
    MINUS           reduce using rule 153 (e -> .)
    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    pop_operador                   shift and go to state 300
    e                              shift and go to state 293

state 274

    (135) exp5 -> MULT push_mult e_exp . pop_operador exp5
    (113) pop_operador -> . e
    (153) e -> .

    MULT            reduce using rule 153 (e -> .)
    DIV             reduce using rule 153 (e -> .)
    PLUS            reduce using rule 153 (e -> .)
    MINUS           reduce using rule 153 (e -> .)
    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    pop_operador                   shift and go to state 301
    e                              shift and go to state 293

state 275

    (136) exp5 -> DIV push_div e_exp . pop_operador exp5
    (113) pop_operador -> . e
    (153) e -> .

    MULT            reduce using rule 153 (e -> .)
    DIV             reduce using rule 153 (e -> .)
    PLUS            reduce using rule 153 (e -> .)
    MINUS           reduce using rule 153 (e -> .)
    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    pop_operador                   shift and go to state 302
    e                              shift and go to state 293

state 276

    (76) llamada -> validar_id llamada1 LPAR llamada2 . RPAR

    RPAR            shift and go to state 303


state 277

    (70) condicion -> IF LPAR expresion RPAR gotoF bloque . condicion1 fill
    (73) condicion1 -> . ELSE goto bloque
    (74) condicion1 -> . e
    (153) e -> .

    ELSE            shift and go to state 305
    IF              reduce using rule 153 (e -> .)
    READ            reduce using rule 153 (e -> .)
    WRITE           reduce using rule 153 (e -> .)
    WHILE           reduce using rule 153 (e -> .)
    FROM            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)
    RCBRAC          reduce using rule 153 (e -> .)
    RETURN          reduce using rule 153 (e -> .)

    condicion1                     shift and go to state 304
    e                              shift and go to state 306

state 278

    (81) llamada2 -> expresion cuad_param llamada3 .

    RPAR            reduce using rule 81 (llamada2 -> expresion cuad_param llamada3 .)


state 279

    (84) llamada3 -> COMMA . expresion cuad_param llamada3
    (109) expresion -> . a_exp exp1
    (114) a_exp -> . b_exp exp2
    (118) b_exp -> . c_exp exp3
    (128) c_exp -> . d_exp exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    expresion                      shift and go to state 307
    a_exp                          shift and go to state 145
    b_exp                          shift and go to state 146
    c_exp                          shift and go to state 147
    d_exp                          shift and go to state 148
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 280

    (85) llamada3 -> e .

    RPAR            reduce using rule 85 (llamada3 -> e .)


state 281

    (86) leer -> READ LPAR variable add_read generar_cuadr RPAR . SEMICOLON

    SEMICOLON       shift and go to state 308


state 282

    (89) escribir1 -> texto add_print generar_cuadr escribir2 .

    RPAR            reduce using rule 89 (escribir1 -> texto add_print generar_cuadr escribir2 .)


state 283

    (92) escribir2 -> COMMA . escribir1
    (89) escribir1 -> . texto add_print generar_cuadr escribir2
    (90) escribir1 -> . expresion add_print generar_cuadr escribir2
    (94) texto -> . CTESTR
    (109) expresion -> . a_exp exp1
    (114) a_exp -> . b_exp exp2
    (118) b_exp -> . c_exp exp3
    (128) c_exp -> . d_exp exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    CTESTR          shift and go to state 165
    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    escribir1                      shift and go to state 309
    texto                          shift and go to state 163
    expresion                      shift and go to state 164
    a_exp                          shift and go to state 145
    b_exp                          shift and go to state 146
    c_exp                          shift and go to state 147
    d_exp                          shift and go to state 148
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 284

    (93) escribir2 -> e .

    RPAR            reduce using rule 93 (escribir2 -> e .)


state 285

    (90) escribir1 -> expresion add_print generar_cuadr escribir2 .

    RPAR            reduce using rule 90 (escribir1 -> expresion add_print generar_cuadr escribir2 .)


state 286

    (95) ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF . DO bloque return_while

    DO              shift and go to state 310


state 287

    (98) ciclo_f -> FROM LPAR variable asign_aux EQ expresion . atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (62) atomic_assign -> . e
    (153) e -> .

    TO              reduce using rule 153 (e -> .)

    atomic_assign                  shift and go to state 311
    e                              shift and go to state 228

state 288

    (68) variable3 -> LSBRAC . expresion RSBRAC
    (109) expresion -> . a_exp exp1
    (114) a_exp -> . b_exp exp2
    (118) b_exp -> . c_exp exp3
    (128) c_exp -> . d_exp exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    expresion                      shift and go to state 312
    a_exp                          shift and go to state 145
    b_exp                          shift and go to state 146
    c_exp                          shift and go to state 147
    d_exp                          shift and go to state 148
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    variable                       shift and go to state 143
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 289

    (66) variable2 -> LSBRAC expresion RSBRAC variable3 .

    EQ              reduce using rule 66 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    MULT            reduce using rule 66 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    DIV             reduce using rule 66 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    PLUS            reduce using rule 66 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    MINUS           reduce using rule 66 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    LT              reduce using rule 66 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    GT              reduce using rule 66 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    COMP            reduce using rule 66 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    NOTEQ           reduce using rule 66 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    AND             reduce using rule 66 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    OR              reduce using rule 66 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    SEMICOLON       reduce using rule 66 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    RPAR            reduce using rule 66 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    COMMA           reduce using rule 66 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    RSBRAC          reduce using rule 66 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    TO              reduce using rule 66 (variable2 -> LSBRAC expresion RSBRAC variable3 .)


state 290

    (69) variable3 -> e .

    EQ              reduce using rule 69 (variable3 -> e .)
    MULT            reduce using rule 69 (variable3 -> e .)
    DIV             reduce using rule 69 (variable3 -> e .)
    PLUS            reduce using rule 69 (variable3 -> e .)
    MINUS           reduce using rule 69 (variable3 -> e .)
    LT              reduce using rule 69 (variable3 -> e .)
    GT              reduce using rule 69 (variable3 -> e .)
    COMP            reduce using rule 69 (variable3 -> e .)
    NOTEQ           reduce using rule 69 (variable3 -> e .)
    AND             reduce using rule 69 (variable3 -> e .)
    OR              reduce using rule 69 (variable3 -> e .)
    SEMICOLON       reduce using rule 69 (variable3 -> e .)
    RPAR            reduce using rule 69 (variable3 -> e .)
    COMMA           reduce using rule 69 (variable3 -> e .)
    RSBRAC          reduce using rule 69 (variable3 -> e .)
    TO              reduce using rule 69 (variable3 -> e .)


state 291

    (43) funcion3 -> COMMA ID COLON tipo funcion3 .

    RPAR            reduce using rule 43 (funcion3 -> COMMA ID COLON tipo funcion3 .)


state 292

    (110) exp1 -> OR push_or a_exp pop_operador . exp1
    (110) exp1 -> . OR push_or a_exp pop_operador exp1
    (111) exp1 -> . e
    (153) e -> .

    OR              shift and go to state 179
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    exp1                           shift and go to state 313
    e                              shift and go to state 180

state 293

    (113) pop_operador -> e .

    OR              reduce using rule 113 (pop_operador -> e .)
    SEMICOLON       reduce using rule 113 (pop_operador -> e .)
    RPAR            reduce using rule 113 (pop_operador -> e .)
    COMMA           reduce using rule 113 (pop_operador -> e .)
    RSBRAC          reduce using rule 113 (pop_operador -> e .)
    TO              reduce using rule 113 (pop_operador -> e .)
    AND             reduce using rule 113 (pop_operador -> e .)
    LT              reduce using rule 113 (pop_operador -> e .)
    GT              reduce using rule 113 (pop_operador -> e .)
    COMP            reduce using rule 113 (pop_operador -> e .)
    NOTEQ           reduce using rule 113 (pop_operador -> e .)
    PLUS            reduce using rule 113 (pop_operador -> e .)
    MINUS           reduce using rule 113 (pop_operador -> e .)
    MULT            reduce using rule 113 (pop_operador -> e .)
    DIV             reduce using rule 113 (pop_operador -> e .)
    IF              reduce using rule 113 (pop_operador -> e .)
    READ            reduce using rule 113 (pop_operador -> e .)
    WRITE           reduce using rule 113 (pop_operador -> e .)
    WHILE           reduce using rule 113 (pop_operador -> e .)
    FROM            reduce using rule 113 (pop_operador -> e .)
    ID              reduce using rule 113 (pop_operador -> e .)
    RCBRAC          reduce using rule 113 (pop_operador -> e .)
    RETURN          reduce using rule 113 (pop_operador -> e .)


state 294

    (115) exp2 -> AND push_and b_exp pop_operador . exp2
    (115) exp2 -> . AND push_and b_exp pop_operador exp2
    (116) exp2 -> . e
    (153) e -> .

    AND             shift and go to state 182
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    exp2                           shift and go to state 314
    e                              shift and go to state 183

state 295

    (119) exp3 -> LT push_lt c_exp pop_operador . exp3
    (119) exp3 -> . LT push_lt c_exp pop_operador exp3
    (120) exp3 -> . GT push_gt c_exp pop_operador exp3
    (121) exp3 -> . COMP push_comp c_exp pop_operador exp3
    (122) exp3 -> . NOTEQ push_noteq c_exp pop_operador exp3
    (123) exp3 -> . e
    (153) e -> .

    LT              shift and go to state 185
    GT              shift and go to state 186
    COMP            shift and go to state 187
    NOTEQ           shift and go to state 188
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    exp3                           shift and go to state 315
    e                              shift and go to state 189

state 296

    (120) exp3 -> GT push_gt c_exp pop_operador . exp3
    (119) exp3 -> . LT push_lt c_exp pop_operador exp3
    (120) exp3 -> . GT push_gt c_exp pop_operador exp3
    (121) exp3 -> . COMP push_comp c_exp pop_operador exp3
    (122) exp3 -> . NOTEQ push_noteq c_exp pop_operador exp3
    (123) exp3 -> . e
    (153) e -> .

    LT              shift and go to state 185
    GT              shift and go to state 186
    COMP            shift and go to state 187
    NOTEQ           shift and go to state 188
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    exp3                           shift and go to state 316
    e                              shift and go to state 189

state 297

    (121) exp3 -> COMP push_comp c_exp pop_operador . exp3
    (119) exp3 -> . LT push_lt c_exp pop_operador exp3
    (120) exp3 -> . GT push_gt c_exp pop_operador exp3
    (121) exp3 -> . COMP push_comp c_exp pop_operador exp3
    (122) exp3 -> . NOTEQ push_noteq c_exp pop_operador exp3
    (123) exp3 -> . e
    (153) e -> .

    LT              shift and go to state 185
    GT              shift and go to state 186
    COMP            shift and go to state 187
    NOTEQ           shift and go to state 188
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    exp3                           shift and go to state 317
    e                              shift and go to state 189

state 298

    (122) exp3 -> NOTEQ push_noteq c_exp pop_operador . exp3
    (119) exp3 -> . LT push_lt c_exp pop_operador exp3
    (120) exp3 -> . GT push_gt c_exp pop_operador exp3
    (121) exp3 -> . COMP push_comp c_exp pop_operador exp3
    (122) exp3 -> . NOTEQ push_noteq c_exp pop_operador exp3
    (123) exp3 -> . e
    (153) e -> .

    LT              shift and go to state 185
    GT              shift and go to state 186
    COMP            shift and go to state 187
    NOTEQ           shift and go to state 188
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    exp3                           shift and go to state 318
    e                              shift and go to state 189

state 299

    (129) exp4 -> PLUS push_plus d_exp pop_operador . exp4
    (129) exp4 -> . PLUS push_plus d_exp pop_operador exp4
    (130) exp4 -> . MINUS push_minus d_exp pop_operador exp4
    (131) exp4 -> . e
    (153) e -> .

    PLUS            shift and go to state 191
    MINUS           shift and go to state 192
    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    exp4                           shift and go to state 319
    e                              shift and go to state 193

state 300

    (130) exp4 -> MINUS push_minus d_exp pop_operador . exp4
    (129) exp4 -> . PLUS push_plus d_exp pop_operador exp4
    (130) exp4 -> . MINUS push_minus d_exp pop_operador exp4
    (131) exp4 -> . e
    (153) e -> .

    PLUS            shift and go to state 191
    MINUS           shift and go to state 192
    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    exp4                           shift and go to state 320
    e                              shift and go to state 193

state 301

    (135) exp5 -> MULT push_mult e_exp pop_operador . exp5
    (135) exp5 -> . MULT push_mult e_exp pop_operador exp5
    (136) exp5 -> . DIV push_div e_exp pop_operador exp5
    (137) exp5 -> . e
    (153) e -> .

    MULT            shift and go to state 195
    DIV             shift and go to state 196
    PLUS            reduce using rule 153 (e -> .)
    MINUS           reduce using rule 153 (e -> .)
    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    exp5                           shift and go to state 321
    e                              shift and go to state 197

state 302

    (136) exp5 -> DIV push_div e_exp pop_operador . exp5
    (135) exp5 -> . MULT push_mult e_exp pop_operador exp5
    (136) exp5 -> . DIV push_div e_exp pop_operador exp5
    (137) exp5 -> . e
    (153) e -> .

    MULT            shift and go to state 195
    DIV             shift and go to state 196
    PLUS            reduce using rule 153 (e -> .)
    MINUS           reduce using rule 153 (e -> .)
    LT              reduce using rule 153 (e -> .)
    GT              reduce using rule 153 (e -> .)
    COMP            reduce using rule 153 (e -> .)
    NOTEQ           reduce using rule 153 (e -> .)
    AND             reduce using rule 153 (e -> .)
    OR              reduce using rule 153 (e -> .)
    SEMICOLON       reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)
    COMMA           reduce using rule 153 (e -> .)
    RSBRAC          reduce using rule 153 (e -> .)
    TO              reduce using rule 153 (e -> .)

    exp5                           shift and go to state 322
    e                              shift and go to state 197

state 303

    (76) llamada -> validar_id llamada1 LPAR llamada2 RPAR .

    MULT            reduce using rule 76 (llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    DIV             reduce using rule 76 (llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    PLUS            reduce using rule 76 (llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    MINUS           reduce using rule 76 (llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    LT              reduce using rule 76 (llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    GT              reduce using rule 76 (llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    COMP            reduce using rule 76 (llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    NOTEQ           reduce using rule 76 (llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    AND             reduce using rule 76 (llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    OR              reduce using rule 76 (llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    SEMICOLON       reduce using rule 76 (llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    RPAR            reduce using rule 76 (llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    COMMA           reduce using rule 76 (llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    RSBRAC          reduce using rule 76 (llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    TO              reduce using rule 76 (llamada -> validar_id llamada1 LPAR llamada2 RPAR .)


state 304

    (70) condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 . fill
    (72) fill -> . e
    (153) e -> .

    IF              reduce using rule 153 (e -> .)
    READ            reduce using rule 153 (e -> .)
    WRITE           reduce using rule 153 (e -> .)
    WHILE           reduce using rule 153 (e -> .)
    FROM            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)
    RCBRAC          reduce using rule 153 (e -> .)
    RETURN          reduce using rule 153 (e -> .)

    fill                           shift and go to state 323
    e                              shift and go to state 324

state 305

    (73) condicion1 -> ELSE . goto bloque
    (75) goto -> . e
    (153) e -> .

    LCBRAC          reduce using rule 153 (e -> .)

    goto                           shift and go to state 325
    e                              shift and go to state 326

state 306

    (74) condicion1 -> e .

    IF              reduce using rule 74 (condicion1 -> e .)
    READ            reduce using rule 74 (condicion1 -> e .)
    WRITE           reduce using rule 74 (condicion1 -> e .)
    WHILE           reduce using rule 74 (condicion1 -> e .)
    FROM            reduce using rule 74 (condicion1 -> e .)
    ID              reduce using rule 74 (condicion1 -> e .)
    RCBRAC          reduce using rule 74 (condicion1 -> e .)
    RETURN          reduce using rule 74 (condicion1 -> e .)


state 307

    (84) llamada3 -> COMMA expresion . cuad_param llamada3
    (83) cuad_param -> . e
    (153) e -> .

    COMMA           reduce using rule 153 (e -> .)
    RPAR            reduce using rule 153 (e -> .)

    cuad_param                     shift and go to state 327
    e                              shift and go to state 255

state 308

    (86) leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .

    IF              reduce using rule 86 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    READ            reduce using rule 86 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    WRITE           reduce using rule 86 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    WHILE           reduce using rule 86 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    FROM            reduce using rule 86 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    ID              reduce using rule 86 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    RCBRAC          reduce using rule 86 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    RETURN          reduce using rule 86 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)


state 309

    (92) escribir2 -> COMMA escribir1 .

    RPAR            reduce using rule 92 (escribir2 -> COMMA escribir1 .)


state 310

    (95) ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO . bloque return_while
    (49) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 79

    bloque                         shift and go to state 328

state 311

    (98) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign . save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (105) save_aux -> . e
    (153) e -> .

    TO              reduce using rule 153 (e -> .)

    save_aux                       shift and go to state 329
    e                              shift and go to state 330

state 312

    (68) variable3 -> LSBRAC expresion . RSBRAC

    RSBRAC          shift and go to state 331


state 313

    (110) exp1 -> OR push_or a_exp pop_operador exp1 .

    SEMICOLON       reduce using rule 110 (exp1 -> OR push_or a_exp pop_operador exp1 .)
    RPAR            reduce using rule 110 (exp1 -> OR push_or a_exp pop_operador exp1 .)
    COMMA           reduce using rule 110 (exp1 -> OR push_or a_exp pop_operador exp1 .)
    RSBRAC          reduce using rule 110 (exp1 -> OR push_or a_exp pop_operador exp1 .)
    TO              reduce using rule 110 (exp1 -> OR push_or a_exp pop_operador exp1 .)


state 314

    (115) exp2 -> AND push_and b_exp pop_operador exp2 .

    OR              reduce using rule 115 (exp2 -> AND push_and b_exp pop_operador exp2 .)
    SEMICOLON       reduce using rule 115 (exp2 -> AND push_and b_exp pop_operador exp2 .)
    RPAR            reduce using rule 115 (exp2 -> AND push_and b_exp pop_operador exp2 .)
    COMMA           reduce using rule 115 (exp2 -> AND push_and b_exp pop_operador exp2 .)
    RSBRAC          reduce using rule 115 (exp2 -> AND push_and b_exp pop_operador exp2 .)
    TO              reduce using rule 115 (exp2 -> AND push_and b_exp pop_operador exp2 .)


state 315

    (119) exp3 -> LT push_lt c_exp pop_operador exp3 .

    AND             reduce using rule 119 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    OR              reduce using rule 119 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    SEMICOLON       reduce using rule 119 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    RPAR            reduce using rule 119 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    COMMA           reduce using rule 119 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    RSBRAC          reduce using rule 119 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    TO              reduce using rule 119 (exp3 -> LT push_lt c_exp pop_operador exp3 .)


state 316

    (120) exp3 -> GT push_gt c_exp pop_operador exp3 .

    AND             reduce using rule 120 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    OR              reduce using rule 120 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    SEMICOLON       reduce using rule 120 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    RPAR            reduce using rule 120 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    COMMA           reduce using rule 120 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    RSBRAC          reduce using rule 120 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    TO              reduce using rule 120 (exp3 -> GT push_gt c_exp pop_operador exp3 .)


state 317

    (121) exp3 -> COMP push_comp c_exp pop_operador exp3 .

    AND             reduce using rule 121 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    OR              reduce using rule 121 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    SEMICOLON       reduce using rule 121 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    RPAR            reduce using rule 121 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    COMMA           reduce using rule 121 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    RSBRAC          reduce using rule 121 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    TO              reduce using rule 121 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)


state 318

    (122) exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .

    AND             reduce using rule 122 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    OR              reduce using rule 122 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    SEMICOLON       reduce using rule 122 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    RPAR            reduce using rule 122 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    COMMA           reduce using rule 122 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    RSBRAC          reduce using rule 122 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    TO              reduce using rule 122 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)


state 319

    (129) exp4 -> PLUS push_plus d_exp pop_operador exp4 .

    LT              reduce using rule 129 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    GT              reduce using rule 129 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    COMP            reduce using rule 129 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    NOTEQ           reduce using rule 129 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    AND             reduce using rule 129 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    OR              reduce using rule 129 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    SEMICOLON       reduce using rule 129 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    RPAR            reduce using rule 129 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    COMMA           reduce using rule 129 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    RSBRAC          reduce using rule 129 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    TO              reduce using rule 129 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)


state 320

    (130) exp4 -> MINUS push_minus d_exp pop_operador exp4 .

    LT              reduce using rule 130 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    GT              reduce using rule 130 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    COMP            reduce using rule 130 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    NOTEQ           reduce using rule 130 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    AND             reduce using rule 130 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    OR              reduce using rule 130 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    SEMICOLON       reduce using rule 130 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    RPAR            reduce using rule 130 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    COMMA           reduce using rule 130 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    RSBRAC          reduce using rule 130 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    TO              reduce using rule 130 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)


state 321

    (135) exp5 -> MULT push_mult e_exp pop_operador exp5 .

    PLUS            reduce using rule 135 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    MINUS           reduce using rule 135 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    LT              reduce using rule 135 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    GT              reduce using rule 135 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    COMP            reduce using rule 135 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    NOTEQ           reduce using rule 135 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    AND             reduce using rule 135 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    OR              reduce using rule 135 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    SEMICOLON       reduce using rule 135 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    RPAR            reduce using rule 135 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    COMMA           reduce using rule 135 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    RSBRAC          reduce using rule 135 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    TO              reduce using rule 135 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)


state 322

    (136) exp5 -> DIV push_div e_exp pop_operador exp5 .

    PLUS            reduce using rule 136 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    MINUS           reduce using rule 136 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    LT              reduce using rule 136 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    GT              reduce using rule 136 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    COMP            reduce using rule 136 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    NOTEQ           reduce using rule 136 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    AND             reduce using rule 136 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    OR              reduce using rule 136 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    SEMICOLON       reduce using rule 136 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    RPAR            reduce using rule 136 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    COMMA           reduce using rule 136 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    RSBRAC          reduce using rule 136 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    TO              reduce using rule 136 (exp5 -> DIV push_div e_exp pop_operador exp5 .)


state 323

    (70) condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .

    IF              reduce using rule 70 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    READ            reduce using rule 70 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    WRITE           reduce using rule 70 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    WHILE           reduce using rule 70 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    FROM            reduce using rule 70 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    ID              reduce using rule 70 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    RCBRAC          reduce using rule 70 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    RETURN          reduce using rule 70 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)


state 324

    (72) fill -> e .

    IF              reduce using rule 72 (fill -> e .)
    READ            reduce using rule 72 (fill -> e .)
    WRITE           reduce using rule 72 (fill -> e .)
    WHILE           reduce using rule 72 (fill -> e .)
    FROM            reduce using rule 72 (fill -> e .)
    ID              reduce using rule 72 (fill -> e .)
    RCBRAC          reduce using rule 72 (fill -> e .)
    RETURN          reduce using rule 72 (fill -> e .)


state 325

    (73) condicion1 -> ELSE goto . bloque
    (49) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 79

    bloque                         shift and go to state 332

state 326

    (75) goto -> e .

    LCBRAC          reduce using rule 75 (goto -> e .)


state 327

    (84) llamada3 -> COMMA expresion cuad_param . llamada3
    (84) llamada3 -> . COMMA expresion cuad_param llamada3
    (85) llamada3 -> . e
    (153) e -> .

    COMMA           shift and go to state 279
    RPAR            reduce using rule 153 (e -> .)

    llamada3                       shift and go to state 333
    e                              shift and go to state 280

state 328

    (95) ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque . return_while
    (97) return_while -> . e
    (153) e -> .

    IF              reduce using rule 153 (e -> .)
    READ            reduce using rule 153 (e -> .)
    WRITE           reduce using rule 153 (e -> .)
    WHILE           reduce using rule 153 (e -> .)
    FROM            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)
    RCBRAC          reduce using rule 153 (e -> .)
    RETURN          reduce using rule 153 (e -> .)

    return_while                   shift and go to state 334
    e                              shift and go to state 335

state 329

    (98) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux . TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go

    TO              shift and go to state 336


state 330

    (105) save_aux -> e .

    TO              reduce using rule 105 (save_aux -> e .)
    LCBRAC          reduce using rule 105 (save_aux -> e .)
    IF              reduce using rule 105 (save_aux -> e .)
    READ            reduce using rule 105 (save_aux -> e .)
    WRITE           reduce using rule 105 (save_aux -> e .)
    WHILE           reduce using rule 105 (save_aux -> e .)
    FROM            reduce using rule 105 (save_aux -> e .)
    ID              reduce using rule 105 (save_aux -> e .)
    RCBRAC          reduce using rule 105 (save_aux -> e .)
    RETURN          reduce using rule 105 (save_aux -> e .)


state 331

    (68) variable3 -> LSBRAC expresion RSBRAC .

    EQ              reduce using rule 68 (variable3 -> LSBRAC expresion RSBRAC .)
    MULT            reduce using rule 68 (variable3 -> LSBRAC expresion RSBRAC .)
    DIV             reduce using rule 68 (variable3 -> LSBRAC expresion RSBRAC .)
    PLUS            reduce using rule 68 (variable3 -> LSBRAC expresion RSBRAC .)
    MINUS           reduce using rule 68 (variable3 -> LSBRAC expresion RSBRAC .)
    LT              reduce using rule 68 (variable3 -> LSBRAC expresion RSBRAC .)
    GT              reduce using rule 68 (variable3 -> LSBRAC expresion RSBRAC .)
    COMP            reduce using rule 68 (variable3 -> LSBRAC expresion RSBRAC .)
    NOTEQ           reduce using rule 68 (variable3 -> LSBRAC expresion RSBRAC .)
    AND             reduce using rule 68 (variable3 -> LSBRAC expresion RSBRAC .)
    OR              reduce using rule 68 (variable3 -> LSBRAC expresion RSBRAC .)
    SEMICOLON       reduce using rule 68 (variable3 -> LSBRAC expresion RSBRAC .)
    RPAR            reduce using rule 68 (variable3 -> LSBRAC expresion RSBRAC .)
    COMMA           reduce using rule 68 (variable3 -> LSBRAC expresion RSBRAC .)
    RSBRAC          reduce using rule 68 (variable3 -> LSBRAC expresion RSBRAC .)
    TO              reduce using rule 68 (variable3 -> LSBRAC expresion RSBRAC .)


state 332

    (73) condicion1 -> ELSE goto bloque .

    IF              reduce using rule 73 (condicion1 -> ELSE goto bloque .)
    READ            reduce using rule 73 (condicion1 -> ELSE goto bloque .)
    WRITE           reduce using rule 73 (condicion1 -> ELSE goto bloque .)
    WHILE           reduce using rule 73 (condicion1 -> ELSE goto bloque .)
    FROM            reduce using rule 73 (condicion1 -> ELSE goto bloque .)
    ID              reduce using rule 73 (condicion1 -> ELSE goto bloque .)
    RCBRAC          reduce using rule 73 (condicion1 -> ELSE goto bloque .)
    RETURN          reduce using rule 73 (condicion1 -> ELSE goto bloque .)


state 333

    (84) llamada3 -> COMMA expresion cuad_param llamada3 .

    RPAR            reduce using rule 84 (llamada3 -> COMMA expresion cuad_param llamada3 .)


state 334

    (95) ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .

    IF              reduce using rule 95 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    READ            reduce using rule 95 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    WRITE           reduce using rule 95 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    WHILE           reduce using rule 95 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    FROM            reduce using rule 95 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    ID              reduce using rule 95 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    RCBRAC          reduce using rule 95 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    RETURN          reduce using rule 95 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)


state 335

    (97) return_while -> e .

    IF              reduce using rule 97 (return_while -> e .)
    READ            reduce using rule 97 (return_while -> e .)
    WRITE           reduce using rule 97 (return_while -> e .)
    WHILE           reduce using rule 97 (return_while -> e .)
    FROM            reduce using rule 97 (return_while -> e .)
    ID              reduce using rule 97 (return_while -> e .)
    RCBRAC          reduce using rule 97 (return_while -> e .)
    RETURN          reduce using rule 97 (return_while -> e .)


state 336

    (98) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO . for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (99) for_temp -> . e
    (153) e -> .

    LPAR            reduce using rule 153 (e -> .)
    CTEI            reduce using rule 153 (e -> .)
    CTEF            reduce using rule 153 (e -> .)
    CTESTR          reduce using rule 153 (e -> .)
    CTEB            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)

    for_temp                       shift and go to state 337
    e                              shift and go to state 338

state 337

    (98) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp . asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (103) asign_aux2 -> . e
    (153) e -> .

    LPAR            reduce using rule 153 (e -> .)
    CTEI            reduce using rule 153 (e -> .)
    CTEF            reduce using rule 153 (e -> .)
    CTESTR          reduce using rule 153 (e -> .)
    CTEB            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)

    asign_aux2                     shift and go to state 339
    e                              shift and go to state 340

state 338

    (99) for_temp -> e .

    LPAR            reduce using rule 99 (for_temp -> e .)
    CTEI            reduce using rule 99 (for_temp -> e .)
    CTEF            reduce using rule 99 (for_temp -> e .)
    CTESTR          reduce using rule 99 (for_temp -> e .)
    CTEB            reduce using rule 99 (for_temp -> e .)
    ID              reduce using rule 99 (for_temp -> e .)


state 339

    (98) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 . expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (109) expresion -> . a_exp exp1
    (114) a_exp -> . b_exp exp2
    (118) b_exp -> . c_exp exp3
    (128) c_exp -> . d_exp exp4
    (134) d_exp -> . e_exp exp5
    (140) e_exp -> . LPAR expresion RPAR
    (141) e_exp -> . var_cte
    (142) e_exp -> . variable
    (143) e_exp -> . llamada
    (144) var_cte -> . CTEI ctei
    (145) var_cte -> . CTEF ctef
    (146) var_cte -> . CTESTR ctestr
    (147) var_cte -> . CTEB cteb
    (63) variable -> . ID variable1 variable2
    (76) llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (78) validar_id -> . ID

    LPAR            shift and go to state 150
    CTEI            shift and go to state 153
    CTEF            shift and go to state 154
    CTESTR          shift and go to state 155
    CTEB            shift and go to state 156
    ID              shift and go to state 105

    variable                       shift and go to state 143
    expresion                      shift and go to state 341
    a_exp                          shift and go to state 145
    b_exp                          shift and go to state 146
    c_exp                          shift and go to state 147
    d_exp                          shift and go to state 148
    e_exp                          shift and go to state 149
    var_cte                        shift and go to state 151
    llamada                        shift and go to state 152
    validar_id                     shift and go to state 157

state 340

    (103) asign_aux2 -> e .

    LPAR            reduce using rule 103 (asign_aux2 -> e .)
    CTEI            reduce using rule 103 (asign_aux2 -> e .)
    CTEF            reduce using rule 103 (asign_aux2 -> e .)
    CTESTR          reduce using rule 103 (asign_aux2 -> e .)
    CTEB            reduce using rule 103 (asign_aux2 -> e .)
    ID              reduce using rule 103 (asign_aux2 -> e .)


state 341

    (98) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion . atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (62) atomic_assign -> . e
    (153) e -> .

    RPAR            reduce using rule 153 (e -> .)

    atomic_assign                  shift and go to state 342
    e                              shift and go to state 228

state 342

    (98) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign . save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (106) save_aux2 -> . e
    (153) e -> .

    RPAR            reduce using rule 153 (e -> .)

    save_aux2                      shift and go to state 343
    e                              shift and go to state 344

state 343

    (98) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 . migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (100) migaja -> . e
    (153) e -> .

    RPAR            reduce using rule 153 (e -> .)

    migaja                         shift and go to state 345
    e                              shift and go to state 346

state 344

    (106) save_aux2 -> e .

    RPAR            reduce using rule 106 (save_aux2 -> e .)


state 345

    (98) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja . push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (124) push_lt -> . e
    (153) e -> .

    RPAR            reduce using rule 153 (e -> .)

    push_lt                        shift and go to state 347
    e                              shift and go to state 234

state 346

    (100) migaja -> e .

    RPAR            reduce using rule 100 (migaja -> e .)


state 347

    (98) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt . pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (113) pop_operador -> . e
    (153) e -> .

    RPAR            reduce using rule 153 (e -> .)

    pop_operador                   shift and go to state 348
    e                              shift and go to state 293

state 348

    (98) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador . gotoF RPAR DO save_aux bloque update_fill_go
    (71) gotoF -> . e
    (153) e -> .

    RPAR            reduce using rule 153 (e -> .)

    gotoF                          shift and go to state 349
    e                              shift and go to state 252

state 349

    (98) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF . RPAR DO save_aux bloque update_fill_go

    RPAR            shift and go to state 350


state 350

    (98) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR . DO save_aux bloque update_fill_go

    DO              shift and go to state 351


state 351

    (98) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO . save_aux bloque update_fill_go
    (105) save_aux -> . e
    (153) e -> .

    LCBRAC          reduce using rule 153 (e -> .)

    save_aux                       shift and go to state 352
    e                              shift and go to state 330

state 352

    (98) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux . bloque update_fill_go
    (49) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 79

    bloque                         shift and go to state 353

state 353

    (98) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque . update_fill_go
    (101) update_fill_go -> . save_aux push_plus push1 pop_operador atomic_assign
    (105) save_aux -> . e
    (153) e -> .

    IF              reduce using rule 153 (e -> .)
    READ            reduce using rule 153 (e -> .)
    WRITE           reduce using rule 153 (e -> .)
    WHILE           reduce using rule 153 (e -> .)
    FROM            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)
    RCBRAC          reduce using rule 153 (e -> .)
    RETURN          reduce using rule 153 (e -> .)

    save_aux                       shift and go to state 354
    update_fill_go                 shift and go to state 355
    e                              shift and go to state 330

state 354

    (101) update_fill_go -> save_aux . push_plus push1 pop_operador atomic_assign
    (132) push_plus -> . e
    (153) e -> .

    IF              reduce using rule 153 (e -> .)
    READ            reduce using rule 153 (e -> .)
    WRITE           reduce using rule 153 (e -> .)
    WHILE           reduce using rule 153 (e -> .)
    FROM            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)
    RCBRAC          reduce using rule 153 (e -> .)
    RETURN          reduce using rule 153 (e -> .)

    push_plus                      shift and go to state 356
    e                              shift and go to state 242

state 355

    (98) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go .

    IF              reduce using rule 98 (ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go .)
    READ            reduce using rule 98 (ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go .)
    WRITE           reduce using rule 98 (ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go .)
    WHILE           reduce using rule 98 (ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go .)
    FROM            reduce using rule 98 (ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go .)
    ID              reduce using rule 98 (ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go .)
    RCBRAC          reduce using rule 98 (ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go .)
    RETURN          reduce using rule 98 (ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go .)


state 356

    (101) update_fill_go -> save_aux push_plus . push1 pop_operador atomic_assign
    (104) push1 -> . e
    (153) e -> .

    IF              reduce using rule 153 (e -> .)
    READ            reduce using rule 153 (e -> .)
    WRITE           reduce using rule 153 (e -> .)
    WHILE           reduce using rule 153 (e -> .)
    FROM            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)
    RCBRAC          reduce using rule 153 (e -> .)
    RETURN          reduce using rule 153 (e -> .)

    push1                          shift and go to state 357
    e                              shift and go to state 358

state 357

    (101) update_fill_go -> save_aux push_plus push1 . pop_operador atomic_assign
    (113) pop_operador -> . e
    (153) e -> .

    IF              reduce using rule 153 (e -> .)
    READ            reduce using rule 153 (e -> .)
    WRITE           reduce using rule 153 (e -> .)
    WHILE           reduce using rule 153 (e -> .)
    FROM            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)
    RCBRAC          reduce using rule 153 (e -> .)
    RETURN          reduce using rule 153 (e -> .)

    pop_operador                   shift and go to state 359
    e                              shift and go to state 293

state 358

    (104) push1 -> e .

    IF              reduce using rule 104 (push1 -> e .)
    READ            reduce using rule 104 (push1 -> e .)
    WRITE           reduce using rule 104 (push1 -> e .)
    WHILE           reduce using rule 104 (push1 -> e .)
    FROM            reduce using rule 104 (push1 -> e .)
    ID              reduce using rule 104 (push1 -> e .)
    RCBRAC          reduce using rule 104 (push1 -> e .)
    RETURN          reduce using rule 104 (push1 -> e .)


state 359

    (101) update_fill_go -> save_aux push_plus push1 pop_operador . atomic_assign
    (62) atomic_assign -> . e
    (153) e -> .

    IF              reduce using rule 153 (e -> .)
    READ            reduce using rule 153 (e -> .)
    WRITE           reduce using rule 153 (e -> .)
    WHILE           reduce using rule 153 (e -> .)
    FROM            reduce using rule 153 (e -> .)
    ID              reduce using rule 153 (e -> .)
    RCBRAC          reduce using rule 153 (e -> .)
    RETURN          reduce using rule 153 (e -> .)

    atomic_assign                  shift and go to state 360
    e                              shift and go to state 228

state 360

    (101) update_fill_go -> save_aux push_plus push1 pop_operador atomic_assign .

    IF              reduce using rule 101 (update_fill_go -> save_aux push_plus push1 pop_operador atomic_assign .)
    READ            reduce using rule 101 (update_fill_go -> save_aux push_plus push1 pop_operador atomic_assign .)
    WRITE           reduce using rule 101 (update_fill_go -> save_aux push_plus push1 pop_operador atomic_assign .)
    WHILE           reduce using rule 101 (update_fill_go -> save_aux push_plus push1 pop_operador atomic_assign .)
    FROM            reduce using rule 101 (update_fill_go -> save_aux push_plus push1 pop_operador atomic_assign .)
    ID              reduce using rule 101 (update_fill_go -> save_aux push_plus push1 pop_operador atomic_assign .)
    RCBRAC          reduce using rule 101 (update_fill_go -> save_aux push_plus push1 pop_operador atomic_assign .)
    RETURN          reduce using rule 101 (update_fill_go -> save_aux push_plus push1 pop_operador atomic_assign .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VOID in state 74 resolved as shift
WARNING: shift/reduce conflict for INT in state 74 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 74 resolved as shift
WARNING: shift/reduce conflict for STRING in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 74 resolved as shift
WARNING: shift/reduce conflict for ID in state 76 resolved as shift
WARNING: shift/reduce conflict for VOID in state 84 resolved as shift
WARNING: shift/reduce conflict for INT in state 84 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 84 resolved as shift
WARNING: shift/reduce conflict for STRING in state 84 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 84 resolved as shift
WARNING: shift/reduce conflict for ID in state 85 resolved as shift
WARNING: shift/reduce conflict for DOT in state 105 resolved as shift
WARNING: shift/reduce conflict for VOID in state 111 resolved as shift
WARNING: shift/reduce conflict for INT in state 111 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 111 resolved as shift
WARNING: shift/reduce conflict for STRING in state 111 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 111 resolved as shift
WARNING: shift/reduce conflict for VOID in state 135 resolved as shift
WARNING: shift/reduce conflict for INT in state 135 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 135 resolved as shift
WARNING: shift/reduce conflict for STRING in state 135 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 135 resolved as shift
WARNING: reduce/reduce conflict in state 113 resolved using rule (metodos -> e)
WARNING: rejected rule (funcion -> e) in state 113
WARNING: reduce/reduce conflict in state 165 resolved using rule (texto -> CTESTR)
WARNING: rejected rule (e -> <empty>) in state 165
