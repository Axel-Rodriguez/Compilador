Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON goto_main clase vars funcion main
Rule 2     goto_main -> e
Rule 3     main -> MAIN LPAR RPAR main_start bloque
Rule 4     main_start -> e
Rule 5     clase -> CLASS inicializar_clase clase1 LCBRAC clase2 clase3 RCBRAC reiniciar_clase clase
Rule 6     clase -> e
Rule 7     inicializar_clase -> ID
Rule 8     reiniciar_clase -> e
Rule 9     clase1 -> LT INHERITS ID GT
Rule 10    clase1 -> e
Rule 11    clase2 -> ATTRIBUTES declaracion atributos asign
Rule 12    clase2 -> e
Rule 13    atributos -> declaracion atributos
Rule 14    atributos -> e
Rule 15    asign -> asignacion asign
Rule 16    asign -> e
Rule 17    clase3 -> METHODS funcion metodos
Rule 18    clase3 -> e
Rule 19    metodos -> funcion metodos
Rule 20    metodos -> e
Rule 21    vars -> VAR declaracion declaraciones
Rule 22    vars -> e
Rule 23    declaraciones -> declaracion declaraciones
Rule 24    declaraciones -> e
Rule 25    declaracion -> declaracion1 COLON declaracion5 SEMICOLON
Rule 26    declaracion1 -> inserta_declaracion declaracion2 declaracion4
Rule 27    inserta_declaracion -> ID
Rule 28    declaracion2 -> LSBRAC assign_limit RSBRAC declaracion3
Rule 29    declaracion2 -> e
Rule 30    assign_limit -> CTEI
Rule 31    declaracion3 -> LSBRAC CTEI RSBRAC
Rule 32    declaracion3 -> e
Rule 33    declaracion4 -> COMMA declaracion1
Rule 34    declaracion4 -> e
Rule 35    declaracion5 -> tipo
Rule 36    declaracion5 -> ID
Rule 37    funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR insertar_tabla bloque_return reiniciar_func funcion
Rule 38    funcion -> e
Rule 39    insertar_tabla -> e
Rule 40    guardar_id -> ID
Rule 41    reiniciar_func -> e
Rule 42    funcion1 -> tipo
Rule 43    funcion1 -> VOID funcion_void
Rule 44    funcion_void -> e
Rule 45    funcion2 -> ID COLON tipo funcion3
Rule 46    funcion2 -> e
Rule 47    funcion3 -> COMMA ID COLON tipo funcion3
Rule 48    funcion3 -> e
Rule 49    tipo -> INT
Rule 50    tipo -> FLOAT
Rule 51    tipo -> STRING
Rule 52    tipo -> BOOL
Rule 53    bloque -> LCBRAC estatutos RCBRAC
Rule 54    bloque_return -> LCBRAC estatutos regresar RCBRAC
Rule 55    bloque_return -> LCBRAC estatutos regresar_void RCBRAC
Rule 56    estatutos -> estatuto estatutos
Rule 57    estatutos -> e
Rule 58    estatuto -> asignacion
Rule 59    estatuto -> condicion
Rule 60    estatuto -> llamada_void SEMICOLON
Rule 61    estatuto -> leer
Rule 62    estatuto -> escribir
Rule 63    estatuto -> ciclo_w
Rule 64    estatuto -> ciclo_f
Rule 65    asignacion -> variable EQ expresion SEMICOLON atomic_assign
Rule 66    atomic_assign -> e
Rule 67    condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill
Rule 68    gotoF -> e
Rule 69    fill -> e
Rule 70    condicion1 -> ELSE goto bloque
Rule 71    condicion1 -> e
Rule 72    goto -> e
Rule 73    variable -> var_id variable1 variable2
Rule 74    var_id -> ID
Rule 75    variable1 -> QUESTION ID
Rule 76    variable1 -> e
Rule 77    variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador
Rule 78    variable2 -> e
Rule 79    push_arr -> e
Rule 80    verifica_d1 -> e
Rule 81    variable3 -> LSBRAC expresion verifica_d2 RSBRAC
Rule 82    variable3 -> e
Rule 83    verifica_d2 -> e
Rule 84    llamada -> sub_llamada parche atomic_assign
Rule 85    sub_llamada -> validar_id llamada1 LPAR llamada2 RPAR
Rule 86    parche -> e
Rule 87    llamada_void -> validar_id llamada1 LPAR llamada2 RPAR
Rule 88    validar_id -> ID
Rule 89    llamada1 -> DOT ID
Rule 90    llamada1 -> e
Rule 91    llamada2 -> expresion cuad_param llamada3
Rule 92    llamada2 -> e
Rule 93    cuad_param -> e
Rule 94    llamada3 -> COMMA expresion cuad_param llamada3
Rule 95    llamada3 -> e
Rule 96    leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON
Rule 97    add_read -> e
Rule 98    escribir -> WRITE LPAR escribir1 RPAR SEMICOLON
Rule 99    escribir1 -> texto add_print generar_cuadr escribir2
Rule 100   escribir1 -> expresion add_print generar_cuadr escribir2
Rule 101   add_print -> e
Rule 102   escribir2 -> COMMA escribir1
Rule 103   escribir2 -> e
Rule 104   texto -> CTESTR
Rule 105   ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while
Rule 106   push_while -> e
Rule 107   return_while -> e
Rule 108   ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
Rule 109   for_temp -> e
Rule 110   migaja -> e
Rule 111   update_fill_go -> save_aux push_plus push1 pop_operador atomic_assign
Rule 112   asign_aux -> e
Rule 113   asign_aux2 -> e
Rule 114   push1 -> e
Rule 115   save_aux -> e
Rule 116   save_aux2 -> e
Rule 117   regresar -> RETURN expresion SEMICOLON
Rule 118   regresar_void -> RETURN SEMICOLON
Rule 119   expresion -> a_exp exp1
Rule 120   exp1 -> OR push_or a_exp pop_operador exp1
Rule 121   exp1 -> e
Rule 122   push_or -> e
Rule 123   pop_operador -> e
Rule 124   a_exp -> b_exp exp2
Rule 125   exp2 -> AND push_and b_exp pop_operador exp2
Rule 126   exp2 -> e
Rule 127   push_and -> e
Rule 128   b_exp -> c_exp exp3
Rule 129   exp3 -> LT push_lt c_exp pop_operador exp3
Rule 130   exp3 -> GT push_gt c_exp pop_operador exp3
Rule 131   exp3 -> COMP push_comp c_exp pop_operador exp3
Rule 132   exp3 -> NOTEQ push_noteq c_exp pop_operador exp3
Rule 133   exp3 -> e
Rule 134   push_lt -> e
Rule 135   push_gt -> e
Rule 136   push_comp -> e
Rule 137   push_noteq -> e
Rule 138   c_exp -> d_exp exp4
Rule 139   exp4 -> PLUS push_plus d_exp pop_operador exp4
Rule 140   exp4 -> MINUS push_minus d_exp pop_operador exp4
Rule 141   exp4 -> e
Rule 142   push_plus -> e
Rule 143   push_minus -> e
Rule 144   d_exp -> e_exp exp5
Rule 145   exp5 -> MULT push_mult e_exp pop_operador exp5
Rule 146   exp5 -> DIV push_div e_exp pop_operador exp5
Rule 147   exp5 -> e
Rule 148   push_mult -> e
Rule 149   push_div -> e
Rule 150   e_exp -> LPAR expresion RPAR
Rule 151   e_exp -> var_cte
Rule 152   e_exp -> variable
Rule 153   e_exp -> llamada
Rule 154   var_cte -> CTEI ctei
Rule 155   var_cte -> CTEF ctef
Rule 156   var_cte -> CTESTR ctestr
Rule 157   var_cte -> CTEB cteb
Rule 158   ctei -> e
Rule 159   ctef -> e
Rule 160   ctestr -> e
Rule 161   cteb -> e
Rule 162   generar_cuadr -> e
Rule 163   e -> <empty>

Terminals, with rules where they appear

AND                  : 125
ATTRIBUTES           : 11
BOOL                 : 52
CLASS                : 5
COLON                : 25 45 47
COMMA                : 33 47 94 102
COMP                 : 131
CTEB                 : 157
CTEF                 : 155
CTEI                 : 30 31 154
CTESTR               : 104 156
DIV                  : 146
DO                   : 105 108
DOT                  : 89
ELSE                 : 70
EQ                   : 65 108
FLOAT                : 50
FROM                 : 108
FUNCTION             : 37
GT                   : 9 130
ID                   : 1 7 9 27 36 40 45 47 74 75 88 89
IF                   : 67
INHERITS             : 9
INT                  : 49
LCBRAC               : 5 53 54 55
LPAR                 : 3 37 67 85 87 96 98 105 108 150
LSBRAC               : 28 31 77 81
LT                   : 9 129
MAIN                 : 3
METHODS              : 17
MINUS                : 140
MULT                 : 145
NOTEQ                : 132
OR                   : 120
PLUS                 : 139
PROGRAM              : 1
QUESTION             : 75
RCBRAC               : 5 53 54 55
READ                 : 96
RETURN               : 117 118
RPAR                 : 3 37 67 85 87 96 98 105 108 150
RSBRAC               : 28 31 77 81
SEMICOLON            : 1 25 60 65 96 98 117 118
STRING               : 51
TO                   : 108
VAR                  : 21
VOID                 : 43
WHILE                : 105
WRITE                : 98
error                : 

Nonterminals, with rules where they appear

a_exp                : 119 120
add_print            : 99 100
add_read             : 96
asign                : 11 15
asign_aux            : 108
asign_aux2           : 108
asignacion           : 15 58
assign_limit         : 28
atomic_assign        : 65 84 108 108 111
atributos            : 11 13
b_exp                : 124 125
bloque               : 3 67 70 105 108
bloque_return        : 37
c_exp                : 128 129 130 131 132
ciclo_f              : 64
ciclo_w              : 63
clase                : 1 5
clase1               : 5
clase2               : 5
clase3               : 5
condicion            : 59
condicion1           : 67
cteb                 : 157
ctef                 : 155
ctei                 : 154
ctestr               : 156
cuad_param           : 91 94
d_exp                : 138 139 140
declaracion          : 11 13 21 23
declaracion1         : 25 33
declaracion2         : 26
declaracion3         : 28
declaracion4         : 26
declaracion5         : 25
declaraciones        : 21 23
e                    : 2 4 6 8 10 12 14 16 18 20 22 24 29 32 34 38 39 41 44 46 48 57 66 68 69 71 72 76 78 79 80 82 83 86 90 92 93 95 97 101 103 106 107 109 110 112 113 114 115 116 121 122 123 126 127 133 134 135 136 137 141 142 143 147 148 149 158 159 160 161 162
e_exp                : 144 145 146
escribir             : 62
escribir1            : 98 102
escribir2            : 99 100
estatuto             : 56
estatutos            : 53 54 55 56
exp1                 : 119 120
exp2                 : 124 125
exp3                 : 128 129 130 131 132
exp4                 : 138 139 140
exp5                 : 144 145 146
expresion            : 65 67 77 81 91 94 100 105 108 108 117 150
fill                 : 67
for_temp             : 108
funcion              : 1 17 19 37
funcion1             : 37
funcion2             : 37
funcion3             : 45 47
funcion_void         : 43
generar_cuadr        : 96 99 100
goto                 : 70
gotoF                : 67 105 108
goto_main            : 1
guardar_id           : 37
inicializar_clase    : 5
inserta_declaracion  : 26
insertar_tabla       : 37
leer                 : 61
llamada              : 153
llamada1             : 85 87
llamada2             : 85 87
llamada3             : 91 94
llamada_void         : 60
main                 : 1
main_start           : 3
metodos              : 17 19
migaja               : 108
parche               : 84
pop_operador         : 77 77 77 108 111 120 125 129 130 131 132 139 140 145 146
programa             : 0
push1                : 111
push_and             : 125
push_arr             : 77
push_comp            : 131
push_div             : 146
push_gt              : 130
push_lt              : 108 129
push_minus           : 140
push_mult            : 77 145
push_noteq           : 132
push_or              : 120
push_plus            : 77 77 111 139
push_while           : 105
regresar             : 54
regresar_void        : 55
reiniciar_clase      : 5
reiniciar_func       : 37
return_while         : 105
save_aux             : 108 108 111
save_aux2            : 108
sub_llamada          : 84
texto                : 99
tipo                 : 35 42 45 47
update_fill_go       : 108
validar_id           : 85 87
var_cte              : 151
var_id               : 73
variable             : 65 96 108 152
variable1            : 73
variable2            : 73
variable3            : 77
vars                 : 1
verifica_d1          : 77
verifica_d2          : 81

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON goto_main clase vars funcion main

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOLON goto_main clase vars funcion main

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOLON goto_main clase vars funcion main

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . goto_main clase vars funcion main
    (2) goto_main -> . e
    (163) e -> .

    CLASS           reduce using rule 163 (e -> .)
    VAR             reduce using rule 163 (e -> .)
    VOID            reduce using rule 163 (e -> .)
    INT             reduce using rule 163 (e -> .)
    FLOAT           reduce using rule 163 (e -> .)
    STRING          reduce using rule 163 (e -> .)
    BOOL            reduce using rule 163 (e -> .)
    MAIN            reduce using rule 163 (e -> .)

    goto_main                      shift and go to state 5
    e                              shift and go to state 6

state 5

    (1) programa -> PROGRAM ID SEMICOLON goto_main . clase vars funcion main
    (5) clase -> . CLASS inicializar_clase clase1 LCBRAC clase2 clase3 RCBRAC reiniciar_clase clase
    (6) clase -> . e
    (163) e -> .

    CLASS           shift and go to state 8
    VAR             reduce using rule 163 (e -> .)
    VOID            reduce using rule 163 (e -> .)
    INT             reduce using rule 163 (e -> .)
    FLOAT           reduce using rule 163 (e -> .)
    STRING          reduce using rule 163 (e -> .)
    BOOL            reduce using rule 163 (e -> .)
    MAIN            reduce using rule 163 (e -> .)

    clase                          shift and go to state 7
    e                              shift and go to state 9

state 6

    (2) goto_main -> e .

    CLASS           reduce using rule 2 (goto_main -> e .)
    VAR             reduce using rule 2 (goto_main -> e .)
    VOID            reduce using rule 2 (goto_main -> e .)
    INT             reduce using rule 2 (goto_main -> e .)
    FLOAT           reduce using rule 2 (goto_main -> e .)
    STRING          reduce using rule 2 (goto_main -> e .)
    BOOL            reduce using rule 2 (goto_main -> e .)
    MAIN            reduce using rule 2 (goto_main -> e .)


state 7

    (1) programa -> PROGRAM ID SEMICOLON goto_main clase . vars funcion main
    (21) vars -> . VAR declaracion declaraciones
    (22) vars -> . e
    (163) e -> .

    VAR             shift and go to state 11
    VOID            reduce using rule 163 (e -> .)
    INT             reduce using rule 163 (e -> .)
    FLOAT           reduce using rule 163 (e -> .)
    STRING          reduce using rule 163 (e -> .)
    BOOL            reduce using rule 163 (e -> .)
    MAIN            reduce using rule 163 (e -> .)

    vars                           shift and go to state 10
    e                              shift and go to state 12

state 8

    (5) clase -> CLASS . inicializar_clase clase1 LCBRAC clase2 clase3 RCBRAC reiniciar_clase clase
    (7) inicializar_clase -> . ID

    ID              shift and go to state 14

    inicializar_clase              shift and go to state 13

state 9

    (6) clase -> e .

    VAR             reduce using rule 6 (clase -> e .)
    VOID            reduce using rule 6 (clase -> e .)
    INT             reduce using rule 6 (clase -> e .)
    FLOAT           reduce using rule 6 (clase -> e .)
    STRING          reduce using rule 6 (clase -> e .)
    BOOL            reduce using rule 6 (clase -> e .)
    MAIN            reduce using rule 6 (clase -> e .)


state 10

    (1) programa -> PROGRAM ID SEMICOLON goto_main clase vars . funcion main
    (37) funcion -> . funcion1 FUNCTION guardar_id LPAR funcion2 RPAR insertar_tabla bloque_return reiniciar_func funcion
    (38) funcion -> . e
    (42) funcion1 -> . tipo
    (43) funcion1 -> . VOID funcion_void
    (163) e -> .
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . STRING
    (52) tipo -> . BOOL

    VOID            shift and go to state 19
    MAIN            reduce using rule 163 (e -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

    funcion                        shift and go to state 15
    funcion1                       shift and go to state 16
    e                              shift and go to state 17
    tipo                           shift and go to state 18

state 11

    (21) vars -> VAR . declaracion declaraciones
    (25) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (26) declaracion1 -> . inserta_declaracion declaracion2 declaracion4
    (27) inserta_declaracion -> . ID

    ID              shift and go to state 27

    declaracion                    shift and go to state 24
    declaracion1                   shift and go to state 25
    inserta_declaracion            shift and go to state 26

state 12

    (22) vars -> e .

    VOID            reduce using rule 22 (vars -> e .)
    INT             reduce using rule 22 (vars -> e .)
    FLOAT           reduce using rule 22 (vars -> e .)
    STRING          reduce using rule 22 (vars -> e .)
    BOOL            reduce using rule 22 (vars -> e .)
    MAIN            reduce using rule 22 (vars -> e .)


state 13

    (5) clase -> CLASS inicializar_clase . clase1 LCBRAC clase2 clase3 RCBRAC reiniciar_clase clase
    (9) clase1 -> . LT INHERITS ID GT
    (10) clase1 -> . e
    (163) e -> .

    LT              shift and go to state 29
    LCBRAC          reduce using rule 163 (e -> .)

    clase1                         shift and go to state 28
    e                              shift and go to state 30

state 14

    (7) inicializar_clase -> ID .

    LT              reduce using rule 7 (inicializar_clase -> ID .)
    LCBRAC          reduce using rule 7 (inicializar_clase -> ID .)


state 15

    (1) programa -> PROGRAM ID SEMICOLON goto_main clase vars funcion . main
    (3) main -> . MAIN LPAR RPAR main_start bloque

    MAIN            shift and go to state 32

    main                           shift and go to state 31

state 16

    (37) funcion -> funcion1 . FUNCTION guardar_id LPAR funcion2 RPAR insertar_tabla bloque_return reiniciar_func funcion

    FUNCTION        shift and go to state 33


state 17

    (38) funcion -> e .

    MAIN            reduce using rule 38 (funcion -> e .)
    VOID            reduce using rule 38 (funcion -> e .)
    INT             reduce using rule 38 (funcion -> e .)
    FLOAT           reduce using rule 38 (funcion -> e .)
    STRING          reduce using rule 38 (funcion -> e .)
    BOOL            reduce using rule 38 (funcion -> e .)
    RCBRAC          reduce using rule 38 (funcion -> e .)


state 18

    (42) funcion1 -> tipo .

    FUNCTION        reduce using rule 42 (funcion1 -> tipo .)


state 19

    (43) funcion1 -> VOID . funcion_void
    (44) funcion_void -> . e
    (163) e -> .

    FUNCTION        reduce using rule 163 (e -> .)

    funcion_void                   shift and go to state 34
    e                              shift and go to state 35

state 20

    (49) tipo -> INT .

    FUNCTION        reduce using rule 49 (tipo -> INT .)
    SEMICOLON       reduce using rule 49 (tipo -> INT .)
    COMMA           reduce using rule 49 (tipo -> INT .)
    RPAR            reduce using rule 49 (tipo -> INT .)


state 21

    (50) tipo -> FLOAT .

    FUNCTION        reduce using rule 50 (tipo -> FLOAT .)
    SEMICOLON       reduce using rule 50 (tipo -> FLOAT .)
    COMMA           reduce using rule 50 (tipo -> FLOAT .)
    RPAR            reduce using rule 50 (tipo -> FLOAT .)


state 22

    (51) tipo -> STRING .

    FUNCTION        reduce using rule 51 (tipo -> STRING .)
    SEMICOLON       reduce using rule 51 (tipo -> STRING .)
    COMMA           reduce using rule 51 (tipo -> STRING .)
    RPAR            reduce using rule 51 (tipo -> STRING .)


state 23

    (52) tipo -> BOOL .

    FUNCTION        reduce using rule 52 (tipo -> BOOL .)
    SEMICOLON       reduce using rule 52 (tipo -> BOOL .)
    COMMA           reduce using rule 52 (tipo -> BOOL .)
    RPAR            reduce using rule 52 (tipo -> BOOL .)


state 24

    (21) vars -> VAR declaracion . declaraciones
    (23) declaraciones -> . declaracion declaraciones
    (24) declaraciones -> . e
    (25) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (163) e -> .
    (26) declaracion1 -> . inserta_declaracion declaracion2 declaracion4
    (27) inserta_declaracion -> . ID

    VOID            reduce using rule 163 (e -> .)
    INT             reduce using rule 163 (e -> .)
    FLOAT           reduce using rule 163 (e -> .)
    STRING          reduce using rule 163 (e -> .)
    BOOL            reduce using rule 163 (e -> .)
    MAIN            reduce using rule 163 (e -> .)
    ID              shift and go to state 27

    declaracion                    shift and go to state 36
    declaraciones                  shift and go to state 37
    e                              shift and go to state 38
    declaracion1                   shift and go to state 25
    inserta_declaracion            shift and go to state 26

state 25

    (25) declaracion -> declaracion1 . COLON declaracion5 SEMICOLON

    COLON           shift and go to state 39


state 26

    (26) declaracion1 -> inserta_declaracion . declaracion2 declaracion4
    (28) declaracion2 -> . LSBRAC assign_limit RSBRAC declaracion3
    (29) declaracion2 -> . e
    (163) e -> .

    LSBRAC          shift and go to state 41
    COMMA           reduce using rule 163 (e -> .)
    COLON           reduce using rule 163 (e -> .)

    declaracion2                   shift and go to state 40
    e                              shift and go to state 42

state 27

    (27) inserta_declaracion -> ID .

    LSBRAC          reduce using rule 27 (inserta_declaracion -> ID .)
    COMMA           reduce using rule 27 (inserta_declaracion -> ID .)
    COLON           reduce using rule 27 (inserta_declaracion -> ID .)


state 28

    (5) clase -> CLASS inicializar_clase clase1 . LCBRAC clase2 clase3 RCBRAC reiniciar_clase clase

    LCBRAC          shift and go to state 43


state 29

    (9) clase1 -> LT . INHERITS ID GT

    INHERITS        shift and go to state 44


state 30

    (10) clase1 -> e .

    LCBRAC          reduce using rule 10 (clase1 -> e .)


state 31

    (1) programa -> PROGRAM ID SEMICOLON goto_main clase vars funcion main .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON goto_main clase vars funcion main .)


state 32

    (3) main -> MAIN . LPAR RPAR main_start bloque

    LPAR            shift and go to state 45


state 33

    (37) funcion -> funcion1 FUNCTION . guardar_id LPAR funcion2 RPAR insertar_tabla bloque_return reiniciar_func funcion
    (40) guardar_id -> . ID

    ID              shift and go to state 47

    guardar_id                     shift and go to state 46

state 34

    (43) funcion1 -> VOID funcion_void .

    FUNCTION        reduce using rule 43 (funcion1 -> VOID funcion_void .)


state 35

    (44) funcion_void -> e .

    FUNCTION        reduce using rule 44 (funcion_void -> e .)


state 36

    (23) declaraciones -> declaracion . declaraciones
    (23) declaraciones -> . declaracion declaraciones
    (24) declaraciones -> . e
    (25) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (163) e -> .
    (26) declaracion1 -> . inserta_declaracion declaracion2 declaracion4
    (27) inserta_declaracion -> . ID

    VOID            reduce using rule 163 (e -> .)
    INT             reduce using rule 163 (e -> .)
    FLOAT           reduce using rule 163 (e -> .)
    STRING          reduce using rule 163 (e -> .)
    BOOL            reduce using rule 163 (e -> .)
    MAIN            reduce using rule 163 (e -> .)
    ID              shift and go to state 27

    declaracion                    shift and go to state 36
    declaraciones                  shift and go to state 48
    e                              shift and go to state 38
    declaracion1                   shift and go to state 25
    inserta_declaracion            shift and go to state 26

state 37

    (21) vars -> VAR declaracion declaraciones .

    VOID            reduce using rule 21 (vars -> VAR declaracion declaraciones .)
    INT             reduce using rule 21 (vars -> VAR declaracion declaraciones .)
    FLOAT           reduce using rule 21 (vars -> VAR declaracion declaraciones .)
    STRING          reduce using rule 21 (vars -> VAR declaracion declaraciones .)
    BOOL            reduce using rule 21 (vars -> VAR declaracion declaraciones .)
    MAIN            reduce using rule 21 (vars -> VAR declaracion declaraciones .)


state 38

    (24) declaraciones -> e .

    VOID            reduce using rule 24 (declaraciones -> e .)
    INT             reduce using rule 24 (declaraciones -> e .)
    FLOAT           reduce using rule 24 (declaraciones -> e .)
    STRING          reduce using rule 24 (declaraciones -> e .)
    BOOL            reduce using rule 24 (declaraciones -> e .)
    MAIN            reduce using rule 24 (declaraciones -> e .)


state 39

    (25) declaracion -> declaracion1 COLON . declaracion5 SEMICOLON
    (35) declaracion5 -> . tipo
    (36) declaracion5 -> . ID
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . STRING
    (52) tipo -> . BOOL

    ID              shift and go to state 51
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

    declaracion5                   shift and go to state 49
    tipo                           shift and go to state 50

state 40

    (26) declaracion1 -> inserta_declaracion declaracion2 . declaracion4
    (33) declaracion4 -> . COMMA declaracion1
    (34) declaracion4 -> . e
    (163) e -> .

    COMMA           shift and go to state 53
    COLON           reduce using rule 163 (e -> .)

    declaracion4                   shift and go to state 52
    e                              shift and go to state 54

state 41

    (28) declaracion2 -> LSBRAC . assign_limit RSBRAC declaracion3
    (30) assign_limit -> . CTEI

    CTEI            shift and go to state 56

    assign_limit                   shift and go to state 55

state 42

    (29) declaracion2 -> e .

    COMMA           reduce using rule 29 (declaracion2 -> e .)
    COLON           reduce using rule 29 (declaracion2 -> e .)


state 43

    (5) clase -> CLASS inicializar_clase clase1 LCBRAC . clase2 clase3 RCBRAC reiniciar_clase clase
    (11) clase2 -> . ATTRIBUTES declaracion atributos asign
    (12) clase2 -> . e
    (163) e -> .

    ATTRIBUTES      shift and go to state 58
    METHODS         reduce using rule 163 (e -> .)
    RCBRAC          reduce using rule 163 (e -> .)

    clase2                         shift and go to state 57
    e                              shift and go to state 59

state 44

    (9) clase1 -> LT INHERITS . ID GT

    ID              shift and go to state 60


state 45

    (3) main -> MAIN LPAR . RPAR main_start bloque

    RPAR            shift and go to state 61


state 46

    (37) funcion -> funcion1 FUNCTION guardar_id . LPAR funcion2 RPAR insertar_tabla bloque_return reiniciar_func funcion

    LPAR            shift and go to state 62


state 47

    (40) guardar_id -> ID .

    LPAR            reduce using rule 40 (guardar_id -> ID .)


state 48

    (23) declaraciones -> declaracion declaraciones .

    VOID            reduce using rule 23 (declaraciones -> declaracion declaraciones .)
    INT             reduce using rule 23 (declaraciones -> declaracion declaraciones .)
    FLOAT           reduce using rule 23 (declaraciones -> declaracion declaraciones .)
    STRING          reduce using rule 23 (declaraciones -> declaracion declaraciones .)
    BOOL            reduce using rule 23 (declaraciones -> declaracion declaraciones .)
    MAIN            reduce using rule 23 (declaraciones -> declaracion declaraciones .)


state 49

    (25) declaracion -> declaracion1 COLON declaracion5 . SEMICOLON

    SEMICOLON       shift and go to state 63


state 50

    (35) declaracion5 -> tipo .

    SEMICOLON       reduce using rule 35 (declaracion5 -> tipo .)


state 51

    (36) declaracion5 -> ID .

    SEMICOLON       reduce using rule 36 (declaracion5 -> ID .)


state 52

    (26) declaracion1 -> inserta_declaracion declaracion2 declaracion4 .

    COLON           reduce using rule 26 (declaracion1 -> inserta_declaracion declaracion2 declaracion4 .)


state 53

    (33) declaracion4 -> COMMA . declaracion1
    (26) declaracion1 -> . inserta_declaracion declaracion2 declaracion4
    (27) inserta_declaracion -> . ID

    ID              shift and go to state 27

    declaracion1                   shift and go to state 64
    inserta_declaracion            shift and go to state 26

state 54

    (34) declaracion4 -> e .

    COLON           reduce using rule 34 (declaracion4 -> e .)


state 55

    (28) declaracion2 -> LSBRAC assign_limit . RSBRAC declaracion3

    RSBRAC          shift and go to state 65


state 56

    (30) assign_limit -> CTEI .

    RSBRAC          reduce using rule 30 (assign_limit -> CTEI .)


state 57

    (5) clase -> CLASS inicializar_clase clase1 LCBRAC clase2 . clase3 RCBRAC reiniciar_clase clase
    (17) clase3 -> . METHODS funcion metodos
    (18) clase3 -> . e
    (163) e -> .

    METHODS         shift and go to state 67
    RCBRAC          reduce using rule 163 (e -> .)

    clase3                         shift and go to state 66
    e                              shift and go to state 68

state 58

    (11) clase2 -> ATTRIBUTES . declaracion atributos asign
    (25) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (26) declaracion1 -> . inserta_declaracion declaracion2 declaracion4
    (27) inserta_declaracion -> . ID

    ID              shift and go to state 27

    declaracion                    shift and go to state 69
    declaracion1                   shift and go to state 25
    inserta_declaracion            shift and go to state 26

state 59

    (12) clase2 -> e .

    METHODS         reduce using rule 12 (clase2 -> e .)
    RCBRAC          reduce using rule 12 (clase2 -> e .)


state 60

    (9) clase1 -> LT INHERITS ID . GT

    GT              shift and go to state 70


state 61

    (3) main -> MAIN LPAR RPAR . main_start bloque
    (4) main_start -> . e
    (163) e -> .

    LCBRAC          reduce using rule 163 (e -> .)

    main_start                     shift and go to state 71
    e                              shift and go to state 72

state 62

    (37) funcion -> funcion1 FUNCTION guardar_id LPAR . funcion2 RPAR insertar_tabla bloque_return reiniciar_func funcion
    (45) funcion2 -> . ID COLON tipo funcion3
    (46) funcion2 -> . e
    (163) e -> .

    ID              shift and go to state 74
    RPAR            reduce using rule 163 (e -> .)

    funcion2                       shift and go to state 73
    e                              shift and go to state 75

state 63

    (25) declaracion -> declaracion1 COLON declaracion5 SEMICOLON .

    ID              reduce using rule 25 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    VOID            reduce using rule 25 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    INT             reduce using rule 25 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    FLOAT           reduce using rule 25 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    STRING          reduce using rule 25 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    BOOL            reduce using rule 25 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    MAIN            reduce using rule 25 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    METHODS         reduce using rule 25 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    RCBRAC          reduce using rule 25 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)


state 64

    (33) declaracion4 -> COMMA declaracion1 .

    COLON           reduce using rule 33 (declaracion4 -> COMMA declaracion1 .)


state 65

    (28) declaracion2 -> LSBRAC assign_limit RSBRAC . declaracion3
    (31) declaracion3 -> . LSBRAC CTEI RSBRAC
    (32) declaracion3 -> . e
    (163) e -> .

    LSBRAC          shift and go to state 76
    COMMA           reduce using rule 163 (e -> .)
    COLON           reduce using rule 163 (e -> .)

    declaracion3                   shift and go to state 77
    e                              shift and go to state 78

state 66

    (5) clase -> CLASS inicializar_clase clase1 LCBRAC clase2 clase3 . RCBRAC reiniciar_clase clase

    RCBRAC          shift and go to state 79


state 67

    (17) clase3 -> METHODS . funcion metodos
    (37) funcion -> . funcion1 FUNCTION guardar_id LPAR funcion2 RPAR insertar_tabla bloque_return reiniciar_func funcion
    (38) funcion -> . e
    (42) funcion1 -> . tipo
    (43) funcion1 -> . VOID funcion_void
    (163) e -> .
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . STRING
    (52) tipo -> . BOOL

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    VOID            shift and go to state 19
    RCBRAC          reduce using rule 163 (e -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

  ! VOID            [ reduce using rule 163 (e -> .) ]
  ! INT             [ reduce using rule 163 (e -> .) ]
  ! FLOAT           [ reduce using rule 163 (e -> .) ]
  ! STRING          [ reduce using rule 163 (e -> .) ]
  ! BOOL            [ reduce using rule 163 (e -> .) ]

    funcion                        shift and go to state 80
    funcion1                       shift and go to state 16
    e                              shift and go to state 17
    tipo                           shift and go to state 18

state 68

    (18) clase3 -> e .

    RCBRAC          reduce using rule 18 (clase3 -> e .)


state 69

    (11) clase2 -> ATTRIBUTES declaracion . atributos asign
    (13) atributos -> . declaracion atributos
    (14) atributos -> . e
    (25) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (163) e -> .
    (26) declaracion1 -> . inserta_declaracion declaracion2 declaracion4
    (27) inserta_declaracion -> . ID

  ! shift/reduce conflict for ID resolved as shift
    METHODS         reduce using rule 163 (e -> .)
    RCBRAC          reduce using rule 163 (e -> .)
    ID              shift and go to state 27

  ! ID              [ reduce using rule 163 (e -> .) ]

    declaracion                    shift and go to state 81
    atributos                      shift and go to state 82
    e                              shift and go to state 83
    declaracion1                   shift and go to state 25
    inserta_declaracion            shift and go to state 26

state 70

    (9) clase1 -> LT INHERITS ID GT .

    LCBRAC          reduce using rule 9 (clase1 -> LT INHERITS ID GT .)


state 71

    (3) main -> MAIN LPAR RPAR main_start . bloque
    (53) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 85

    bloque                         shift and go to state 84

state 72

    (4) main_start -> e .

    LCBRAC          reduce using rule 4 (main_start -> e .)


state 73

    (37) funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 . RPAR insertar_tabla bloque_return reiniciar_func funcion

    RPAR            shift and go to state 86


state 74

    (45) funcion2 -> ID . COLON tipo funcion3

    COLON           shift and go to state 87


state 75

    (46) funcion2 -> e .

    RPAR            reduce using rule 46 (funcion2 -> e .)


state 76

    (31) declaracion3 -> LSBRAC . CTEI RSBRAC

    CTEI            shift and go to state 88


state 77

    (28) declaracion2 -> LSBRAC assign_limit RSBRAC declaracion3 .

    COMMA           reduce using rule 28 (declaracion2 -> LSBRAC assign_limit RSBRAC declaracion3 .)
    COLON           reduce using rule 28 (declaracion2 -> LSBRAC assign_limit RSBRAC declaracion3 .)


state 78

    (32) declaracion3 -> e .

    COMMA           reduce using rule 32 (declaracion3 -> e .)
    COLON           reduce using rule 32 (declaracion3 -> e .)


state 79

    (5) clase -> CLASS inicializar_clase clase1 LCBRAC clase2 clase3 RCBRAC . reiniciar_clase clase
    (8) reiniciar_clase -> . e
    (163) e -> .

    CLASS           reduce using rule 163 (e -> .)
    VAR             reduce using rule 163 (e -> .)
    VOID            reduce using rule 163 (e -> .)
    INT             reduce using rule 163 (e -> .)
    FLOAT           reduce using rule 163 (e -> .)
    STRING          reduce using rule 163 (e -> .)
    BOOL            reduce using rule 163 (e -> .)
    MAIN            reduce using rule 163 (e -> .)

    reiniciar_clase                shift and go to state 89
    e                              shift and go to state 90

state 80

    (17) clase3 -> METHODS funcion . metodos
    (19) metodos -> . funcion metodos
    (20) metodos -> . e
    (37) funcion -> . funcion1 FUNCTION guardar_id LPAR funcion2 RPAR insertar_tabla bloque_return reiniciar_func funcion
    (38) funcion -> . e
    (163) e -> .
    (42) funcion1 -> . tipo
    (43) funcion1 -> . VOID funcion_void
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . STRING
    (52) tipo -> . BOOL

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    RCBRAC          reduce using rule 163 (e -> .)
    VOID            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

  ! VOID            [ reduce using rule 163 (e -> .) ]
  ! INT             [ reduce using rule 163 (e -> .) ]
  ! FLOAT           [ reduce using rule 163 (e -> .) ]
  ! STRING          [ reduce using rule 163 (e -> .) ]
  ! BOOL            [ reduce using rule 163 (e -> .) ]

    funcion                        shift and go to state 91
    metodos                        shift and go to state 92
    e                              shift and go to state 93
    funcion1                       shift and go to state 16
    tipo                           shift and go to state 18

state 81

    (13) atributos -> declaracion . atributos
    (13) atributos -> . declaracion atributos
    (14) atributos -> . e
    (25) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (163) e -> .
    (26) declaracion1 -> . inserta_declaracion declaracion2 declaracion4
    (27) inserta_declaracion -> . ID

  ! shift/reduce conflict for ID resolved as shift
    METHODS         reduce using rule 163 (e -> .)
    RCBRAC          reduce using rule 163 (e -> .)
    ID              shift and go to state 27

  ! ID              [ reduce using rule 163 (e -> .) ]

    declaracion                    shift and go to state 81
    atributos                      shift and go to state 94
    e                              shift and go to state 83
    declaracion1                   shift and go to state 25
    inserta_declaracion            shift and go to state 26

state 82

    (11) clase2 -> ATTRIBUTES declaracion atributos . asign
    (15) asign -> . asignacion asign
    (16) asign -> . e
    (65) asignacion -> . variable EQ expresion SEMICOLON atomic_assign
    (163) e -> .
    (73) variable -> . var_id variable1 variable2
    (74) var_id -> . ID

    METHODS         reduce using rule 163 (e -> .)
    RCBRAC          reduce using rule 163 (e -> .)
    ID              shift and go to state 100

    asign                          shift and go to state 95
    asignacion                     shift and go to state 96
    e                              shift and go to state 97
    variable                       shift and go to state 98
    var_id                         shift and go to state 99

state 83

    (14) atributos -> e .

    ID              reduce using rule 14 (atributos -> e .)
    METHODS         reduce using rule 14 (atributos -> e .)
    RCBRAC          reduce using rule 14 (atributos -> e .)


state 84

    (3) main -> MAIN LPAR RPAR main_start bloque .

    $end            reduce using rule 3 (main -> MAIN LPAR RPAR main_start bloque .)


state 85

    (53) bloque -> LCBRAC . estatutos RCBRAC
    (56) estatutos -> . estatuto estatutos
    (57) estatutos -> . e
    (58) estatuto -> . asignacion
    (59) estatuto -> . condicion
    (60) estatuto -> . llamada_void SEMICOLON
    (61) estatuto -> . leer
    (62) estatuto -> . escribir
    (63) estatuto -> . ciclo_w
    (64) estatuto -> . ciclo_f
    (163) e -> .
    (65) asignacion -> . variable EQ expresion SEMICOLON atomic_assign
    (67) condicion -> . IF LPAR expresion RPAR gotoF bloque condicion1 fill
    (87) llamada_void -> . validar_id llamada1 LPAR llamada2 RPAR
    (96) leer -> . READ LPAR variable add_read generar_cuadr RPAR SEMICOLON
    (98) escribir -> . WRITE LPAR escribir1 RPAR SEMICOLON
    (105) ciclo_w -> . WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while
    (108) ciclo_f -> . FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (73) variable -> . var_id variable1 variable2
    (88) validar_id -> . ID
    (74) var_id -> . ID

    RCBRAC          reduce using rule 163 (e -> .)
    IF              shift and go to state 111
    READ            shift and go to state 113
    WRITE           shift and go to state 114
    WHILE           shift and go to state 115
    FROM            shift and go to state 116
    ID              shift and go to state 117

    estatutos                      shift and go to state 101
    estatuto                       shift and go to state 102
    e                              shift and go to state 103
    asignacion                     shift and go to state 104
    condicion                      shift and go to state 105
    llamada_void                   shift and go to state 106
    leer                           shift and go to state 107
    escribir                       shift and go to state 108
    ciclo_w                        shift and go to state 109
    ciclo_f                        shift and go to state 110
    variable                       shift and go to state 98
    validar_id                     shift and go to state 112
    var_id                         shift and go to state 99

state 86

    (37) funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR . insertar_tabla bloque_return reiniciar_func funcion
    (39) insertar_tabla -> . e
    (163) e -> .

    LCBRAC          reduce using rule 163 (e -> .)

    insertar_tabla                 shift and go to state 118
    e                              shift and go to state 119

state 87

    (45) funcion2 -> ID COLON . tipo funcion3
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . STRING
    (52) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

    tipo                           shift and go to state 120

state 88

    (31) declaracion3 -> LSBRAC CTEI . RSBRAC

    RSBRAC          shift and go to state 121


state 89

    (5) clase -> CLASS inicializar_clase clase1 LCBRAC clase2 clase3 RCBRAC reiniciar_clase . clase
    (5) clase -> . CLASS inicializar_clase clase1 LCBRAC clase2 clase3 RCBRAC reiniciar_clase clase
    (6) clase -> . e
    (163) e -> .

    CLASS           shift and go to state 8
    VAR             reduce using rule 163 (e -> .)
    VOID            reduce using rule 163 (e -> .)
    INT             reduce using rule 163 (e -> .)
    FLOAT           reduce using rule 163 (e -> .)
    STRING          reduce using rule 163 (e -> .)
    BOOL            reduce using rule 163 (e -> .)
    MAIN            reduce using rule 163 (e -> .)

    clase                          shift and go to state 122
    e                              shift and go to state 9

state 90

    (8) reiniciar_clase -> e .

    CLASS           reduce using rule 8 (reiniciar_clase -> e .)
    VAR             reduce using rule 8 (reiniciar_clase -> e .)
    VOID            reduce using rule 8 (reiniciar_clase -> e .)
    INT             reduce using rule 8 (reiniciar_clase -> e .)
    FLOAT           reduce using rule 8 (reiniciar_clase -> e .)
    STRING          reduce using rule 8 (reiniciar_clase -> e .)
    BOOL            reduce using rule 8 (reiniciar_clase -> e .)
    MAIN            reduce using rule 8 (reiniciar_clase -> e .)


state 91

    (19) metodos -> funcion . metodos
    (19) metodos -> . funcion metodos
    (20) metodos -> . e
    (37) funcion -> . funcion1 FUNCTION guardar_id LPAR funcion2 RPAR insertar_tabla bloque_return reiniciar_func funcion
    (38) funcion -> . e
    (163) e -> .
    (42) funcion1 -> . tipo
    (43) funcion1 -> . VOID funcion_void
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . STRING
    (52) tipo -> . BOOL

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    RCBRAC          reduce using rule 163 (e -> .)
    VOID            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

  ! VOID            [ reduce using rule 163 (e -> .) ]
  ! INT             [ reduce using rule 163 (e -> .) ]
  ! FLOAT           [ reduce using rule 163 (e -> .) ]
  ! STRING          [ reduce using rule 163 (e -> .) ]
  ! BOOL            [ reduce using rule 163 (e -> .) ]

    funcion                        shift and go to state 91
    metodos                        shift and go to state 123
    e                              shift and go to state 93
    funcion1                       shift and go to state 16
    tipo                           shift and go to state 18

state 92

    (17) clase3 -> METHODS funcion metodos .

    RCBRAC          reduce using rule 17 (clase3 -> METHODS funcion metodos .)


state 93

    (20) metodos -> e .
    (38) funcion -> e .

  ! reduce/reduce conflict for RCBRAC resolved using rule 20 (metodos -> e .)
    RCBRAC          reduce using rule 20 (metodos -> e .)
    VOID            reduce using rule 38 (funcion -> e .)
    INT             reduce using rule 38 (funcion -> e .)
    FLOAT           reduce using rule 38 (funcion -> e .)
    STRING          reduce using rule 38 (funcion -> e .)
    BOOL            reduce using rule 38 (funcion -> e .)

  ! RCBRAC          [ reduce using rule 38 (funcion -> e .) ]


state 94

    (13) atributos -> declaracion atributos .

    ID              reduce using rule 13 (atributos -> declaracion atributos .)
    METHODS         reduce using rule 13 (atributos -> declaracion atributos .)
    RCBRAC          reduce using rule 13 (atributos -> declaracion atributos .)


state 95

    (11) clase2 -> ATTRIBUTES declaracion atributos asign .

    METHODS         reduce using rule 11 (clase2 -> ATTRIBUTES declaracion atributos asign .)
    RCBRAC          reduce using rule 11 (clase2 -> ATTRIBUTES declaracion atributos asign .)


state 96

    (15) asign -> asignacion . asign
    (15) asign -> . asignacion asign
    (16) asign -> . e
    (65) asignacion -> . variable EQ expresion SEMICOLON atomic_assign
    (163) e -> .
    (73) variable -> . var_id variable1 variable2
    (74) var_id -> . ID

    METHODS         reduce using rule 163 (e -> .)
    RCBRAC          reduce using rule 163 (e -> .)
    ID              shift and go to state 100

    asignacion                     shift and go to state 96
    asign                          shift and go to state 124
    e                              shift and go to state 97
    variable                       shift and go to state 98
    var_id                         shift and go to state 99

state 97

    (16) asign -> e .

    METHODS         reduce using rule 16 (asign -> e .)
    RCBRAC          reduce using rule 16 (asign -> e .)


state 98

    (65) asignacion -> variable . EQ expresion SEMICOLON atomic_assign

    EQ              shift and go to state 125


state 99

    (73) variable -> var_id . variable1 variable2
    (75) variable1 -> . QUESTION ID
    (76) variable1 -> . e
    (163) e -> .

    QUESTION        shift and go to state 127
    LSBRAC          reduce using rule 163 (e -> .)
    EQ              reduce using rule 163 (e -> .)
    MULT            reduce using rule 163 (e -> .)
    DIV             reduce using rule 163 (e -> .)
    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    variable1                      shift and go to state 126
    e                              shift and go to state 128

state 100

    (74) var_id -> ID .

    QUESTION        reduce using rule 74 (var_id -> ID .)
    LSBRAC          reduce using rule 74 (var_id -> ID .)
    EQ              reduce using rule 74 (var_id -> ID .)
    RPAR            reduce using rule 74 (var_id -> ID .)


state 101

    (53) bloque -> LCBRAC estatutos . RCBRAC

    RCBRAC          shift and go to state 129


state 102

    (56) estatutos -> estatuto . estatutos
    (56) estatutos -> . estatuto estatutos
    (57) estatutos -> . e
    (58) estatuto -> . asignacion
    (59) estatuto -> . condicion
    (60) estatuto -> . llamada_void SEMICOLON
    (61) estatuto -> . leer
    (62) estatuto -> . escribir
    (63) estatuto -> . ciclo_w
    (64) estatuto -> . ciclo_f
    (163) e -> .
    (65) asignacion -> . variable EQ expresion SEMICOLON atomic_assign
    (67) condicion -> . IF LPAR expresion RPAR gotoF bloque condicion1 fill
    (87) llamada_void -> . validar_id llamada1 LPAR llamada2 RPAR
    (96) leer -> . READ LPAR variable add_read generar_cuadr RPAR SEMICOLON
    (98) escribir -> . WRITE LPAR escribir1 RPAR SEMICOLON
    (105) ciclo_w -> . WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while
    (108) ciclo_f -> . FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (73) variable -> . var_id variable1 variable2
    (88) validar_id -> . ID
    (74) var_id -> . ID

    RCBRAC          reduce using rule 163 (e -> .)
    RETURN          reduce using rule 163 (e -> .)
    IF              shift and go to state 111
    READ            shift and go to state 113
    WRITE           shift and go to state 114
    WHILE           shift and go to state 115
    FROM            shift and go to state 116
    ID              shift and go to state 117

    estatuto                       shift and go to state 102
    estatutos                      shift and go to state 130
    e                              shift and go to state 103
    asignacion                     shift and go to state 104
    condicion                      shift and go to state 105
    llamada_void                   shift and go to state 106
    leer                           shift and go to state 107
    escribir                       shift and go to state 108
    ciclo_w                        shift and go to state 109
    ciclo_f                        shift and go to state 110
    variable                       shift and go to state 98
    validar_id                     shift and go to state 112
    var_id                         shift and go to state 99

state 103

    (57) estatutos -> e .

    RCBRAC          reduce using rule 57 (estatutos -> e .)
    RETURN          reduce using rule 57 (estatutos -> e .)


state 104

    (58) estatuto -> asignacion .

    IF              reduce using rule 58 (estatuto -> asignacion .)
    READ            reduce using rule 58 (estatuto -> asignacion .)
    WRITE           reduce using rule 58 (estatuto -> asignacion .)
    WHILE           reduce using rule 58 (estatuto -> asignacion .)
    FROM            reduce using rule 58 (estatuto -> asignacion .)
    ID              reduce using rule 58 (estatuto -> asignacion .)
    RCBRAC          reduce using rule 58 (estatuto -> asignacion .)
    RETURN          reduce using rule 58 (estatuto -> asignacion .)


state 105

    (59) estatuto -> condicion .

    IF              reduce using rule 59 (estatuto -> condicion .)
    READ            reduce using rule 59 (estatuto -> condicion .)
    WRITE           reduce using rule 59 (estatuto -> condicion .)
    WHILE           reduce using rule 59 (estatuto -> condicion .)
    FROM            reduce using rule 59 (estatuto -> condicion .)
    ID              reduce using rule 59 (estatuto -> condicion .)
    RCBRAC          reduce using rule 59 (estatuto -> condicion .)
    RETURN          reduce using rule 59 (estatuto -> condicion .)


state 106

    (60) estatuto -> llamada_void . SEMICOLON

    SEMICOLON       shift and go to state 131


state 107

    (61) estatuto -> leer .

    IF              reduce using rule 61 (estatuto -> leer .)
    READ            reduce using rule 61 (estatuto -> leer .)
    WRITE           reduce using rule 61 (estatuto -> leer .)
    WHILE           reduce using rule 61 (estatuto -> leer .)
    FROM            reduce using rule 61 (estatuto -> leer .)
    ID              reduce using rule 61 (estatuto -> leer .)
    RCBRAC          reduce using rule 61 (estatuto -> leer .)
    RETURN          reduce using rule 61 (estatuto -> leer .)


state 108

    (62) estatuto -> escribir .

    IF              reduce using rule 62 (estatuto -> escribir .)
    READ            reduce using rule 62 (estatuto -> escribir .)
    WRITE           reduce using rule 62 (estatuto -> escribir .)
    WHILE           reduce using rule 62 (estatuto -> escribir .)
    FROM            reduce using rule 62 (estatuto -> escribir .)
    ID              reduce using rule 62 (estatuto -> escribir .)
    RCBRAC          reduce using rule 62 (estatuto -> escribir .)
    RETURN          reduce using rule 62 (estatuto -> escribir .)


state 109

    (63) estatuto -> ciclo_w .

    IF              reduce using rule 63 (estatuto -> ciclo_w .)
    READ            reduce using rule 63 (estatuto -> ciclo_w .)
    WRITE           reduce using rule 63 (estatuto -> ciclo_w .)
    WHILE           reduce using rule 63 (estatuto -> ciclo_w .)
    FROM            reduce using rule 63 (estatuto -> ciclo_w .)
    ID              reduce using rule 63 (estatuto -> ciclo_w .)
    RCBRAC          reduce using rule 63 (estatuto -> ciclo_w .)
    RETURN          reduce using rule 63 (estatuto -> ciclo_w .)


state 110

    (64) estatuto -> ciclo_f .

    IF              reduce using rule 64 (estatuto -> ciclo_f .)
    READ            reduce using rule 64 (estatuto -> ciclo_f .)
    WRITE           reduce using rule 64 (estatuto -> ciclo_f .)
    WHILE           reduce using rule 64 (estatuto -> ciclo_f .)
    FROM            reduce using rule 64 (estatuto -> ciclo_f .)
    ID              reduce using rule 64 (estatuto -> ciclo_f .)
    RCBRAC          reduce using rule 64 (estatuto -> ciclo_f .)
    RETURN          reduce using rule 64 (estatuto -> ciclo_f .)


state 111

    (67) condicion -> IF . LPAR expresion RPAR gotoF bloque condicion1 fill

    LPAR            shift and go to state 132


state 112

    (87) llamada_void -> validar_id . llamada1 LPAR llamada2 RPAR
    (89) llamada1 -> . DOT ID
    (90) llamada1 -> . e
    (163) e -> .

    DOT             shift and go to state 134
    LPAR            reduce using rule 163 (e -> .)

    llamada1                       shift and go to state 133
    e                              shift and go to state 135

state 113

    (96) leer -> READ . LPAR variable add_read generar_cuadr RPAR SEMICOLON

    LPAR            shift and go to state 136


state 114

    (98) escribir -> WRITE . LPAR escribir1 RPAR SEMICOLON

    LPAR            shift and go to state 137


state 115

    (105) ciclo_w -> WHILE . push_while LPAR expresion RPAR gotoF DO bloque return_while
    (106) push_while -> . e
    (163) e -> .

    LPAR            reduce using rule 163 (e -> .)

    push_while                     shift and go to state 138
    e                              shift and go to state 139

state 116

    (108) ciclo_f -> FROM . LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go

    LPAR            shift and go to state 140


state 117

    (88) validar_id -> ID .
    (74) var_id -> ID .

    DOT             reduce using rule 88 (validar_id -> ID .)
    LPAR            reduce using rule 88 (validar_id -> ID .)
    QUESTION        reduce using rule 74 (var_id -> ID .)
    LSBRAC          reduce using rule 74 (var_id -> ID .)
    EQ              reduce using rule 74 (var_id -> ID .)


state 118

    (37) funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR insertar_tabla . bloque_return reiniciar_func funcion
    (54) bloque_return -> . LCBRAC estatutos regresar RCBRAC
    (55) bloque_return -> . LCBRAC estatutos regresar_void RCBRAC

    LCBRAC          shift and go to state 142

    bloque_return                  shift and go to state 141

state 119

    (39) insertar_tabla -> e .

    LCBRAC          reduce using rule 39 (insertar_tabla -> e .)


state 120

    (45) funcion2 -> ID COLON tipo . funcion3
    (47) funcion3 -> . COMMA ID COLON tipo funcion3
    (48) funcion3 -> . e
    (163) e -> .

    COMMA           shift and go to state 144
    RPAR            reduce using rule 163 (e -> .)

    funcion3                       shift and go to state 143
    e                              shift and go to state 145

state 121

    (31) declaracion3 -> LSBRAC CTEI RSBRAC .

    COMMA           reduce using rule 31 (declaracion3 -> LSBRAC CTEI RSBRAC .)
    COLON           reduce using rule 31 (declaracion3 -> LSBRAC CTEI RSBRAC .)


state 122

    (5) clase -> CLASS inicializar_clase clase1 LCBRAC clase2 clase3 RCBRAC reiniciar_clase clase .

    VAR             reduce using rule 5 (clase -> CLASS inicializar_clase clase1 LCBRAC clase2 clase3 RCBRAC reiniciar_clase clase .)
    VOID            reduce using rule 5 (clase -> CLASS inicializar_clase clase1 LCBRAC clase2 clase3 RCBRAC reiniciar_clase clase .)
    INT             reduce using rule 5 (clase -> CLASS inicializar_clase clase1 LCBRAC clase2 clase3 RCBRAC reiniciar_clase clase .)
    FLOAT           reduce using rule 5 (clase -> CLASS inicializar_clase clase1 LCBRAC clase2 clase3 RCBRAC reiniciar_clase clase .)
    STRING          reduce using rule 5 (clase -> CLASS inicializar_clase clase1 LCBRAC clase2 clase3 RCBRAC reiniciar_clase clase .)
    BOOL            reduce using rule 5 (clase -> CLASS inicializar_clase clase1 LCBRAC clase2 clase3 RCBRAC reiniciar_clase clase .)
    MAIN            reduce using rule 5 (clase -> CLASS inicializar_clase clase1 LCBRAC clase2 clase3 RCBRAC reiniciar_clase clase .)


state 123

    (19) metodos -> funcion metodos .

    RCBRAC          reduce using rule 19 (metodos -> funcion metodos .)


state 124

    (15) asign -> asignacion asign .

    METHODS         reduce using rule 15 (asign -> asignacion asign .)
    RCBRAC          reduce using rule 15 (asign -> asignacion asign .)


state 125

    (65) asignacion -> variable EQ . expresion SEMICOLON atomic_assign
    (119) expresion -> . a_exp exp1
    (124) a_exp -> . b_exp exp2
    (128) b_exp -> . c_exp exp3
    (138) c_exp -> . d_exp exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    variable                       shift and go to state 146
    expresion                      shift and go to state 147
    a_exp                          shift and go to state 148
    b_exp                          shift and go to state 149
    c_exp                          shift and go to state 150
    d_exp                          shift and go to state 151
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 126

    (73) variable -> var_id variable1 . variable2
    (77) variable2 -> . LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador
    (78) variable2 -> . e
    (163) e -> .

    LSBRAC          shift and go to state 164
    EQ              reduce using rule 163 (e -> .)
    MULT            reduce using rule 163 (e -> .)
    DIV             reduce using rule 163 (e -> .)
    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    variable2                      shift and go to state 163
    e                              shift and go to state 165

state 127

    (75) variable1 -> QUESTION . ID

    ID              shift and go to state 166


state 128

    (76) variable1 -> e .

    LSBRAC          reduce using rule 76 (variable1 -> e .)
    EQ              reduce using rule 76 (variable1 -> e .)
    MULT            reduce using rule 76 (variable1 -> e .)
    DIV             reduce using rule 76 (variable1 -> e .)
    PLUS            reduce using rule 76 (variable1 -> e .)
    MINUS           reduce using rule 76 (variable1 -> e .)
    LT              reduce using rule 76 (variable1 -> e .)
    GT              reduce using rule 76 (variable1 -> e .)
    COMP            reduce using rule 76 (variable1 -> e .)
    NOTEQ           reduce using rule 76 (variable1 -> e .)
    AND             reduce using rule 76 (variable1 -> e .)
    OR              reduce using rule 76 (variable1 -> e .)
    SEMICOLON       reduce using rule 76 (variable1 -> e .)
    RPAR            reduce using rule 76 (variable1 -> e .)
    COMMA           reduce using rule 76 (variable1 -> e .)
    RSBRAC          reduce using rule 76 (variable1 -> e .)
    TO              reduce using rule 76 (variable1 -> e .)


state 129

    (53) bloque -> LCBRAC estatutos RCBRAC .

    $end            reduce using rule 53 (bloque -> LCBRAC estatutos RCBRAC .)
    ELSE            reduce using rule 53 (bloque -> LCBRAC estatutos RCBRAC .)
    IF              reduce using rule 53 (bloque -> LCBRAC estatutos RCBRAC .)
    READ            reduce using rule 53 (bloque -> LCBRAC estatutos RCBRAC .)
    WRITE           reduce using rule 53 (bloque -> LCBRAC estatutos RCBRAC .)
    WHILE           reduce using rule 53 (bloque -> LCBRAC estatutos RCBRAC .)
    FROM            reduce using rule 53 (bloque -> LCBRAC estatutos RCBRAC .)
    ID              reduce using rule 53 (bloque -> LCBRAC estatutos RCBRAC .)
    RCBRAC          reduce using rule 53 (bloque -> LCBRAC estatutos RCBRAC .)
    RETURN          reduce using rule 53 (bloque -> LCBRAC estatutos RCBRAC .)


state 130

    (56) estatutos -> estatuto estatutos .

    RCBRAC          reduce using rule 56 (estatutos -> estatuto estatutos .)
    RETURN          reduce using rule 56 (estatutos -> estatuto estatutos .)


state 131

    (60) estatuto -> llamada_void SEMICOLON .

    IF              reduce using rule 60 (estatuto -> llamada_void SEMICOLON .)
    READ            reduce using rule 60 (estatuto -> llamada_void SEMICOLON .)
    WRITE           reduce using rule 60 (estatuto -> llamada_void SEMICOLON .)
    WHILE           reduce using rule 60 (estatuto -> llamada_void SEMICOLON .)
    FROM            reduce using rule 60 (estatuto -> llamada_void SEMICOLON .)
    ID              reduce using rule 60 (estatuto -> llamada_void SEMICOLON .)
    RCBRAC          reduce using rule 60 (estatuto -> llamada_void SEMICOLON .)
    RETURN          reduce using rule 60 (estatuto -> llamada_void SEMICOLON .)


state 132

    (67) condicion -> IF LPAR . expresion RPAR gotoF bloque condicion1 fill
    (119) expresion -> . a_exp exp1
    (124) a_exp -> . b_exp exp2
    (128) b_exp -> . c_exp exp3
    (138) c_exp -> . d_exp exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    expresion                      shift and go to state 167
    a_exp                          shift and go to state 148
    b_exp                          shift and go to state 149
    c_exp                          shift and go to state 150
    d_exp                          shift and go to state 151
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 133

    (87) llamada_void -> validar_id llamada1 . LPAR llamada2 RPAR

    LPAR            shift and go to state 168


state 134

    (89) llamada1 -> DOT . ID

    ID              shift and go to state 169


state 135

    (90) llamada1 -> e .

    LPAR            reduce using rule 90 (llamada1 -> e .)


state 136

    (96) leer -> READ LPAR . variable add_read generar_cuadr RPAR SEMICOLON
    (73) variable -> . var_id variable1 variable2
    (74) var_id -> . ID

    ID              shift and go to state 100

    variable                       shift and go to state 170
    var_id                         shift and go to state 99

state 137

    (98) escribir -> WRITE LPAR . escribir1 RPAR SEMICOLON
    (99) escribir1 -> . texto add_print generar_cuadr escribir2
    (100) escribir1 -> . expresion add_print generar_cuadr escribir2
    (104) texto -> . CTESTR
    (119) expresion -> . a_exp exp1
    (124) a_exp -> . b_exp exp2
    (128) b_exp -> . c_exp exp3
    (138) c_exp -> . d_exp exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    CTESTR          shift and go to state 174
    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    escribir1                      shift and go to state 171
    texto                          shift and go to state 172
    expresion                      shift and go to state 173
    a_exp                          shift and go to state 148
    b_exp                          shift and go to state 149
    c_exp                          shift and go to state 150
    d_exp                          shift and go to state 151
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 138

    (105) ciclo_w -> WHILE push_while . LPAR expresion RPAR gotoF DO bloque return_while

    LPAR            shift and go to state 175


state 139

    (106) push_while -> e .

    LPAR            reduce using rule 106 (push_while -> e .)


state 140

    (108) ciclo_f -> FROM LPAR . variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (73) variable -> . var_id variable1 variable2
    (74) var_id -> . ID

    ID              shift and go to state 100

    variable                       shift and go to state 176
    var_id                         shift and go to state 99

state 141

    (37) funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR insertar_tabla bloque_return . reiniciar_func funcion
    (41) reiniciar_func -> . e
    (163) e -> .

    VOID            reduce using rule 163 (e -> .)
    INT             reduce using rule 163 (e -> .)
    FLOAT           reduce using rule 163 (e -> .)
    STRING          reduce using rule 163 (e -> .)
    BOOL            reduce using rule 163 (e -> .)
    MAIN            reduce using rule 163 (e -> .)
    RCBRAC          reduce using rule 163 (e -> .)

    reiniciar_func                 shift and go to state 177
    e                              shift and go to state 178

state 142

    (54) bloque_return -> LCBRAC . estatutos regresar RCBRAC
    (55) bloque_return -> LCBRAC . estatutos regresar_void RCBRAC
    (56) estatutos -> . estatuto estatutos
    (57) estatutos -> . e
    (58) estatuto -> . asignacion
    (59) estatuto -> . condicion
    (60) estatuto -> . llamada_void SEMICOLON
    (61) estatuto -> . leer
    (62) estatuto -> . escribir
    (63) estatuto -> . ciclo_w
    (64) estatuto -> . ciclo_f
    (163) e -> .
    (65) asignacion -> . variable EQ expresion SEMICOLON atomic_assign
    (67) condicion -> . IF LPAR expresion RPAR gotoF bloque condicion1 fill
    (87) llamada_void -> . validar_id llamada1 LPAR llamada2 RPAR
    (96) leer -> . READ LPAR variable add_read generar_cuadr RPAR SEMICOLON
    (98) escribir -> . WRITE LPAR escribir1 RPAR SEMICOLON
    (105) ciclo_w -> . WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while
    (108) ciclo_f -> . FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (73) variable -> . var_id variable1 variable2
    (88) validar_id -> . ID
    (74) var_id -> . ID

    RETURN          reduce using rule 163 (e -> .)
    IF              shift and go to state 111
    READ            shift and go to state 113
    WRITE           shift and go to state 114
    WHILE           shift and go to state 115
    FROM            shift and go to state 116
    ID              shift and go to state 117

    estatutos                      shift and go to state 179
    estatuto                       shift and go to state 102
    e                              shift and go to state 103
    asignacion                     shift and go to state 104
    condicion                      shift and go to state 105
    llamada_void                   shift and go to state 106
    leer                           shift and go to state 107
    escribir                       shift and go to state 108
    ciclo_w                        shift and go to state 109
    ciclo_f                        shift and go to state 110
    variable                       shift and go to state 98
    validar_id                     shift and go to state 112
    var_id                         shift and go to state 99

state 143

    (45) funcion2 -> ID COLON tipo funcion3 .

    RPAR            reduce using rule 45 (funcion2 -> ID COLON tipo funcion3 .)


state 144

    (47) funcion3 -> COMMA . ID COLON tipo funcion3

    ID              shift and go to state 180


state 145

    (48) funcion3 -> e .

    RPAR            reduce using rule 48 (funcion3 -> e .)


state 146

    (152) e_exp -> variable .

    MULT            reduce using rule 152 (e_exp -> variable .)
    DIV             reduce using rule 152 (e_exp -> variable .)
    PLUS            reduce using rule 152 (e_exp -> variable .)
    MINUS           reduce using rule 152 (e_exp -> variable .)
    LT              reduce using rule 152 (e_exp -> variable .)
    GT              reduce using rule 152 (e_exp -> variable .)
    COMP            reduce using rule 152 (e_exp -> variable .)
    NOTEQ           reduce using rule 152 (e_exp -> variable .)
    AND             reduce using rule 152 (e_exp -> variable .)
    OR              reduce using rule 152 (e_exp -> variable .)
    SEMICOLON       reduce using rule 152 (e_exp -> variable .)
    RPAR            reduce using rule 152 (e_exp -> variable .)
    COMMA           reduce using rule 152 (e_exp -> variable .)
    RSBRAC          reduce using rule 152 (e_exp -> variable .)
    TO              reduce using rule 152 (e_exp -> variable .)


state 147

    (65) asignacion -> variable EQ expresion . SEMICOLON atomic_assign

    SEMICOLON       shift and go to state 181


state 148

    (119) expresion -> a_exp . exp1
    (120) exp1 -> . OR push_or a_exp pop_operador exp1
    (121) exp1 -> . e
    (163) e -> .

    OR              shift and go to state 183
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    exp1                           shift and go to state 182
    e                              shift and go to state 184

state 149

    (124) a_exp -> b_exp . exp2
    (125) exp2 -> . AND push_and b_exp pop_operador exp2
    (126) exp2 -> . e
    (163) e -> .

    AND             shift and go to state 186
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    exp2                           shift and go to state 185
    e                              shift and go to state 187

state 150

    (128) b_exp -> c_exp . exp3
    (129) exp3 -> . LT push_lt c_exp pop_operador exp3
    (130) exp3 -> . GT push_gt c_exp pop_operador exp3
    (131) exp3 -> . COMP push_comp c_exp pop_operador exp3
    (132) exp3 -> . NOTEQ push_noteq c_exp pop_operador exp3
    (133) exp3 -> . e
    (163) e -> .

    LT              shift and go to state 189
    GT              shift and go to state 190
    COMP            shift and go to state 191
    NOTEQ           shift and go to state 192
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    exp3                           shift and go to state 188
    e                              shift and go to state 193

state 151

    (138) c_exp -> d_exp . exp4
    (139) exp4 -> . PLUS push_plus d_exp pop_operador exp4
    (140) exp4 -> . MINUS push_minus d_exp pop_operador exp4
    (141) exp4 -> . e
    (163) e -> .

    PLUS            shift and go to state 195
    MINUS           shift and go to state 196
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    exp4                           shift and go to state 194
    e                              shift and go to state 197

state 152

    (144) d_exp -> e_exp . exp5
    (145) exp5 -> . MULT push_mult e_exp pop_operador exp5
    (146) exp5 -> . DIV push_div e_exp pop_operador exp5
    (147) exp5 -> . e
    (163) e -> .

    MULT            shift and go to state 199
    DIV             shift and go to state 200
    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    exp5                           shift and go to state 198
    e                              shift and go to state 201

state 153

    (150) e_exp -> LPAR . expresion RPAR
    (119) expresion -> . a_exp exp1
    (124) a_exp -> . b_exp exp2
    (128) b_exp -> . c_exp exp3
    (138) c_exp -> . d_exp exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    expresion                      shift and go to state 202
    a_exp                          shift and go to state 148
    b_exp                          shift and go to state 149
    c_exp                          shift and go to state 150
    d_exp                          shift and go to state 151
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 154

    (151) e_exp -> var_cte .

    MULT            reduce using rule 151 (e_exp -> var_cte .)
    DIV             reduce using rule 151 (e_exp -> var_cte .)
    PLUS            reduce using rule 151 (e_exp -> var_cte .)
    MINUS           reduce using rule 151 (e_exp -> var_cte .)
    LT              reduce using rule 151 (e_exp -> var_cte .)
    GT              reduce using rule 151 (e_exp -> var_cte .)
    COMP            reduce using rule 151 (e_exp -> var_cte .)
    NOTEQ           reduce using rule 151 (e_exp -> var_cte .)
    AND             reduce using rule 151 (e_exp -> var_cte .)
    OR              reduce using rule 151 (e_exp -> var_cte .)
    SEMICOLON       reduce using rule 151 (e_exp -> var_cte .)
    RPAR            reduce using rule 151 (e_exp -> var_cte .)
    COMMA           reduce using rule 151 (e_exp -> var_cte .)
    RSBRAC          reduce using rule 151 (e_exp -> var_cte .)
    TO              reduce using rule 151 (e_exp -> var_cte .)


state 155

    (153) e_exp -> llamada .

    MULT            reduce using rule 153 (e_exp -> llamada .)
    DIV             reduce using rule 153 (e_exp -> llamada .)
    PLUS            reduce using rule 153 (e_exp -> llamada .)
    MINUS           reduce using rule 153 (e_exp -> llamada .)
    LT              reduce using rule 153 (e_exp -> llamada .)
    GT              reduce using rule 153 (e_exp -> llamada .)
    COMP            reduce using rule 153 (e_exp -> llamada .)
    NOTEQ           reduce using rule 153 (e_exp -> llamada .)
    AND             reduce using rule 153 (e_exp -> llamada .)
    OR              reduce using rule 153 (e_exp -> llamada .)
    SEMICOLON       reduce using rule 153 (e_exp -> llamada .)
    RPAR            reduce using rule 153 (e_exp -> llamada .)
    COMMA           reduce using rule 153 (e_exp -> llamada .)
    RSBRAC          reduce using rule 153 (e_exp -> llamada .)
    TO              reduce using rule 153 (e_exp -> llamada .)


state 156

    (154) var_cte -> CTEI . ctei
    (158) ctei -> . e
    (163) e -> .

    MULT            reduce using rule 163 (e -> .)
    DIV             reduce using rule 163 (e -> .)
    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    ctei                           shift and go to state 203
    e                              shift and go to state 204

state 157

    (155) var_cte -> CTEF . ctef
    (159) ctef -> . e
    (163) e -> .

    MULT            reduce using rule 163 (e -> .)
    DIV             reduce using rule 163 (e -> .)
    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    ctef                           shift and go to state 205
    e                              shift and go to state 206

state 158

    (156) var_cte -> CTESTR . ctestr
    (160) ctestr -> . e
    (163) e -> .

    MULT            reduce using rule 163 (e -> .)
    DIV             reduce using rule 163 (e -> .)
    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    ctestr                         shift and go to state 207
    e                              shift and go to state 208

state 159

    (157) var_cte -> CTEB . cteb
    (161) cteb -> . e
    (163) e -> .

    MULT            reduce using rule 163 (e -> .)
    DIV             reduce using rule 163 (e -> .)
    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    cteb                           shift and go to state 209
    e                              shift and go to state 210

state 160

    (84) llamada -> sub_llamada . parche atomic_assign
    (86) parche -> . e
    (163) e -> .

    MULT            reduce using rule 163 (e -> .)
    DIV             reduce using rule 163 (e -> .)
    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    parche                         shift and go to state 211
    e                              shift and go to state 212

state 161

    (74) var_id -> ID .
    (88) validar_id -> ID .

    QUESTION        reduce using rule 74 (var_id -> ID .)
    LSBRAC          reduce using rule 74 (var_id -> ID .)
    MULT            reduce using rule 74 (var_id -> ID .)
    DIV             reduce using rule 74 (var_id -> ID .)
    PLUS            reduce using rule 74 (var_id -> ID .)
    MINUS           reduce using rule 74 (var_id -> ID .)
    LT              reduce using rule 74 (var_id -> ID .)
    GT              reduce using rule 74 (var_id -> ID .)
    COMP            reduce using rule 74 (var_id -> ID .)
    NOTEQ           reduce using rule 74 (var_id -> ID .)
    AND             reduce using rule 74 (var_id -> ID .)
    OR              reduce using rule 74 (var_id -> ID .)
    SEMICOLON       reduce using rule 74 (var_id -> ID .)
    RPAR            reduce using rule 74 (var_id -> ID .)
    COMMA           reduce using rule 74 (var_id -> ID .)
    RSBRAC          reduce using rule 74 (var_id -> ID .)
    TO              reduce using rule 74 (var_id -> ID .)
    DOT             reduce using rule 88 (validar_id -> ID .)
    LPAR            reduce using rule 88 (validar_id -> ID .)


state 162

    (85) sub_llamada -> validar_id . llamada1 LPAR llamada2 RPAR
    (89) llamada1 -> . DOT ID
    (90) llamada1 -> . e
    (163) e -> .

    DOT             shift and go to state 134
    LPAR            reduce using rule 163 (e -> .)

    llamada1                       shift and go to state 213
    e                              shift and go to state 135

state 163

    (73) variable -> var_id variable1 variable2 .

    EQ              reduce using rule 73 (variable -> var_id variable1 variable2 .)
    MULT            reduce using rule 73 (variable -> var_id variable1 variable2 .)
    DIV             reduce using rule 73 (variable -> var_id variable1 variable2 .)
    PLUS            reduce using rule 73 (variable -> var_id variable1 variable2 .)
    MINUS           reduce using rule 73 (variable -> var_id variable1 variable2 .)
    LT              reduce using rule 73 (variable -> var_id variable1 variable2 .)
    GT              reduce using rule 73 (variable -> var_id variable1 variable2 .)
    COMP            reduce using rule 73 (variable -> var_id variable1 variable2 .)
    NOTEQ           reduce using rule 73 (variable -> var_id variable1 variable2 .)
    AND             reduce using rule 73 (variable -> var_id variable1 variable2 .)
    OR              reduce using rule 73 (variable -> var_id variable1 variable2 .)
    SEMICOLON       reduce using rule 73 (variable -> var_id variable1 variable2 .)
    RPAR            reduce using rule 73 (variable -> var_id variable1 variable2 .)
    COMMA           reduce using rule 73 (variable -> var_id variable1 variable2 .)
    RSBRAC          reduce using rule 73 (variable -> var_id variable1 variable2 .)
    TO              reduce using rule 73 (variable -> var_id variable1 variable2 .)


state 164

    (77) variable2 -> LSBRAC . expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador
    (119) expresion -> . a_exp exp1
    (124) a_exp -> . b_exp exp2
    (128) b_exp -> . c_exp exp3
    (138) c_exp -> . d_exp exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    expresion                      shift and go to state 214
    a_exp                          shift and go to state 148
    b_exp                          shift and go to state 149
    c_exp                          shift and go to state 150
    d_exp                          shift and go to state 151
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 165

    (78) variable2 -> e .

    EQ              reduce using rule 78 (variable2 -> e .)
    MULT            reduce using rule 78 (variable2 -> e .)
    DIV             reduce using rule 78 (variable2 -> e .)
    PLUS            reduce using rule 78 (variable2 -> e .)
    MINUS           reduce using rule 78 (variable2 -> e .)
    LT              reduce using rule 78 (variable2 -> e .)
    GT              reduce using rule 78 (variable2 -> e .)
    COMP            reduce using rule 78 (variable2 -> e .)
    NOTEQ           reduce using rule 78 (variable2 -> e .)
    AND             reduce using rule 78 (variable2 -> e .)
    OR              reduce using rule 78 (variable2 -> e .)
    SEMICOLON       reduce using rule 78 (variable2 -> e .)
    RPAR            reduce using rule 78 (variable2 -> e .)
    COMMA           reduce using rule 78 (variable2 -> e .)
    RSBRAC          reduce using rule 78 (variable2 -> e .)
    TO              reduce using rule 78 (variable2 -> e .)


state 166

    (75) variable1 -> QUESTION ID .

    LSBRAC          reduce using rule 75 (variable1 -> QUESTION ID .)
    EQ              reduce using rule 75 (variable1 -> QUESTION ID .)
    MULT            reduce using rule 75 (variable1 -> QUESTION ID .)
    DIV             reduce using rule 75 (variable1 -> QUESTION ID .)
    PLUS            reduce using rule 75 (variable1 -> QUESTION ID .)
    MINUS           reduce using rule 75 (variable1 -> QUESTION ID .)
    LT              reduce using rule 75 (variable1 -> QUESTION ID .)
    GT              reduce using rule 75 (variable1 -> QUESTION ID .)
    COMP            reduce using rule 75 (variable1 -> QUESTION ID .)
    NOTEQ           reduce using rule 75 (variable1 -> QUESTION ID .)
    AND             reduce using rule 75 (variable1 -> QUESTION ID .)
    OR              reduce using rule 75 (variable1 -> QUESTION ID .)
    SEMICOLON       reduce using rule 75 (variable1 -> QUESTION ID .)
    RPAR            reduce using rule 75 (variable1 -> QUESTION ID .)
    COMMA           reduce using rule 75 (variable1 -> QUESTION ID .)
    RSBRAC          reduce using rule 75 (variable1 -> QUESTION ID .)
    TO              reduce using rule 75 (variable1 -> QUESTION ID .)


state 167

    (67) condicion -> IF LPAR expresion . RPAR gotoF bloque condicion1 fill

    RPAR            shift and go to state 215


state 168

    (87) llamada_void -> validar_id llamada1 LPAR . llamada2 RPAR
    (91) llamada2 -> . expresion cuad_param llamada3
    (92) llamada2 -> . e
    (119) expresion -> . a_exp exp1
    (163) e -> .
    (124) a_exp -> . b_exp exp2
    (128) b_exp -> . c_exp exp3
    (138) c_exp -> . d_exp exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    RPAR            reduce using rule 163 (e -> .)
    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    validar_id                     shift and go to state 162
    llamada2                       shift and go to state 216
    expresion                      shift and go to state 217
    e                              shift and go to state 218
    a_exp                          shift and go to state 148
    b_exp                          shift and go to state 149
    c_exp                          shift and go to state 150
    d_exp                          shift and go to state 151
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160

state 169

    (89) llamada1 -> DOT ID .

    LPAR            reduce using rule 89 (llamada1 -> DOT ID .)


state 170

    (96) leer -> READ LPAR variable . add_read generar_cuadr RPAR SEMICOLON
    (97) add_read -> . e
    (163) e -> .

    RPAR            reduce using rule 163 (e -> .)

    add_read                       shift and go to state 219
    e                              shift and go to state 220

state 171

    (98) escribir -> WRITE LPAR escribir1 . RPAR SEMICOLON

    RPAR            shift and go to state 221


state 172

    (99) escribir1 -> texto . add_print generar_cuadr escribir2
    (101) add_print -> . e
    (163) e -> .

    COMMA           reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)

    add_print                      shift and go to state 222
    e                              shift and go to state 223

state 173

    (100) escribir1 -> expresion . add_print generar_cuadr escribir2
    (101) add_print -> . e
    (163) e -> .

    COMMA           reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)

    add_print                      shift and go to state 224
    e                              shift and go to state 223

state 174

    (104) texto -> CTESTR .
    (156) var_cte -> CTESTR . ctestr
    (160) ctestr -> . e
    (163) e -> .

  ! reduce/reduce conflict for COMMA resolved using rule 104 (texto -> CTESTR .)
  ! reduce/reduce conflict for RPAR resolved using rule 104 (texto -> CTESTR .)
    COMMA           reduce using rule 104 (texto -> CTESTR .)
    RPAR            reduce using rule 104 (texto -> CTESTR .)
    MULT            reduce using rule 163 (e -> .)
    DIV             reduce using rule 163 (e -> .)
    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)

  ! COMMA           [ reduce using rule 163 (e -> .) ]
  ! RPAR            [ reduce using rule 163 (e -> .) ]

    ctestr                         shift and go to state 207
    e                              shift and go to state 208

state 175

    (105) ciclo_w -> WHILE push_while LPAR . expresion RPAR gotoF DO bloque return_while
    (119) expresion -> . a_exp exp1
    (124) a_exp -> . b_exp exp2
    (128) b_exp -> . c_exp exp3
    (138) c_exp -> . d_exp exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    expresion                      shift and go to state 225
    a_exp                          shift and go to state 148
    b_exp                          shift and go to state 149
    c_exp                          shift and go to state 150
    d_exp                          shift and go to state 151
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 176

    (108) ciclo_f -> FROM LPAR variable . asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (112) asign_aux -> . e
    (163) e -> .

    EQ              reduce using rule 163 (e -> .)

    asign_aux                      shift and go to state 226
    e                              shift and go to state 227

state 177

    (37) funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR insertar_tabla bloque_return reiniciar_func . funcion
    (37) funcion -> . funcion1 FUNCTION guardar_id LPAR funcion2 RPAR insertar_tabla bloque_return reiniciar_func funcion
    (38) funcion -> . e
    (42) funcion1 -> . tipo
    (43) funcion1 -> . VOID funcion_void
    (163) e -> .
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . STRING
    (52) tipo -> . BOOL

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    VOID            shift and go to state 19
    MAIN            reduce using rule 163 (e -> .)
    RCBRAC          reduce using rule 163 (e -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

  ! VOID            [ reduce using rule 163 (e -> .) ]
  ! INT             [ reduce using rule 163 (e -> .) ]
  ! FLOAT           [ reduce using rule 163 (e -> .) ]
  ! STRING          [ reduce using rule 163 (e -> .) ]
  ! BOOL            [ reduce using rule 163 (e -> .) ]

    funcion1                       shift and go to state 16
    funcion                        shift and go to state 228
    e                              shift and go to state 17
    tipo                           shift and go to state 18

state 178

    (41) reiniciar_func -> e .

    VOID            reduce using rule 41 (reiniciar_func -> e .)
    INT             reduce using rule 41 (reiniciar_func -> e .)
    FLOAT           reduce using rule 41 (reiniciar_func -> e .)
    STRING          reduce using rule 41 (reiniciar_func -> e .)
    BOOL            reduce using rule 41 (reiniciar_func -> e .)
    MAIN            reduce using rule 41 (reiniciar_func -> e .)
    RCBRAC          reduce using rule 41 (reiniciar_func -> e .)


state 179

    (54) bloque_return -> LCBRAC estatutos . regresar RCBRAC
    (55) bloque_return -> LCBRAC estatutos . regresar_void RCBRAC
    (117) regresar -> . RETURN expresion SEMICOLON
    (118) regresar_void -> . RETURN SEMICOLON

    RETURN          shift and go to state 231

    regresar                       shift and go to state 229
    regresar_void                  shift and go to state 230

state 180

    (47) funcion3 -> COMMA ID . COLON tipo funcion3

    COLON           shift and go to state 232


state 181

    (65) asignacion -> variable EQ expresion SEMICOLON . atomic_assign
    (66) atomic_assign -> . e
    (163) e -> .

    ID              reduce using rule 163 (e -> .)
    METHODS         reduce using rule 163 (e -> .)
    RCBRAC          reduce using rule 163 (e -> .)
    IF              reduce using rule 163 (e -> .)
    READ            reduce using rule 163 (e -> .)
    WRITE           reduce using rule 163 (e -> .)
    WHILE           reduce using rule 163 (e -> .)
    FROM            reduce using rule 163 (e -> .)
    RETURN          reduce using rule 163 (e -> .)

    atomic_assign                  shift and go to state 233
    e                              shift and go to state 234

state 182

    (119) expresion -> a_exp exp1 .

    SEMICOLON       reduce using rule 119 (expresion -> a_exp exp1 .)
    RPAR            reduce using rule 119 (expresion -> a_exp exp1 .)
    COMMA           reduce using rule 119 (expresion -> a_exp exp1 .)
    RSBRAC          reduce using rule 119 (expresion -> a_exp exp1 .)
    TO              reduce using rule 119 (expresion -> a_exp exp1 .)


state 183

    (120) exp1 -> OR . push_or a_exp pop_operador exp1
    (122) push_or -> . e
    (163) e -> .

    LPAR            reduce using rule 163 (e -> .)
    CTEI            reduce using rule 163 (e -> .)
    CTEF            reduce using rule 163 (e -> .)
    CTESTR          reduce using rule 163 (e -> .)
    CTEB            reduce using rule 163 (e -> .)
    ID              reduce using rule 163 (e -> .)

    push_or                        shift and go to state 235
    e                              shift and go to state 236

state 184

    (121) exp1 -> e .

    SEMICOLON       reduce using rule 121 (exp1 -> e .)
    RPAR            reduce using rule 121 (exp1 -> e .)
    COMMA           reduce using rule 121 (exp1 -> e .)
    RSBRAC          reduce using rule 121 (exp1 -> e .)
    TO              reduce using rule 121 (exp1 -> e .)


state 185

    (124) a_exp -> b_exp exp2 .

    OR              reduce using rule 124 (a_exp -> b_exp exp2 .)
    SEMICOLON       reduce using rule 124 (a_exp -> b_exp exp2 .)
    RPAR            reduce using rule 124 (a_exp -> b_exp exp2 .)
    COMMA           reduce using rule 124 (a_exp -> b_exp exp2 .)
    RSBRAC          reduce using rule 124 (a_exp -> b_exp exp2 .)
    TO              reduce using rule 124 (a_exp -> b_exp exp2 .)


state 186

    (125) exp2 -> AND . push_and b_exp pop_operador exp2
    (127) push_and -> . e
    (163) e -> .

    LPAR            reduce using rule 163 (e -> .)
    CTEI            reduce using rule 163 (e -> .)
    CTEF            reduce using rule 163 (e -> .)
    CTESTR          reduce using rule 163 (e -> .)
    CTEB            reduce using rule 163 (e -> .)
    ID              reduce using rule 163 (e -> .)

    push_and                       shift and go to state 237
    e                              shift and go to state 238

state 187

    (126) exp2 -> e .

    OR              reduce using rule 126 (exp2 -> e .)
    SEMICOLON       reduce using rule 126 (exp2 -> e .)
    RPAR            reduce using rule 126 (exp2 -> e .)
    COMMA           reduce using rule 126 (exp2 -> e .)
    RSBRAC          reduce using rule 126 (exp2 -> e .)
    TO              reduce using rule 126 (exp2 -> e .)


state 188

    (128) b_exp -> c_exp exp3 .

    AND             reduce using rule 128 (b_exp -> c_exp exp3 .)
    OR              reduce using rule 128 (b_exp -> c_exp exp3 .)
    SEMICOLON       reduce using rule 128 (b_exp -> c_exp exp3 .)
    RPAR            reduce using rule 128 (b_exp -> c_exp exp3 .)
    COMMA           reduce using rule 128 (b_exp -> c_exp exp3 .)
    RSBRAC          reduce using rule 128 (b_exp -> c_exp exp3 .)
    TO              reduce using rule 128 (b_exp -> c_exp exp3 .)


state 189

    (129) exp3 -> LT . push_lt c_exp pop_operador exp3
    (134) push_lt -> . e
    (163) e -> .

    LPAR            reduce using rule 163 (e -> .)
    CTEI            reduce using rule 163 (e -> .)
    CTEF            reduce using rule 163 (e -> .)
    CTESTR          reduce using rule 163 (e -> .)
    CTEB            reduce using rule 163 (e -> .)
    ID              reduce using rule 163 (e -> .)

    push_lt                        shift and go to state 239
    e                              shift and go to state 240

state 190

    (130) exp3 -> GT . push_gt c_exp pop_operador exp3
    (135) push_gt -> . e
    (163) e -> .

    LPAR            reduce using rule 163 (e -> .)
    CTEI            reduce using rule 163 (e -> .)
    CTEF            reduce using rule 163 (e -> .)
    CTESTR          reduce using rule 163 (e -> .)
    CTEB            reduce using rule 163 (e -> .)
    ID              reduce using rule 163 (e -> .)

    push_gt                        shift and go to state 241
    e                              shift and go to state 242

state 191

    (131) exp3 -> COMP . push_comp c_exp pop_operador exp3
    (136) push_comp -> . e
    (163) e -> .

    LPAR            reduce using rule 163 (e -> .)
    CTEI            reduce using rule 163 (e -> .)
    CTEF            reduce using rule 163 (e -> .)
    CTESTR          reduce using rule 163 (e -> .)
    CTEB            reduce using rule 163 (e -> .)
    ID              reduce using rule 163 (e -> .)

    push_comp                      shift and go to state 243
    e                              shift and go to state 244

state 192

    (132) exp3 -> NOTEQ . push_noteq c_exp pop_operador exp3
    (137) push_noteq -> . e
    (163) e -> .

    LPAR            reduce using rule 163 (e -> .)
    CTEI            reduce using rule 163 (e -> .)
    CTEF            reduce using rule 163 (e -> .)
    CTESTR          reduce using rule 163 (e -> .)
    CTEB            reduce using rule 163 (e -> .)
    ID              reduce using rule 163 (e -> .)

    push_noteq                     shift and go to state 245
    e                              shift and go to state 246

state 193

    (133) exp3 -> e .

    AND             reduce using rule 133 (exp3 -> e .)
    OR              reduce using rule 133 (exp3 -> e .)
    SEMICOLON       reduce using rule 133 (exp3 -> e .)
    RPAR            reduce using rule 133 (exp3 -> e .)
    COMMA           reduce using rule 133 (exp3 -> e .)
    RSBRAC          reduce using rule 133 (exp3 -> e .)
    TO              reduce using rule 133 (exp3 -> e .)


state 194

    (138) c_exp -> d_exp exp4 .

    LT              reduce using rule 138 (c_exp -> d_exp exp4 .)
    GT              reduce using rule 138 (c_exp -> d_exp exp4 .)
    COMP            reduce using rule 138 (c_exp -> d_exp exp4 .)
    NOTEQ           reduce using rule 138 (c_exp -> d_exp exp4 .)
    AND             reduce using rule 138 (c_exp -> d_exp exp4 .)
    OR              reduce using rule 138 (c_exp -> d_exp exp4 .)
    SEMICOLON       reduce using rule 138 (c_exp -> d_exp exp4 .)
    RPAR            reduce using rule 138 (c_exp -> d_exp exp4 .)
    COMMA           reduce using rule 138 (c_exp -> d_exp exp4 .)
    RSBRAC          reduce using rule 138 (c_exp -> d_exp exp4 .)
    TO              reduce using rule 138 (c_exp -> d_exp exp4 .)


state 195

    (139) exp4 -> PLUS . push_plus d_exp pop_operador exp4
    (142) push_plus -> . e
    (163) e -> .

    LPAR            reduce using rule 163 (e -> .)
    CTEI            reduce using rule 163 (e -> .)
    CTEF            reduce using rule 163 (e -> .)
    CTESTR          reduce using rule 163 (e -> .)
    CTEB            reduce using rule 163 (e -> .)
    ID              reduce using rule 163 (e -> .)

    push_plus                      shift and go to state 247
    e                              shift and go to state 248

state 196

    (140) exp4 -> MINUS . push_minus d_exp pop_operador exp4
    (143) push_minus -> . e
    (163) e -> .

    LPAR            reduce using rule 163 (e -> .)
    CTEI            reduce using rule 163 (e -> .)
    CTEF            reduce using rule 163 (e -> .)
    CTESTR          reduce using rule 163 (e -> .)
    CTEB            reduce using rule 163 (e -> .)
    ID              reduce using rule 163 (e -> .)

    push_minus                     shift and go to state 249
    e                              shift and go to state 250

state 197

    (141) exp4 -> e .

    LT              reduce using rule 141 (exp4 -> e .)
    GT              reduce using rule 141 (exp4 -> e .)
    COMP            reduce using rule 141 (exp4 -> e .)
    NOTEQ           reduce using rule 141 (exp4 -> e .)
    AND             reduce using rule 141 (exp4 -> e .)
    OR              reduce using rule 141 (exp4 -> e .)
    SEMICOLON       reduce using rule 141 (exp4 -> e .)
    RPAR            reduce using rule 141 (exp4 -> e .)
    COMMA           reduce using rule 141 (exp4 -> e .)
    RSBRAC          reduce using rule 141 (exp4 -> e .)
    TO              reduce using rule 141 (exp4 -> e .)


state 198

    (144) d_exp -> e_exp exp5 .

    PLUS            reduce using rule 144 (d_exp -> e_exp exp5 .)
    MINUS           reduce using rule 144 (d_exp -> e_exp exp5 .)
    LT              reduce using rule 144 (d_exp -> e_exp exp5 .)
    GT              reduce using rule 144 (d_exp -> e_exp exp5 .)
    COMP            reduce using rule 144 (d_exp -> e_exp exp5 .)
    NOTEQ           reduce using rule 144 (d_exp -> e_exp exp5 .)
    AND             reduce using rule 144 (d_exp -> e_exp exp5 .)
    OR              reduce using rule 144 (d_exp -> e_exp exp5 .)
    SEMICOLON       reduce using rule 144 (d_exp -> e_exp exp5 .)
    RPAR            reduce using rule 144 (d_exp -> e_exp exp5 .)
    COMMA           reduce using rule 144 (d_exp -> e_exp exp5 .)
    RSBRAC          reduce using rule 144 (d_exp -> e_exp exp5 .)
    TO              reduce using rule 144 (d_exp -> e_exp exp5 .)


state 199

    (145) exp5 -> MULT . push_mult e_exp pop_operador exp5
    (148) push_mult -> . e
    (163) e -> .

    LPAR            reduce using rule 163 (e -> .)
    CTEI            reduce using rule 163 (e -> .)
    CTEF            reduce using rule 163 (e -> .)
    CTESTR          reduce using rule 163 (e -> .)
    CTEB            reduce using rule 163 (e -> .)
    ID              reduce using rule 163 (e -> .)

    push_mult                      shift and go to state 251
    e                              shift and go to state 252

state 200

    (146) exp5 -> DIV . push_div e_exp pop_operador exp5
    (149) push_div -> . e
    (163) e -> .

    LPAR            reduce using rule 163 (e -> .)
    CTEI            reduce using rule 163 (e -> .)
    CTEF            reduce using rule 163 (e -> .)
    CTESTR          reduce using rule 163 (e -> .)
    CTEB            reduce using rule 163 (e -> .)
    ID              reduce using rule 163 (e -> .)

    push_div                       shift and go to state 253
    e                              shift and go to state 254

state 201

    (147) exp5 -> e .

    PLUS            reduce using rule 147 (exp5 -> e .)
    MINUS           reduce using rule 147 (exp5 -> e .)
    LT              reduce using rule 147 (exp5 -> e .)
    GT              reduce using rule 147 (exp5 -> e .)
    COMP            reduce using rule 147 (exp5 -> e .)
    NOTEQ           reduce using rule 147 (exp5 -> e .)
    AND             reduce using rule 147 (exp5 -> e .)
    OR              reduce using rule 147 (exp5 -> e .)
    SEMICOLON       reduce using rule 147 (exp5 -> e .)
    RPAR            reduce using rule 147 (exp5 -> e .)
    COMMA           reduce using rule 147 (exp5 -> e .)
    RSBRAC          reduce using rule 147 (exp5 -> e .)
    TO              reduce using rule 147 (exp5 -> e .)


state 202

    (150) e_exp -> LPAR expresion . RPAR

    RPAR            shift and go to state 255


state 203

    (154) var_cte -> CTEI ctei .

    MULT            reduce using rule 154 (var_cte -> CTEI ctei .)
    DIV             reduce using rule 154 (var_cte -> CTEI ctei .)
    PLUS            reduce using rule 154 (var_cte -> CTEI ctei .)
    MINUS           reduce using rule 154 (var_cte -> CTEI ctei .)
    LT              reduce using rule 154 (var_cte -> CTEI ctei .)
    GT              reduce using rule 154 (var_cte -> CTEI ctei .)
    COMP            reduce using rule 154 (var_cte -> CTEI ctei .)
    NOTEQ           reduce using rule 154 (var_cte -> CTEI ctei .)
    AND             reduce using rule 154 (var_cte -> CTEI ctei .)
    OR              reduce using rule 154 (var_cte -> CTEI ctei .)
    SEMICOLON       reduce using rule 154 (var_cte -> CTEI ctei .)
    RPAR            reduce using rule 154 (var_cte -> CTEI ctei .)
    COMMA           reduce using rule 154 (var_cte -> CTEI ctei .)
    RSBRAC          reduce using rule 154 (var_cte -> CTEI ctei .)
    TO              reduce using rule 154 (var_cte -> CTEI ctei .)


state 204

    (158) ctei -> e .

    MULT            reduce using rule 158 (ctei -> e .)
    DIV             reduce using rule 158 (ctei -> e .)
    PLUS            reduce using rule 158 (ctei -> e .)
    MINUS           reduce using rule 158 (ctei -> e .)
    LT              reduce using rule 158 (ctei -> e .)
    GT              reduce using rule 158 (ctei -> e .)
    COMP            reduce using rule 158 (ctei -> e .)
    NOTEQ           reduce using rule 158 (ctei -> e .)
    AND             reduce using rule 158 (ctei -> e .)
    OR              reduce using rule 158 (ctei -> e .)
    SEMICOLON       reduce using rule 158 (ctei -> e .)
    RPAR            reduce using rule 158 (ctei -> e .)
    COMMA           reduce using rule 158 (ctei -> e .)
    RSBRAC          reduce using rule 158 (ctei -> e .)
    TO              reduce using rule 158 (ctei -> e .)


state 205

    (155) var_cte -> CTEF ctef .

    MULT            reduce using rule 155 (var_cte -> CTEF ctef .)
    DIV             reduce using rule 155 (var_cte -> CTEF ctef .)
    PLUS            reduce using rule 155 (var_cte -> CTEF ctef .)
    MINUS           reduce using rule 155 (var_cte -> CTEF ctef .)
    LT              reduce using rule 155 (var_cte -> CTEF ctef .)
    GT              reduce using rule 155 (var_cte -> CTEF ctef .)
    COMP            reduce using rule 155 (var_cte -> CTEF ctef .)
    NOTEQ           reduce using rule 155 (var_cte -> CTEF ctef .)
    AND             reduce using rule 155 (var_cte -> CTEF ctef .)
    OR              reduce using rule 155 (var_cte -> CTEF ctef .)
    SEMICOLON       reduce using rule 155 (var_cte -> CTEF ctef .)
    RPAR            reduce using rule 155 (var_cte -> CTEF ctef .)
    COMMA           reduce using rule 155 (var_cte -> CTEF ctef .)
    RSBRAC          reduce using rule 155 (var_cte -> CTEF ctef .)
    TO              reduce using rule 155 (var_cte -> CTEF ctef .)


state 206

    (159) ctef -> e .

    MULT            reduce using rule 159 (ctef -> e .)
    DIV             reduce using rule 159 (ctef -> e .)
    PLUS            reduce using rule 159 (ctef -> e .)
    MINUS           reduce using rule 159 (ctef -> e .)
    LT              reduce using rule 159 (ctef -> e .)
    GT              reduce using rule 159 (ctef -> e .)
    COMP            reduce using rule 159 (ctef -> e .)
    NOTEQ           reduce using rule 159 (ctef -> e .)
    AND             reduce using rule 159 (ctef -> e .)
    OR              reduce using rule 159 (ctef -> e .)
    SEMICOLON       reduce using rule 159 (ctef -> e .)
    RPAR            reduce using rule 159 (ctef -> e .)
    COMMA           reduce using rule 159 (ctef -> e .)
    RSBRAC          reduce using rule 159 (ctef -> e .)
    TO              reduce using rule 159 (ctef -> e .)


state 207

    (156) var_cte -> CTESTR ctestr .

    MULT            reduce using rule 156 (var_cte -> CTESTR ctestr .)
    DIV             reduce using rule 156 (var_cte -> CTESTR ctestr .)
    PLUS            reduce using rule 156 (var_cte -> CTESTR ctestr .)
    MINUS           reduce using rule 156 (var_cte -> CTESTR ctestr .)
    LT              reduce using rule 156 (var_cte -> CTESTR ctestr .)
    GT              reduce using rule 156 (var_cte -> CTESTR ctestr .)
    COMP            reduce using rule 156 (var_cte -> CTESTR ctestr .)
    NOTEQ           reduce using rule 156 (var_cte -> CTESTR ctestr .)
    AND             reduce using rule 156 (var_cte -> CTESTR ctestr .)
    OR              reduce using rule 156 (var_cte -> CTESTR ctestr .)
    SEMICOLON       reduce using rule 156 (var_cte -> CTESTR ctestr .)
    RPAR            reduce using rule 156 (var_cte -> CTESTR ctestr .)
    COMMA           reduce using rule 156 (var_cte -> CTESTR ctestr .)
    RSBRAC          reduce using rule 156 (var_cte -> CTESTR ctestr .)
    TO              reduce using rule 156 (var_cte -> CTESTR ctestr .)


state 208

    (160) ctestr -> e .

    MULT            reduce using rule 160 (ctestr -> e .)
    DIV             reduce using rule 160 (ctestr -> e .)
    PLUS            reduce using rule 160 (ctestr -> e .)
    MINUS           reduce using rule 160 (ctestr -> e .)
    LT              reduce using rule 160 (ctestr -> e .)
    GT              reduce using rule 160 (ctestr -> e .)
    COMP            reduce using rule 160 (ctestr -> e .)
    NOTEQ           reduce using rule 160 (ctestr -> e .)
    AND             reduce using rule 160 (ctestr -> e .)
    OR              reduce using rule 160 (ctestr -> e .)
    SEMICOLON       reduce using rule 160 (ctestr -> e .)
    RPAR            reduce using rule 160 (ctestr -> e .)
    RSBRAC          reduce using rule 160 (ctestr -> e .)
    COMMA           reduce using rule 160 (ctestr -> e .)
    TO              reduce using rule 160 (ctestr -> e .)


state 209

    (157) var_cte -> CTEB cteb .

    MULT            reduce using rule 157 (var_cte -> CTEB cteb .)
    DIV             reduce using rule 157 (var_cte -> CTEB cteb .)
    PLUS            reduce using rule 157 (var_cte -> CTEB cteb .)
    MINUS           reduce using rule 157 (var_cte -> CTEB cteb .)
    LT              reduce using rule 157 (var_cte -> CTEB cteb .)
    GT              reduce using rule 157 (var_cte -> CTEB cteb .)
    COMP            reduce using rule 157 (var_cte -> CTEB cteb .)
    NOTEQ           reduce using rule 157 (var_cte -> CTEB cteb .)
    AND             reduce using rule 157 (var_cte -> CTEB cteb .)
    OR              reduce using rule 157 (var_cte -> CTEB cteb .)
    SEMICOLON       reduce using rule 157 (var_cte -> CTEB cteb .)
    RPAR            reduce using rule 157 (var_cte -> CTEB cteb .)
    COMMA           reduce using rule 157 (var_cte -> CTEB cteb .)
    RSBRAC          reduce using rule 157 (var_cte -> CTEB cteb .)
    TO              reduce using rule 157 (var_cte -> CTEB cteb .)


state 210

    (161) cteb -> e .

    MULT            reduce using rule 161 (cteb -> e .)
    DIV             reduce using rule 161 (cteb -> e .)
    PLUS            reduce using rule 161 (cteb -> e .)
    MINUS           reduce using rule 161 (cteb -> e .)
    LT              reduce using rule 161 (cteb -> e .)
    GT              reduce using rule 161 (cteb -> e .)
    COMP            reduce using rule 161 (cteb -> e .)
    NOTEQ           reduce using rule 161 (cteb -> e .)
    AND             reduce using rule 161 (cteb -> e .)
    OR              reduce using rule 161 (cteb -> e .)
    SEMICOLON       reduce using rule 161 (cteb -> e .)
    RPAR            reduce using rule 161 (cteb -> e .)
    COMMA           reduce using rule 161 (cteb -> e .)
    RSBRAC          reduce using rule 161 (cteb -> e .)
    TO              reduce using rule 161 (cteb -> e .)


state 211

    (84) llamada -> sub_llamada parche . atomic_assign
    (66) atomic_assign -> . e
    (163) e -> .

    MULT            reduce using rule 163 (e -> .)
    DIV             reduce using rule 163 (e -> .)
    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    atomic_assign                  shift and go to state 256
    e                              shift and go to state 234

state 212

    (86) parche -> e .

    MULT            reduce using rule 86 (parche -> e .)
    DIV             reduce using rule 86 (parche -> e .)
    PLUS            reduce using rule 86 (parche -> e .)
    MINUS           reduce using rule 86 (parche -> e .)
    LT              reduce using rule 86 (parche -> e .)
    GT              reduce using rule 86 (parche -> e .)
    COMP            reduce using rule 86 (parche -> e .)
    NOTEQ           reduce using rule 86 (parche -> e .)
    AND             reduce using rule 86 (parche -> e .)
    OR              reduce using rule 86 (parche -> e .)
    SEMICOLON       reduce using rule 86 (parche -> e .)
    RPAR            reduce using rule 86 (parche -> e .)
    COMMA           reduce using rule 86 (parche -> e .)
    RSBRAC          reduce using rule 86 (parche -> e .)
    TO              reduce using rule 86 (parche -> e .)


state 213

    (85) sub_llamada -> validar_id llamada1 . LPAR llamada2 RPAR

    LPAR            shift and go to state 257


state 214

    (77) variable2 -> LSBRAC expresion . verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador
    (80) verifica_d1 -> . e
    (163) e -> .

    RSBRAC          reduce using rule 163 (e -> .)

    verifica_d1                    shift and go to state 258
    e                              shift and go to state 259

state 215

    (67) condicion -> IF LPAR expresion RPAR . gotoF bloque condicion1 fill
    (68) gotoF -> . e
    (163) e -> .

    LCBRAC          reduce using rule 163 (e -> .)

    gotoF                          shift and go to state 260
    e                              shift and go to state 261

state 216

    (87) llamada_void -> validar_id llamada1 LPAR llamada2 . RPAR

    RPAR            shift and go to state 262


state 217

    (91) llamada2 -> expresion . cuad_param llamada3
    (93) cuad_param -> . e
    (163) e -> .

    COMMA           reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)

    cuad_param                     shift and go to state 263
    e                              shift and go to state 264

state 218

    (92) llamada2 -> e .

    RPAR            reduce using rule 92 (llamada2 -> e .)


state 219

    (96) leer -> READ LPAR variable add_read . generar_cuadr RPAR SEMICOLON
    (162) generar_cuadr -> . e
    (163) e -> .

    RPAR            reduce using rule 163 (e -> .)

    generar_cuadr                  shift and go to state 265
    e                              shift and go to state 266

state 220

    (97) add_read -> e .

    RPAR            reduce using rule 97 (add_read -> e .)


state 221

    (98) escribir -> WRITE LPAR escribir1 RPAR . SEMICOLON

    SEMICOLON       shift and go to state 267


state 222

    (99) escribir1 -> texto add_print . generar_cuadr escribir2
    (162) generar_cuadr -> . e
    (163) e -> .

    COMMA           reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)

    generar_cuadr                  shift and go to state 268
    e                              shift and go to state 266

state 223

    (101) add_print -> e .

    COMMA           reduce using rule 101 (add_print -> e .)
    RPAR            reduce using rule 101 (add_print -> e .)


state 224

    (100) escribir1 -> expresion add_print . generar_cuadr escribir2
    (162) generar_cuadr -> . e
    (163) e -> .

    COMMA           reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)

    generar_cuadr                  shift and go to state 269
    e                              shift and go to state 266

state 225

    (105) ciclo_w -> WHILE push_while LPAR expresion . RPAR gotoF DO bloque return_while

    RPAR            shift and go to state 270


state 226

    (108) ciclo_f -> FROM LPAR variable asign_aux . EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go

    EQ              shift and go to state 271


state 227

    (112) asign_aux -> e .

    EQ              reduce using rule 112 (asign_aux -> e .)


state 228

    (37) funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR insertar_tabla bloque_return reiniciar_func funcion .

    MAIN            reduce using rule 37 (funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR insertar_tabla bloque_return reiniciar_func funcion .)
    VOID            reduce using rule 37 (funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR insertar_tabla bloque_return reiniciar_func funcion .)
    INT             reduce using rule 37 (funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR insertar_tabla bloque_return reiniciar_func funcion .)
    FLOAT           reduce using rule 37 (funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR insertar_tabla bloque_return reiniciar_func funcion .)
    STRING          reduce using rule 37 (funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR insertar_tabla bloque_return reiniciar_func funcion .)
    BOOL            reduce using rule 37 (funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR insertar_tabla bloque_return reiniciar_func funcion .)
    RCBRAC          reduce using rule 37 (funcion -> funcion1 FUNCTION guardar_id LPAR funcion2 RPAR insertar_tabla bloque_return reiniciar_func funcion .)


state 229

    (54) bloque_return -> LCBRAC estatutos regresar . RCBRAC

    RCBRAC          shift and go to state 272


state 230

    (55) bloque_return -> LCBRAC estatutos regresar_void . RCBRAC

    RCBRAC          shift and go to state 273


state 231

    (117) regresar -> RETURN . expresion SEMICOLON
    (118) regresar_void -> RETURN . SEMICOLON
    (119) expresion -> . a_exp exp1
    (124) a_exp -> . b_exp exp2
    (128) b_exp -> . c_exp exp3
    (138) c_exp -> . d_exp exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    SEMICOLON       shift and go to state 275
    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    expresion                      shift and go to state 274
    a_exp                          shift and go to state 148
    b_exp                          shift and go to state 149
    c_exp                          shift and go to state 150
    d_exp                          shift and go to state 151
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 232

    (47) funcion3 -> COMMA ID COLON . tipo funcion3
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . STRING
    (52) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

    tipo                           shift and go to state 276

state 233

    (65) asignacion -> variable EQ expresion SEMICOLON atomic_assign .

    ID              reduce using rule 65 (asignacion -> variable EQ expresion SEMICOLON atomic_assign .)
    METHODS         reduce using rule 65 (asignacion -> variable EQ expresion SEMICOLON atomic_assign .)
    RCBRAC          reduce using rule 65 (asignacion -> variable EQ expresion SEMICOLON atomic_assign .)
    IF              reduce using rule 65 (asignacion -> variable EQ expresion SEMICOLON atomic_assign .)
    READ            reduce using rule 65 (asignacion -> variable EQ expresion SEMICOLON atomic_assign .)
    WRITE           reduce using rule 65 (asignacion -> variable EQ expresion SEMICOLON atomic_assign .)
    WHILE           reduce using rule 65 (asignacion -> variable EQ expresion SEMICOLON atomic_assign .)
    FROM            reduce using rule 65 (asignacion -> variable EQ expresion SEMICOLON atomic_assign .)
    RETURN          reduce using rule 65 (asignacion -> variable EQ expresion SEMICOLON atomic_assign .)


state 234

    (66) atomic_assign -> e .

    ID              reduce using rule 66 (atomic_assign -> e .)
    METHODS         reduce using rule 66 (atomic_assign -> e .)
    RCBRAC          reduce using rule 66 (atomic_assign -> e .)
    IF              reduce using rule 66 (atomic_assign -> e .)
    READ            reduce using rule 66 (atomic_assign -> e .)
    WRITE           reduce using rule 66 (atomic_assign -> e .)
    WHILE           reduce using rule 66 (atomic_assign -> e .)
    FROM            reduce using rule 66 (atomic_assign -> e .)
    RETURN          reduce using rule 66 (atomic_assign -> e .)
    MULT            reduce using rule 66 (atomic_assign -> e .)
    DIV             reduce using rule 66 (atomic_assign -> e .)
    PLUS            reduce using rule 66 (atomic_assign -> e .)
    MINUS           reduce using rule 66 (atomic_assign -> e .)
    LT              reduce using rule 66 (atomic_assign -> e .)
    GT              reduce using rule 66 (atomic_assign -> e .)
    COMP            reduce using rule 66 (atomic_assign -> e .)
    NOTEQ           reduce using rule 66 (atomic_assign -> e .)
    AND             reduce using rule 66 (atomic_assign -> e .)
    OR              reduce using rule 66 (atomic_assign -> e .)
    SEMICOLON       reduce using rule 66 (atomic_assign -> e .)
    RPAR            reduce using rule 66 (atomic_assign -> e .)
    COMMA           reduce using rule 66 (atomic_assign -> e .)
    RSBRAC          reduce using rule 66 (atomic_assign -> e .)
    TO              reduce using rule 66 (atomic_assign -> e .)


state 235

    (120) exp1 -> OR push_or . a_exp pop_operador exp1
    (124) a_exp -> . b_exp exp2
    (128) b_exp -> . c_exp exp3
    (138) c_exp -> . d_exp exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    a_exp                          shift and go to state 277
    b_exp                          shift and go to state 149
    c_exp                          shift and go to state 150
    d_exp                          shift and go to state 151
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 236

    (122) push_or -> e .

    LPAR            reduce using rule 122 (push_or -> e .)
    CTEI            reduce using rule 122 (push_or -> e .)
    CTEF            reduce using rule 122 (push_or -> e .)
    CTESTR          reduce using rule 122 (push_or -> e .)
    CTEB            reduce using rule 122 (push_or -> e .)
    ID              reduce using rule 122 (push_or -> e .)


state 237

    (125) exp2 -> AND push_and . b_exp pop_operador exp2
    (128) b_exp -> . c_exp exp3
    (138) c_exp -> . d_exp exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    b_exp                          shift and go to state 278
    c_exp                          shift and go to state 150
    d_exp                          shift and go to state 151
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 238

    (127) push_and -> e .

    LPAR            reduce using rule 127 (push_and -> e .)
    CTEI            reduce using rule 127 (push_and -> e .)
    CTEF            reduce using rule 127 (push_and -> e .)
    CTESTR          reduce using rule 127 (push_and -> e .)
    CTEB            reduce using rule 127 (push_and -> e .)
    ID              reduce using rule 127 (push_and -> e .)


state 239

    (129) exp3 -> LT push_lt . c_exp pop_operador exp3
    (138) c_exp -> . d_exp exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    c_exp                          shift and go to state 279
    d_exp                          shift and go to state 151
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 240

    (134) push_lt -> e .

    LPAR            reduce using rule 134 (push_lt -> e .)
    CTEI            reduce using rule 134 (push_lt -> e .)
    CTEF            reduce using rule 134 (push_lt -> e .)
    CTESTR          reduce using rule 134 (push_lt -> e .)
    CTEB            reduce using rule 134 (push_lt -> e .)
    ID              reduce using rule 134 (push_lt -> e .)
    RPAR            reduce using rule 134 (push_lt -> e .)


state 241

    (130) exp3 -> GT push_gt . c_exp pop_operador exp3
    (138) c_exp -> . d_exp exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    c_exp                          shift and go to state 280
    d_exp                          shift and go to state 151
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 242

    (135) push_gt -> e .

    LPAR            reduce using rule 135 (push_gt -> e .)
    CTEI            reduce using rule 135 (push_gt -> e .)
    CTEF            reduce using rule 135 (push_gt -> e .)
    CTESTR          reduce using rule 135 (push_gt -> e .)
    CTEB            reduce using rule 135 (push_gt -> e .)
    ID              reduce using rule 135 (push_gt -> e .)


state 243

    (131) exp3 -> COMP push_comp . c_exp pop_operador exp3
    (138) c_exp -> . d_exp exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    c_exp                          shift and go to state 281
    d_exp                          shift and go to state 151
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 244

    (136) push_comp -> e .

    LPAR            reduce using rule 136 (push_comp -> e .)
    CTEI            reduce using rule 136 (push_comp -> e .)
    CTEF            reduce using rule 136 (push_comp -> e .)
    CTESTR          reduce using rule 136 (push_comp -> e .)
    CTEB            reduce using rule 136 (push_comp -> e .)
    ID              reduce using rule 136 (push_comp -> e .)


state 245

    (132) exp3 -> NOTEQ push_noteq . c_exp pop_operador exp3
    (138) c_exp -> . d_exp exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    c_exp                          shift and go to state 282
    d_exp                          shift and go to state 151
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 246

    (137) push_noteq -> e .

    LPAR            reduce using rule 137 (push_noteq -> e .)
    CTEI            reduce using rule 137 (push_noteq -> e .)
    CTEF            reduce using rule 137 (push_noteq -> e .)
    CTESTR          reduce using rule 137 (push_noteq -> e .)
    CTEB            reduce using rule 137 (push_noteq -> e .)
    ID              reduce using rule 137 (push_noteq -> e .)


state 247

    (139) exp4 -> PLUS push_plus . d_exp pop_operador exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    d_exp                          shift and go to state 283
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 248

    (142) push_plus -> e .

    LPAR            reduce using rule 142 (push_plus -> e .)
    CTEI            reduce using rule 142 (push_plus -> e .)
    CTEF            reduce using rule 142 (push_plus -> e .)
    CTESTR          reduce using rule 142 (push_plus -> e .)
    CTEB            reduce using rule 142 (push_plus -> e .)
    ID              reduce using rule 142 (push_plus -> e .)
    EQ              reduce using rule 142 (push_plus -> e .)
    MULT            reduce using rule 142 (push_plus -> e .)
    DIV             reduce using rule 142 (push_plus -> e .)
    PLUS            reduce using rule 142 (push_plus -> e .)
    MINUS           reduce using rule 142 (push_plus -> e .)
    LT              reduce using rule 142 (push_plus -> e .)
    GT              reduce using rule 142 (push_plus -> e .)
    COMP            reduce using rule 142 (push_plus -> e .)
    NOTEQ           reduce using rule 142 (push_plus -> e .)
    AND             reduce using rule 142 (push_plus -> e .)
    OR              reduce using rule 142 (push_plus -> e .)
    SEMICOLON       reduce using rule 142 (push_plus -> e .)
    RPAR            reduce using rule 142 (push_plus -> e .)
    COMMA           reduce using rule 142 (push_plus -> e .)
    RSBRAC          reduce using rule 142 (push_plus -> e .)
    TO              reduce using rule 142 (push_plus -> e .)
    IF              reduce using rule 142 (push_plus -> e .)
    READ            reduce using rule 142 (push_plus -> e .)
    WRITE           reduce using rule 142 (push_plus -> e .)
    WHILE           reduce using rule 142 (push_plus -> e .)
    FROM            reduce using rule 142 (push_plus -> e .)
    RCBRAC          reduce using rule 142 (push_plus -> e .)
    RETURN          reduce using rule 142 (push_plus -> e .)


state 249

    (140) exp4 -> MINUS push_minus . d_exp pop_operador exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    d_exp                          shift and go to state 284
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 250

    (143) push_minus -> e .

    LPAR            reduce using rule 143 (push_minus -> e .)
    CTEI            reduce using rule 143 (push_minus -> e .)
    CTEF            reduce using rule 143 (push_minus -> e .)
    CTESTR          reduce using rule 143 (push_minus -> e .)
    CTEB            reduce using rule 143 (push_minus -> e .)
    ID              reduce using rule 143 (push_minus -> e .)


state 251

    (145) exp5 -> MULT push_mult . e_exp pop_operador exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    e_exp                          shift and go to state 285
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 252

    (148) push_mult -> e .

    LPAR            reduce using rule 148 (push_mult -> e .)
    CTEI            reduce using rule 148 (push_mult -> e .)
    CTEF            reduce using rule 148 (push_mult -> e .)
    CTESTR          reduce using rule 148 (push_mult -> e .)
    CTEB            reduce using rule 148 (push_mult -> e .)
    ID              reduce using rule 148 (push_mult -> e .)
    RSBRAC          reduce using rule 148 (push_mult -> e .)


state 253

    (146) exp5 -> DIV push_div . e_exp pop_operador exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    e_exp                          shift and go to state 286
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 254

    (149) push_div -> e .

    LPAR            reduce using rule 149 (push_div -> e .)
    CTEI            reduce using rule 149 (push_div -> e .)
    CTEF            reduce using rule 149 (push_div -> e .)
    CTESTR          reduce using rule 149 (push_div -> e .)
    CTEB            reduce using rule 149 (push_div -> e .)
    ID              reduce using rule 149 (push_div -> e .)


state 255

    (150) e_exp -> LPAR expresion RPAR .

    MULT            reduce using rule 150 (e_exp -> LPAR expresion RPAR .)
    DIV             reduce using rule 150 (e_exp -> LPAR expresion RPAR .)
    PLUS            reduce using rule 150 (e_exp -> LPAR expresion RPAR .)
    MINUS           reduce using rule 150 (e_exp -> LPAR expresion RPAR .)
    LT              reduce using rule 150 (e_exp -> LPAR expresion RPAR .)
    GT              reduce using rule 150 (e_exp -> LPAR expresion RPAR .)
    COMP            reduce using rule 150 (e_exp -> LPAR expresion RPAR .)
    NOTEQ           reduce using rule 150 (e_exp -> LPAR expresion RPAR .)
    AND             reduce using rule 150 (e_exp -> LPAR expresion RPAR .)
    OR              reduce using rule 150 (e_exp -> LPAR expresion RPAR .)
    SEMICOLON       reduce using rule 150 (e_exp -> LPAR expresion RPAR .)
    RPAR            reduce using rule 150 (e_exp -> LPAR expresion RPAR .)
    COMMA           reduce using rule 150 (e_exp -> LPAR expresion RPAR .)
    RSBRAC          reduce using rule 150 (e_exp -> LPAR expresion RPAR .)
    TO              reduce using rule 150 (e_exp -> LPAR expresion RPAR .)


state 256

    (84) llamada -> sub_llamada parche atomic_assign .

    MULT            reduce using rule 84 (llamada -> sub_llamada parche atomic_assign .)
    DIV             reduce using rule 84 (llamada -> sub_llamada parche atomic_assign .)
    PLUS            reduce using rule 84 (llamada -> sub_llamada parche atomic_assign .)
    MINUS           reduce using rule 84 (llamada -> sub_llamada parche atomic_assign .)
    LT              reduce using rule 84 (llamada -> sub_llamada parche atomic_assign .)
    GT              reduce using rule 84 (llamada -> sub_llamada parche atomic_assign .)
    COMP            reduce using rule 84 (llamada -> sub_llamada parche atomic_assign .)
    NOTEQ           reduce using rule 84 (llamada -> sub_llamada parche atomic_assign .)
    AND             reduce using rule 84 (llamada -> sub_llamada parche atomic_assign .)
    OR              reduce using rule 84 (llamada -> sub_llamada parche atomic_assign .)
    SEMICOLON       reduce using rule 84 (llamada -> sub_llamada parche atomic_assign .)
    RPAR            reduce using rule 84 (llamada -> sub_llamada parche atomic_assign .)
    COMMA           reduce using rule 84 (llamada -> sub_llamada parche atomic_assign .)
    RSBRAC          reduce using rule 84 (llamada -> sub_llamada parche atomic_assign .)
    TO              reduce using rule 84 (llamada -> sub_llamada parche atomic_assign .)


state 257

    (85) sub_llamada -> validar_id llamada1 LPAR . llamada2 RPAR
    (91) llamada2 -> . expresion cuad_param llamada3
    (92) llamada2 -> . e
    (119) expresion -> . a_exp exp1
    (163) e -> .
    (124) a_exp -> . b_exp exp2
    (128) b_exp -> . c_exp exp3
    (138) c_exp -> . d_exp exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    RPAR            reduce using rule 163 (e -> .)
    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    validar_id                     shift and go to state 162
    llamada2                       shift and go to state 287
    expresion                      shift and go to state 217
    e                              shift and go to state 218
    a_exp                          shift and go to state 148
    b_exp                          shift and go to state 149
    c_exp                          shift and go to state 150
    d_exp                          shift and go to state 151
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160

state 258

    (77) variable2 -> LSBRAC expresion verifica_d1 . push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador
    (148) push_mult -> . e
    (163) e -> .

    RSBRAC          reduce using rule 163 (e -> .)

    push_mult                      shift and go to state 288
    e                              shift and go to state 252

state 259

    (80) verifica_d1 -> e .

    RSBRAC          reduce using rule 80 (verifica_d1 -> e .)


state 260

    (67) condicion -> IF LPAR expresion RPAR gotoF . bloque condicion1 fill
    (53) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 85

    bloque                         shift and go to state 289

state 261

    (68) gotoF -> e .

    LCBRAC          reduce using rule 68 (gotoF -> e .)
    DO              reduce using rule 68 (gotoF -> e .)
    RPAR            reduce using rule 68 (gotoF -> e .)


state 262

    (87) llamada_void -> validar_id llamada1 LPAR llamada2 RPAR .

    SEMICOLON       reduce using rule 87 (llamada_void -> validar_id llamada1 LPAR llamada2 RPAR .)


state 263

    (91) llamada2 -> expresion cuad_param . llamada3
    (94) llamada3 -> . COMMA expresion cuad_param llamada3
    (95) llamada3 -> . e
    (163) e -> .

    COMMA           shift and go to state 291
    RPAR            reduce using rule 163 (e -> .)

    llamada3                       shift and go to state 290
    e                              shift and go to state 292

state 264

    (93) cuad_param -> e .

    COMMA           reduce using rule 93 (cuad_param -> e .)
    RPAR            reduce using rule 93 (cuad_param -> e .)


state 265

    (96) leer -> READ LPAR variable add_read generar_cuadr . RPAR SEMICOLON

    RPAR            shift and go to state 293


state 266

    (162) generar_cuadr -> e .

    RPAR            reduce using rule 162 (generar_cuadr -> e .)
    COMMA           reduce using rule 162 (generar_cuadr -> e .)


state 267

    (98) escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .

    IF              reduce using rule 98 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    READ            reduce using rule 98 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    WRITE           reduce using rule 98 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    WHILE           reduce using rule 98 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    FROM            reduce using rule 98 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    ID              reduce using rule 98 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    RCBRAC          reduce using rule 98 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    RETURN          reduce using rule 98 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)


state 268

    (99) escribir1 -> texto add_print generar_cuadr . escribir2
    (102) escribir2 -> . COMMA escribir1
    (103) escribir2 -> . e
    (163) e -> .

    COMMA           shift and go to state 295
    RPAR            reduce using rule 163 (e -> .)

    escribir2                      shift and go to state 294
    e                              shift and go to state 296

state 269

    (100) escribir1 -> expresion add_print generar_cuadr . escribir2
    (102) escribir2 -> . COMMA escribir1
    (103) escribir2 -> . e
    (163) e -> .

    COMMA           shift and go to state 295
    RPAR            reduce using rule 163 (e -> .)

    escribir2                      shift and go to state 297
    e                              shift and go to state 296

state 270

    (105) ciclo_w -> WHILE push_while LPAR expresion RPAR . gotoF DO bloque return_while
    (68) gotoF -> . e
    (163) e -> .

    DO              reduce using rule 163 (e -> .)

    gotoF                          shift and go to state 298
    e                              shift and go to state 261

state 271

    (108) ciclo_f -> FROM LPAR variable asign_aux EQ . expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (119) expresion -> . a_exp exp1
    (124) a_exp -> . b_exp exp2
    (128) b_exp -> . c_exp exp3
    (138) c_exp -> . d_exp exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    variable                       shift and go to state 146
    expresion                      shift and go to state 299
    a_exp                          shift and go to state 148
    b_exp                          shift and go to state 149
    c_exp                          shift and go to state 150
    d_exp                          shift and go to state 151
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 272

    (54) bloque_return -> LCBRAC estatutos regresar RCBRAC .

    VOID            reduce using rule 54 (bloque_return -> LCBRAC estatutos regresar RCBRAC .)
    INT             reduce using rule 54 (bloque_return -> LCBRAC estatutos regresar RCBRAC .)
    FLOAT           reduce using rule 54 (bloque_return -> LCBRAC estatutos regresar RCBRAC .)
    STRING          reduce using rule 54 (bloque_return -> LCBRAC estatutos regresar RCBRAC .)
    BOOL            reduce using rule 54 (bloque_return -> LCBRAC estatutos regresar RCBRAC .)
    MAIN            reduce using rule 54 (bloque_return -> LCBRAC estatutos regresar RCBRAC .)
    RCBRAC          reduce using rule 54 (bloque_return -> LCBRAC estatutos regresar RCBRAC .)


state 273

    (55) bloque_return -> LCBRAC estatutos regresar_void RCBRAC .

    VOID            reduce using rule 55 (bloque_return -> LCBRAC estatutos regresar_void RCBRAC .)
    INT             reduce using rule 55 (bloque_return -> LCBRAC estatutos regresar_void RCBRAC .)
    FLOAT           reduce using rule 55 (bloque_return -> LCBRAC estatutos regresar_void RCBRAC .)
    STRING          reduce using rule 55 (bloque_return -> LCBRAC estatutos regresar_void RCBRAC .)
    BOOL            reduce using rule 55 (bloque_return -> LCBRAC estatutos regresar_void RCBRAC .)
    MAIN            reduce using rule 55 (bloque_return -> LCBRAC estatutos regresar_void RCBRAC .)
    RCBRAC          reduce using rule 55 (bloque_return -> LCBRAC estatutos regresar_void RCBRAC .)


state 274

    (117) regresar -> RETURN expresion . SEMICOLON

    SEMICOLON       shift and go to state 300


state 275

    (118) regresar_void -> RETURN SEMICOLON .

    RCBRAC          reduce using rule 118 (regresar_void -> RETURN SEMICOLON .)


state 276

    (47) funcion3 -> COMMA ID COLON tipo . funcion3
    (47) funcion3 -> . COMMA ID COLON tipo funcion3
    (48) funcion3 -> . e
    (163) e -> .

    COMMA           shift and go to state 144
    RPAR            reduce using rule 163 (e -> .)

    funcion3                       shift and go to state 301
    e                              shift and go to state 145

state 277

    (120) exp1 -> OR push_or a_exp . pop_operador exp1
    (123) pop_operador -> . e
    (163) e -> .

    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    pop_operador                   shift and go to state 302
    e                              shift and go to state 303

state 278

    (125) exp2 -> AND push_and b_exp . pop_operador exp2
    (123) pop_operador -> . e
    (163) e -> .

    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    pop_operador                   shift and go to state 304
    e                              shift and go to state 303

state 279

    (129) exp3 -> LT push_lt c_exp . pop_operador exp3
    (123) pop_operador -> . e
    (163) e -> .

    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    pop_operador                   shift and go to state 305
    e                              shift and go to state 303

state 280

    (130) exp3 -> GT push_gt c_exp . pop_operador exp3
    (123) pop_operador -> . e
    (163) e -> .

    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    pop_operador                   shift and go to state 306
    e                              shift and go to state 303

state 281

    (131) exp3 -> COMP push_comp c_exp . pop_operador exp3
    (123) pop_operador -> . e
    (163) e -> .

    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    pop_operador                   shift and go to state 307
    e                              shift and go to state 303

state 282

    (132) exp3 -> NOTEQ push_noteq c_exp . pop_operador exp3
    (123) pop_operador -> . e
    (163) e -> .

    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    pop_operador                   shift and go to state 308
    e                              shift and go to state 303

state 283

    (139) exp4 -> PLUS push_plus d_exp . pop_operador exp4
    (123) pop_operador -> . e
    (163) e -> .

    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    pop_operador                   shift and go to state 309
    e                              shift and go to state 303

state 284

    (140) exp4 -> MINUS push_minus d_exp . pop_operador exp4
    (123) pop_operador -> . e
    (163) e -> .

    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    pop_operador                   shift and go to state 310
    e                              shift and go to state 303

state 285

    (145) exp5 -> MULT push_mult e_exp . pop_operador exp5
    (123) pop_operador -> . e
    (163) e -> .

    MULT            reduce using rule 163 (e -> .)
    DIV             reduce using rule 163 (e -> .)
    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    pop_operador                   shift and go to state 311
    e                              shift and go to state 303

state 286

    (146) exp5 -> DIV push_div e_exp . pop_operador exp5
    (123) pop_operador -> . e
    (163) e -> .

    MULT            reduce using rule 163 (e -> .)
    DIV             reduce using rule 163 (e -> .)
    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    pop_operador                   shift and go to state 312
    e                              shift and go to state 303

state 287

    (85) sub_llamada -> validar_id llamada1 LPAR llamada2 . RPAR

    RPAR            shift and go to state 313


state 288

    (77) variable2 -> LSBRAC expresion verifica_d1 push_mult . pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador
    (123) pop_operador -> . e
    (163) e -> .

    RSBRAC          reduce using rule 163 (e -> .)

    pop_operador                   shift and go to state 314
    e                              shift and go to state 303

state 289

    (67) condicion -> IF LPAR expresion RPAR gotoF bloque . condicion1 fill
    (70) condicion1 -> . ELSE goto bloque
    (71) condicion1 -> . e
    (163) e -> .

    ELSE            shift and go to state 316
    IF              reduce using rule 163 (e -> .)
    READ            reduce using rule 163 (e -> .)
    WRITE           reduce using rule 163 (e -> .)
    WHILE           reduce using rule 163 (e -> .)
    FROM            reduce using rule 163 (e -> .)
    ID              reduce using rule 163 (e -> .)
    RCBRAC          reduce using rule 163 (e -> .)
    RETURN          reduce using rule 163 (e -> .)

    condicion1                     shift and go to state 315
    e                              shift and go to state 317

state 290

    (91) llamada2 -> expresion cuad_param llamada3 .

    RPAR            reduce using rule 91 (llamada2 -> expresion cuad_param llamada3 .)


state 291

    (94) llamada3 -> COMMA . expresion cuad_param llamada3
    (119) expresion -> . a_exp exp1
    (124) a_exp -> . b_exp exp2
    (128) b_exp -> . c_exp exp3
    (138) c_exp -> . d_exp exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    expresion                      shift and go to state 318
    a_exp                          shift and go to state 148
    b_exp                          shift and go to state 149
    c_exp                          shift and go to state 150
    d_exp                          shift and go to state 151
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 292

    (95) llamada3 -> e .

    RPAR            reduce using rule 95 (llamada3 -> e .)


state 293

    (96) leer -> READ LPAR variable add_read generar_cuadr RPAR . SEMICOLON

    SEMICOLON       shift and go to state 319


state 294

    (99) escribir1 -> texto add_print generar_cuadr escribir2 .

    RPAR            reduce using rule 99 (escribir1 -> texto add_print generar_cuadr escribir2 .)


state 295

    (102) escribir2 -> COMMA . escribir1
    (99) escribir1 -> . texto add_print generar_cuadr escribir2
    (100) escribir1 -> . expresion add_print generar_cuadr escribir2
    (104) texto -> . CTESTR
    (119) expresion -> . a_exp exp1
    (124) a_exp -> . b_exp exp2
    (128) b_exp -> . c_exp exp3
    (138) c_exp -> . d_exp exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    CTESTR          shift and go to state 174
    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    escribir1                      shift and go to state 320
    texto                          shift and go to state 172
    expresion                      shift and go to state 173
    a_exp                          shift and go to state 148
    b_exp                          shift and go to state 149
    c_exp                          shift and go to state 150
    d_exp                          shift and go to state 151
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 296

    (103) escribir2 -> e .

    RPAR            reduce using rule 103 (escribir2 -> e .)


state 297

    (100) escribir1 -> expresion add_print generar_cuadr escribir2 .

    RPAR            reduce using rule 100 (escribir1 -> expresion add_print generar_cuadr escribir2 .)


state 298

    (105) ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF . DO bloque return_while

    DO              shift and go to state 321


state 299

    (108) ciclo_f -> FROM LPAR variable asign_aux EQ expresion . atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (66) atomic_assign -> . e
    (163) e -> .

    TO              reduce using rule 163 (e -> .)

    atomic_assign                  shift and go to state 322
    e                              shift and go to state 234

state 300

    (117) regresar -> RETURN expresion SEMICOLON .

    RCBRAC          reduce using rule 117 (regresar -> RETURN expresion SEMICOLON .)


state 301

    (47) funcion3 -> COMMA ID COLON tipo funcion3 .

    RPAR            reduce using rule 47 (funcion3 -> COMMA ID COLON tipo funcion3 .)


state 302

    (120) exp1 -> OR push_or a_exp pop_operador . exp1
    (120) exp1 -> . OR push_or a_exp pop_operador exp1
    (121) exp1 -> . e
    (163) e -> .

    OR              shift and go to state 183
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    exp1                           shift and go to state 323
    e                              shift and go to state 184

state 303

    (123) pop_operador -> e .

    OR              reduce using rule 123 (pop_operador -> e .)
    SEMICOLON       reduce using rule 123 (pop_operador -> e .)
    RPAR            reduce using rule 123 (pop_operador -> e .)
    COMMA           reduce using rule 123 (pop_operador -> e .)
    RSBRAC          reduce using rule 123 (pop_operador -> e .)
    TO              reduce using rule 123 (pop_operador -> e .)
    AND             reduce using rule 123 (pop_operador -> e .)
    LT              reduce using rule 123 (pop_operador -> e .)
    GT              reduce using rule 123 (pop_operador -> e .)
    COMP            reduce using rule 123 (pop_operador -> e .)
    NOTEQ           reduce using rule 123 (pop_operador -> e .)
    PLUS            reduce using rule 123 (pop_operador -> e .)
    MINUS           reduce using rule 123 (pop_operador -> e .)
    MULT            reduce using rule 123 (pop_operador -> e .)
    DIV             reduce using rule 123 (pop_operador -> e .)
    EQ              reduce using rule 123 (pop_operador -> e .)
    IF              reduce using rule 123 (pop_operador -> e .)
    READ            reduce using rule 123 (pop_operador -> e .)
    WRITE           reduce using rule 123 (pop_operador -> e .)
    WHILE           reduce using rule 123 (pop_operador -> e .)
    FROM            reduce using rule 123 (pop_operador -> e .)
    ID              reduce using rule 123 (pop_operador -> e .)
    RCBRAC          reduce using rule 123 (pop_operador -> e .)
    RETURN          reduce using rule 123 (pop_operador -> e .)


state 304

    (125) exp2 -> AND push_and b_exp pop_operador . exp2
    (125) exp2 -> . AND push_and b_exp pop_operador exp2
    (126) exp2 -> . e
    (163) e -> .

    AND             shift and go to state 186
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    exp2                           shift and go to state 324
    e                              shift and go to state 187

state 305

    (129) exp3 -> LT push_lt c_exp pop_operador . exp3
    (129) exp3 -> . LT push_lt c_exp pop_operador exp3
    (130) exp3 -> . GT push_gt c_exp pop_operador exp3
    (131) exp3 -> . COMP push_comp c_exp pop_operador exp3
    (132) exp3 -> . NOTEQ push_noteq c_exp pop_operador exp3
    (133) exp3 -> . e
    (163) e -> .

    LT              shift and go to state 189
    GT              shift and go to state 190
    COMP            shift and go to state 191
    NOTEQ           shift and go to state 192
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    exp3                           shift and go to state 325
    e                              shift and go to state 193

state 306

    (130) exp3 -> GT push_gt c_exp pop_operador . exp3
    (129) exp3 -> . LT push_lt c_exp pop_operador exp3
    (130) exp3 -> . GT push_gt c_exp pop_operador exp3
    (131) exp3 -> . COMP push_comp c_exp pop_operador exp3
    (132) exp3 -> . NOTEQ push_noteq c_exp pop_operador exp3
    (133) exp3 -> . e
    (163) e -> .

    LT              shift and go to state 189
    GT              shift and go to state 190
    COMP            shift and go to state 191
    NOTEQ           shift and go to state 192
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    exp3                           shift and go to state 326
    e                              shift and go to state 193

state 307

    (131) exp3 -> COMP push_comp c_exp pop_operador . exp3
    (129) exp3 -> . LT push_lt c_exp pop_operador exp3
    (130) exp3 -> . GT push_gt c_exp pop_operador exp3
    (131) exp3 -> . COMP push_comp c_exp pop_operador exp3
    (132) exp3 -> . NOTEQ push_noteq c_exp pop_operador exp3
    (133) exp3 -> . e
    (163) e -> .

    LT              shift and go to state 189
    GT              shift and go to state 190
    COMP            shift and go to state 191
    NOTEQ           shift and go to state 192
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    exp3                           shift and go to state 327
    e                              shift and go to state 193

state 308

    (132) exp3 -> NOTEQ push_noteq c_exp pop_operador . exp3
    (129) exp3 -> . LT push_lt c_exp pop_operador exp3
    (130) exp3 -> . GT push_gt c_exp pop_operador exp3
    (131) exp3 -> . COMP push_comp c_exp pop_operador exp3
    (132) exp3 -> . NOTEQ push_noteq c_exp pop_operador exp3
    (133) exp3 -> . e
    (163) e -> .

    LT              shift and go to state 189
    GT              shift and go to state 190
    COMP            shift and go to state 191
    NOTEQ           shift and go to state 192
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    exp3                           shift and go to state 328
    e                              shift and go to state 193

state 309

    (139) exp4 -> PLUS push_plus d_exp pop_operador . exp4
    (139) exp4 -> . PLUS push_plus d_exp pop_operador exp4
    (140) exp4 -> . MINUS push_minus d_exp pop_operador exp4
    (141) exp4 -> . e
    (163) e -> .

    PLUS            shift and go to state 195
    MINUS           shift and go to state 196
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    exp4                           shift and go to state 329
    e                              shift and go to state 197

state 310

    (140) exp4 -> MINUS push_minus d_exp pop_operador . exp4
    (139) exp4 -> . PLUS push_plus d_exp pop_operador exp4
    (140) exp4 -> . MINUS push_minus d_exp pop_operador exp4
    (141) exp4 -> . e
    (163) e -> .

    PLUS            shift and go to state 195
    MINUS           shift and go to state 196
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    exp4                           shift and go to state 330
    e                              shift and go to state 197

state 311

    (145) exp5 -> MULT push_mult e_exp pop_operador . exp5
    (145) exp5 -> . MULT push_mult e_exp pop_operador exp5
    (146) exp5 -> . DIV push_div e_exp pop_operador exp5
    (147) exp5 -> . e
    (163) e -> .

    MULT            shift and go to state 199
    DIV             shift and go to state 200
    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    exp5                           shift and go to state 331
    e                              shift and go to state 201

state 312

    (146) exp5 -> DIV push_div e_exp pop_operador . exp5
    (145) exp5 -> . MULT push_mult e_exp pop_operador exp5
    (146) exp5 -> . DIV push_div e_exp pop_operador exp5
    (147) exp5 -> . e
    (163) e -> .

    MULT            shift and go to state 199
    DIV             shift and go to state 200
    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    exp5                           shift and go to state 332
    e                              shift and go to state 201

state 313

    (85) sub_llamada -> validar_id llamada1 LPAR llamada2 RPAR .

    MULT            reduce using rule 85 (sub_llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    DIV             reduce using rule 85 (sub_llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    PLUS            reduce using rule 85 (sub_llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    MINUS           reduce using rule 85 (sub_llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    LT              reduce using rule 85 (sub_llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    GT              reduce using rule 85 (sub_llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    COMP            reduce using rule 85 (sub_llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    NOTEQ           reduce using rule 85 (sub_llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    AND             reduce using rule 85 (sub_llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    OR              reduce using rule 85 (sub_llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    SEMICOLON       reduce using rule 85 (sub_llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    RPAR            reduce using rule 85 (sub_llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    COMMA           reduce using rule 85 (sub_llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    RSBRAC          reduce using rule 85 (sub_llamada -> validar_id llamada1 LPAR llamada2 RPAR .)
    TO              reduce using rule 85 (sub_llamada -> validar_id llamada1 LPAR llamada2 RPAR .)


state 314

    (77) variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador . RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador

    RSBRAC          shift and go to state 333


state 315

    (67) condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 . fill
    (69) fill -> . e
    (163) e -> .

    IF              reduce using rule 163 (e -> .)
    READ            reduce using rule 163 (e -> .)
    WRITE           reduce using rule 163 (e -> .)
    WHILE           reduce using rule 163 (e -> .)
    FROM            reduce using rule 163 (e -> .)
    ID              reduce using rule 163 (e -> .)
    RCBRAC          reduce using rule 163 (e -> .)
    RETURN          reduce using rule 163 (e -> .)

    fill                           shift and go to state 334
    e                              shift and go to state 335

state 316

    (70) condicion1 -> ELSE . goto bloque
    (72) goto -> . e
    (163) e -> .

    LCBRAC          reduce using rule 163 (e -> .)

    goto                           shift and go to state 336
    e                              shift and go to state 337

state 317

    (71) condicion1 -> e .

    IF              reduce using rule 71 (condicion1 -> e .)
    READ            reduce using rule 71 (condicion1 -> e .)
    WRITE           reduce using rule 71 (condicion1 -> e .)
    WHILE           reduce using rule 71 (condicion1 -> e .)
    FROM            reduce using rule 71 (condicion1 -> e .)
    ID              reduce using rule 71 (condicion1 -> e .)
    RCBRAC          reduce using rule 71 (condicion1 -> e .)
    RETURN          reduce using rule 71 (condicion1 -> e .)


state 318

    (94) llamada3 -> COMMA expresion . cuad_param llamada3
    (93) cuad_param -> . e
    (163) e -> .

    COMMA           reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)

    cuad_param                     shift and go to state 338
    e                              shift and go to state 264

state 319

    (96) leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .

    IF              reduce using rule 96 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    READ            reduce using rule 96 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    WRITE           reduce using rule 96 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    WHILE           reduce using rule 96 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    FROM            reduce using rule 96 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    ID              reduce using rule 96 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    RCBRAC          reduce using rule 96 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    RETURN          reduce using rule 96 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)


state 320

    (102) escribir2 -> COMMA escribir1 .

    RPAR            reduce using rule 102 (escribir2 -> COMMA escribir1 .)


state 321

    (105) ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO . bloque return_while
    (53) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 85

    bloque                         shift and go to state 339

state 322

    (108) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign . save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (115) save_aux -> . e
    (163) e -> .

    TO              reduce using rule 163 (e -> .)

    save_aux                       shift and go to state 340
    e                              shift and go to state 341

state 323

    (120) exp1 -> OR push_or a_exp pop_operador exp1 .

    SEMICOLON       reduce using rule 120 (exp1 -> OR push_or a_exp pop_operador exp1 .)
    RPAR            reduce using rule 120 (exp1 -> OR push_or a_exp pop_operador exp1 .)
    COMMA           reduce using rule 120 (exp1 -> OR push_or a_exp pop_operador exp1 .)
    RSBRAC          reduce using rule 120 (exp1 -> OR push_or a_exp pop_operador exp1 .)
    TO              reduce using rule 120 (exp1 -> OR push_or a_exp pop_operador exp1 .)


state 324

    (125) exp2 -> AND push_and b_exp pop_operador exp2 .

    OR              reduce using rule 125 (exp2 -> AND push_and b_exp pop_operador exp2 .)
    SEMICOLON       reduce using rule 125 (exp2 -> AND push_and b_exp pop_operador exp2 .)
    RPAR            reduce using rule 125 (exp2 -> AND push_and b_exp pop_operador exp2 .)
    COMMA           reduce using rule 125 (exp2 -> AND push_and b_exp pop_operador exp2 .)
    RSBRAC          reduce using rule 125 (exp2 -> AND push_and b_exp pop_operador exp2 .)
    TO              reduce using rule 125 (exp2 -> AND push_and b_exp pop_operador exp2 .)


state 325

    (129) exp3 -> LT push_lt c_exp pop_operador exp3 .

    AND             reduce using rule 129 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    OR              reduce using rule 129 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    SEMICOLON       reduce using rule 129 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    RPAR            reduce using rule 129 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    COMMA           reduce using rule 129 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    RSBRAC          reduce using rule 129 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    TO              reduce using rule 129 (exp3 -> LT push_lt c_exp pop_operador exp3 .)


state 326

    (130) exp3 -> GT push_gt c_exp pop_operador exp3 .

    AND             reduce using rule 130 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    OR              reduce using rule 130 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    SEMICOLON       reduce using rule 130 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    RPAR            reduce using rule 130 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    COMMA           reduce using rule 130 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    RSBRAC          reduce using rule 130 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    TO              reduce using rule 130 (exp3 -> GT push_gt c_exp pop_operador exp3 .)


state 327

    (131) exp3 -> COMP push_comp c_exp pop_operador exp3 .

    AND             reduce using rule 131 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    OR              reduce using rule 131 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    SEMICOLON       reduce using rule 131 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    RPAR            reduce using rule 131 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    COMMA           reduce using rule 131 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    RSBRAC          reduce using rule 131 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    TO              reduce using rule 131 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)


state 328

    (132) exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .

    AND             reduce using rule 132 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    OR              reduce using rule 132 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    SEMICOLON       reduce using rule 132 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    RPAR            reduce using rule 132 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    COMMA           reduce using rule 132 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    RSBRAC          reduce using rule 132 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    TO              reduce using rule 132 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)


state 329

    (139) exp4 -> PLUS push_plus d_exp pop_operador exp4 .

    LT              reduce using rule 139 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    GT              reduce using rule 139 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    COMP            reduce using rule 139 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    NOTEQ           reduce using rule 139 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    AND             reduce using rule 139 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    OR              reduce using rule 139 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    SEMICOLON       reduce using rule 139 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    RPAR            reduce using rule 139 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    COMMA           reduce using rule 139 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    RSBRAC          reduce using rule 139 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    TO              reduce using rule 139 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)


state 330

    (140) exp4 -> MINUS push_minus d_exp pop_operador exp4 .

    LT              reduce using rule 140 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    GT              reduce using rule 140 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    COMP            reduce using rule 140 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    NOTEQ           reduce using rule 140 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    AND             reduce using rule 140 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    OR              reduce using rule 140 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    SEMICOLON       reduce using rule 140 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    RPAR            reduce using rule 140 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    COMMA           reduce using rule 140 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    RSBRAC          reduce using rule 140 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    TO              reduce using rule 140 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)


state 331

    (145) exp5 -> MULT push_mult e_exp pop_operador exp5 .

    PLUS            reduce using rule 145 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    MINUS           reduce using rule 145 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    LT              reduce using rule 145 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    GT              reduce using rule 145 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    COMP            reduce using rule 145 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    NOTEQ           reduce using rule 145 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    AND             reduce using rule 145 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    OR              reduce using rule 145 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    SEMICOLON       reduce using rule 145 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    RPAR            reduce using rule 145 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    COMMA           reduce using rule 145 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    RSBRAC          reduce using rule 145 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    TO              reduce using rule 145 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)


state 332

    (146) exp5 -> DIV push_div e_exp pop_operador exp5 .

    PLUS            reduce using rule 146 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    MINUS           reduce using rule 146 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    LT              reduce using rule 146 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    GT              reduce using rule 146 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    COMP            reduce using rule 146 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    NOTEQ           reduce using rule 146 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    AND             reduce using rule 146 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    OR              reduce using rule 146 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    SEMICOLON       reduce using rule 146 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    RPAR            reduce using rule 146 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    COMMA           reduce using rule 146 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    RSBRAC          reduce using rule 146 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    TO              reduce using rule 146 (exp5 -> DIV push_div e_exp pop_operador exp5 .)


state 333

    (77) variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC . variable3 push_plus pop_operador push_plus push_arr pop_operador
    (81) variable3 -> . LSBRAC expresion verifica_d2 RSBRAC
    (82) variable3 -> . e
    (163) e -> .

    LSBRAC          shift and go to state 342
    EQ              reduce using rule 163 (e -> .)
    MULT            reduce using rule 163 (e -> .)
    DIV             reduce using rule 163 (e -> .)
    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    variable3                      shift and go to state 343
    e                              shift and go to state 344

state 334

    (67) condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .

    IF              reduce using rule 67 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    READ            reduce using rule 67 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    WRITE           reduce using rule 67 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    WHILE           reduce using rule 67 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    FROM            reduce using rule 67 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    ID              reduce using rule 67 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    RCBRAC          reduce using rule 67 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    RETURN          reduce using rule 67 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)


state 335

    (69) fill -> e .

    IF              reduce using rule 69 (fill -> e .)
    READ            reduce using rule 69 (fill -> e .)
    WRITE           reduce using rule 69 (fill -> e .)
    WHILE           reduce using rule 69 (fill -> e .)
    FROM            reduce using rule 69 (fill -> e .)
    ID              reduce using rule 69 (fill -> e .)
    RCBRAC          reduce using rule 69 (fill -> e .)
    RETURN          reduce using rule 69 (fill -> e .)


state 336

    (70) condicion1 -> ELSE goto . bloque
    (53) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 85

    bloque                         shift and go to state 345

state 337

    (72) goto -> e .

    LCBRAC          reduce using rule 72 (goto -> e .)


state 338

    (94) llamada3 -> COMMA expresion cuad_param . llamada3
    (94) llamada3 -> . COMMA expresion cuad_param llamada3
    (95) llamada3 -> . e
    (163) e -> .

    COMMA           shift and go to state 291
    RPAR            reduce using rule 163 (e -> .)

    llamada3                       shift and go to state 346
    e                              shift and go to state 292

state 339

    (105) ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque . return_while
    (107) return_while -> . e
    (163) e -> .

    IF              reduce using rule 163 (e -> .)
    READ            reduce using rule 163 (e -> .)
    WRITE           reduce using rule 163 (e -> .)
    WHILE           reduce using rule 163 (e -> .)
    FROM            reduce using rule 163 (e -> .)
    ID              reduce using rule 163 (e -> .)
    RCBRAC          reduce using rule 163 (e -> .)
    RETURN          reduce using rule 163 (e -> .)

    return_while                   shift and go to state 347
    e                              shift and go to state 348

state 340

    (108) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux . TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go

    TO              shift and go to state 349


state 341

    (115) save_aux -> e .

    TO              reduce using rule 115 (save_aux -> e .)
    LCBRAC          reduce using rule 115 (save_aux -> e .)
    IF              reduce using rule 115 (save_aux -> e .)
    READ            reduce using rule 115 (save_aux -> e .)
    WRITE           reduce using rule 115 (save_aux -> e .)
    WHILE           reduce using rule 115 (save_aux -> e .)
    FROM            reduce using rule 115 (save_aux -> e .)
    ID              reduce using rule 115 (save_aux -> e .)
    RCBRAC          reduce using rule 115 (save_aux -> e .)
    RETURN          reduce using rule 115 (save_aux -> e .)


state 342

    (81) variable3 -> LSBRAC . expresion verifica_d2 RSBRAC
    (119) expresion -> . a_exp exp1
    (124) a_exp -> . b_exp exp2
    (128) b_exp -> . c_exp exp3
    (138) c_exp -> . d_exp exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    expresion                      shift and go to state 350
    a_exp                          shift and go to state 148
    b_exp                          shift and go to state 149
    c_exp                          shift and go to state 150
    d_exp                          shift and go to state 151
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    variable                       shift and go to state 146
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 343

    (77) variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 . push_plus pop_operador push_plus push_arr pop_operador
    (142) push_plus -> . e
    (163) e -> .

    EQ              reduce using rule 163 (e -> .)
    MULT            reduce using rule 163 (e -> .)
    DIV             reduce using rule 163 (e -> .)
    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    push_plus                      shift and go to state 351
    e                              shift and go to state 248

state 344

    (82) variable3 -> e .

    EQ              reduce using rule 82 (variable3 -> e .)
    MULT            reduce using rule 82 (variable3 -> e .)
    DIV             reduce using rule 82 (variable3 -> e .)
    PLUS            reduce using rule 82 (variable3 -> e .)
    MINUS           reduce using rule 82 (variable3 -> e .)
    LT              reduce using rule 82 (variable3 -> e .)
    GT              reduce using rule 82 (variable3 -> e .)
    COMP            reduce using rule 82 (variable3 -> e .)
    NOTEQ           reduce using rule 82 (variable3 -> e .)
    AND             reduce using rule 82 (variable3 -> e .)
    OR              reduce using rule 82 (variable3 -> e .)
    SEMICOLON       reduce using rule 82 (variable3 -> e .)
    RPAR            reduce using rule 82 (variable3 -> e .)
    COMMA           reduce using rule 82 (variable3 -> e .)
    RSBRAC          reduce using rule 82 (variable3 -> e .)
    TO              reduce using rule 82 (variable3 -> e .)


state 345

    (70) condicion1 -> ELSE goto bloque .

    IF              reduce using rule 70 (condicion1 -> ELSE goto bloque .)
    READ            reduce using rule 70 (condicion1 -> ELSE goto bloque .)
    WRITE           reduce using rule 70 (condicion1 -> ELSE goto bloque .)
    WHILE           reduce using rule 70 (condicion1 -> ELSE goto bloque .)
    FROM            reduce using rule 70 (condicion1 -> ELSE goto bloque .)
    ID              reduce using rule 70 (condicion1 -> ELSE goto bloque .)
    RCBRAC          reduce using rule 70 (condicion1 -> ELSE goto bloque .)
    RETURN          reduce using rule 70 (condicion1 -> ELSE goto bloque .)


state 346

    (94) llamada3 -> COMMA expresion cuad_param llamada3 .

    RPAR            reduce using rule 94 (llamada3 -> COMMA expresion cuad_param llamada3 .)


state 347

    (105) ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .

    IF              reduce using rule 105 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    READ            reduce using rule 105 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    WRITE           reduce using rule 105 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    WHILE           reduce using rule 105 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    FROM            reduce using rule 105 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    ID              reduce using rule 105 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    RCBRAC          reduce using rule 105 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    RETURN          reduce using rule 105 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)


state 348

    (107) return_while -> e .

    IF              reduce using rule 107 (return_while -> e .)
    READ            reduce using rule 107 (return_while -> e .)
    WRITE           reduce using rule 107 (return_while -> e .)
    WHILE           reduce using rule 107 (return_while -> e .)
    FROM            reduce using rule 107 (return_while -> e .)
    ID              reduce using rule 107 (return_while -> e .)
    RCBRAC          reduce using rule 107 (return_while -> e .)
    RETURN          reduce using rule 107 (return_while -> e .)


state 349

    (108) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO . for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (109) for_temp -> . e
    (163) e -> .

    LPAR            reduce using rule 163 (e -> .)
    CTEI            reduce using rule 163 (e -> .)
    CTEF            reduce using rule 163 (e -> .)
    CTESTR          reduce using rule 163 (e -> .)
    CTEB            reduce using rule 163 (e -> .)
    ID              reduce using rule 163 (e -> .)

    for_temp                       shift and go to state 352
    e                              shift and go to state 353

state 350

    (81) variable3 -> LSBRAC expresion . verifica_d2 RSBRAC
    (83) verifica_d2 -> . e
    (163) e -> .

    RSBRAC          reduce using rule 163 (e -> .)

    verifica_d2                    shift and go to state 354
    e                              shift and go to state 355

state 351

    (77) variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus . pop_operador push_plus push_arr pop_operador
    (123) pop_operador -> . e
    (163) e -> .

    EQ              reduce using rule 163 (e -> .)
    MULT            reduce using rule 163 (e -> .)
    DIV             reduce using rule 163 (e -> .)
    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    pop_operador                   shift and go to state 356
    e                              shift and go to state 303

state 352

    (108) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp . asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (113) asign_aux2 -> . e
    (163) e -> .

    LPAR            reduce using rule 163 (e -> .)
    CTEI            reduce using rule 163 (e -> .)
    CTEF            reduce using rule 163 (e -> .)
    CTESTR          reduce using rule 163 (e -> .)
    CTEB            reduce using rule 163 (e -> .)
    ID              reduce using rule 163 (e -> .)

    asign_aux2                     shift and go to state 357
    e                              shift and go to state 358

state 353

    (109) for_temp -> e .

    LPAR            reduce using rule 109 (for_temp -> e .)
    CTEI            reduce using rule 109 (for_temp -> e .)
    CTEF            reduce using rule 109 (for_temp -> e .)
    CTESTR          reduce using rule 109 (for_temp -> e .)
    CTEB            reduce using rule 109 (for_temp -> e .)
    ID              reduce using rule 109 (for_temp -> e .)


state 354

    (81) variable3 -> LSBRAC expresion verifica_d2 . RSBRAC

    RSBRAC          shift and go to state 359


state 355

    (83) verifica_d2 -> e .

    RSBRAC          reduce using rule 83 (verifica_d2 -> e .)


state 356

    (77) variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador . push_plus push_arr pop_operador
    (142) push_plus -> . e
    (163) e -> .

    EQ              reduce using rule 163 (e -> .)
    MULT            reduce using rule 163 (e -> .)
    DIV             reduce using rule 163 (e -> .)
    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    push_plus                      shift and go to state 360
    e                              shift and go to state 248

state 357

    (108) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 . expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (119) expresion -> . a_exp exp1
    (124) a_exp -> . b_exp exp2
    (128) b_exp -> . c_exp exp3
    (138) c_exp -> . d_exp exp4
    (144) d_exp -> . e_exp exp5
    (150) e_exp -> . LPAR expresion RPAR
    (151) e_exp -> . var_cte
    (152) e_exp -> . variable
    (153) e_exp -> . llamada
    (154) var_cte -> . CTEI ctei
    (155) var_cte -> . CTEF ctef
    (156) var_cte -> . CTESTR ctestr
    (157) var_cte -> . CTEB cteb
    (73) variable -> . var_id variable1 variable2
    (84) llamada -> . sub_llamada parche atomic_assign
    (74) var_id -> . ID
    (85) sub_llamada -> . validar_id llamada1 LPAR llamada2 RPAR
    (88) validar_id -> . ID

    LPAR            shift and go to state 153
    CTEI            shift and go to state 156
    CTEF            shift and go to state 157
    CTESTR          shift and go to state 158
    CTEB            shift and go to state 159
    ID              shift and go to state 161

    variable                       shift and go to state 146
    expresion                      shift and go to state 361
    a_exp                          shift and go to state 148
    b_exp                          shift and go to state 149
    c_exp                          shift and go to state 150
    d_exp                          shift and go to state 151
    e_exp                          shift and go to state 152
    var_cte                        shift and go to state 154
    llamada                        shift and go to state 155
    var_id                         shift and go to state 99
    sub_llamada                    shift and go to state 160
    validar_id                     shift and go to state 162

state 358

    (113) asign_aux2 -> e .

    LPAR            reduce using rule 113 (asign_aux2 -> e .)
    CTEI            reduce using rule 113 (asign_aux2 -> e .)
    CTEF            reduce using rule 113 (asign_aux2 -> e .)
    CTESTR          reduce using rule 113 (asign_aux2 -> e .)
    CTEB            reduce using rule 113 (asign_aux2 -> e .)
    ID              reduce using rule 113 (asign_aux2 -> e .)


state 359

    (81) variable3 -> LSBRAC expresion verifica_d2 RSBRAC .

    EQ              reduce using rule 81 (variable3 -> LSBRAC expresion verifica_d2 RSBRAC .)
    MULT            reduce using rule 81 (variable3 -> LSBRAC expresion verifica_d2 RSBRAC .)
    DIV             reduce using rule 81 (variable3 -> LSBRAC expresion verifica_d2 RSBRAC .)
    PLUS            reduce using rule 81 (variable3 -> LSBRAC expresion verifica_d2 RSBRAC .)
    MINUS           reduce using rule 81 (variable3 -> LSBRAC expresion verifica_d2 RSBRAC .)
    LT              reduce using rule 81 (variable3 -> LSBRAC expresion verifica_d2 RSBRAC .)
    GT              reduce using rule 81 (variable3 -> LSBRAC expresion verifica_d2 RSBRAC .)
    COMP            reduce using rule 81 (variable3 -> LSBRAC expresion verifica_d2 RSBRAC .)
    NOTEQ           reduce using rule 81 (variable3 -> LSBRAC expresion verifica_d2 RSBRAC .)
    AND             reduce using rule 81 (variable3 -> LSBRAC expresion verifica_d2 RSBRAC .)
    OR              reduce using rule 81 (variable3 -> LSBRAC expresion verifica_d2 RSBRAC .)
    SEMICOLON       reduce using rule 81 (variable3 -> LSBRAC expresion verifica_d2 RSBRAC .)
    RPAR            reduce using rule 81 (variable3 -> LSBRAC expresion verifica_d2 RSBRAC .)
    COMMA           reduce using rule 81 (variable3 -> LSBRAC expresion verifica_d2 RSBRAC .)
    RSBRAC          reduce using rule 81 (variable3 -> LSBRAC expresion verifica_d2 RSBRAC .)
    TO              reduce using rule 81 (variable3 -> LSBRAC expresion verifica_d2 RSBRAC .)


state 360

    (77) variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus . push_arr pop_operador
    (79) push_arr -> . e
    (163) e -> .

    EQ              reduce using rule 163 (e -> .)
    MULT            reduce using rule 163 (e -> .)
    DIV             reduce using rule 163 (e -> .)
    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    push_arr                       shift and go to state 362
    e                              shift and go to state 363

state 361

    (108) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion . atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (66) atomic_assign -> . e
    (163) e -> .

    RPAR            reduce using rule 163 (e -> .)

    atomic_assign                  shift and go to state 364
    e                              shift and go to state 234

state 362

    (77) variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr . pop_operador
    (123) pop_operador -> . e
    (163) e -> .

    EQ              reduce using rule 163 (e -> .)
    MULT            reduce using rule 163 (e -> .)
    DIV             reduce using rule 163 (e -> .)
    PLUS            reduce using rule 163 (e -> .)
    MINUS           reduce using rule 163 (e -> .)
    LT              reduce using rule 163 (e -> .)
    GT              reduce using rule 163 (e -> .)
    COMP            reduce using rule 163 (e -> .)
    NOTEQ           reduce using rule 163 (e -> .)
    AND             reduce using rule 163 (e -> .)
    OR              reduce using rule 163 (e -> .)
    SEMICOLON       reduce using rule 163 (e -> .)
    RPAR            reduce using rule 163 (e -> .)
    COMMA           reduce using rule 163 (e -> .)
    RSBRAC          reduce using rule 163 (e -> .)
    TO              reduce using rule 163 (e -> .)

    pop_operador                   shift and go to state 365
    e                              shift and go to state 303

state 363

    (79) push_arr -> e .

    EQ              reduce using rule 79 (push_arr -> e .)
    MULT            reduce using rule 79 (push_arr -> e .)
    DIV             reduce using rule 79 (push_arr -> e .)
    PLUS            reduce using rule 79 (push_arr -> e .)
    MINUS           reduce using rule 79 (push_arr -> e .)
    LT              reduce using rule 79 (push_arr -> e .)
    GT              reduce using rule 79 (push_arr -> e .)
    COMP            reduce using rule 79 (push_arr -> e .)
    NOTEQ           reduce using rule 79 (push_arr -> e .)
    AND             reduce using rule 79 (push_arr -> e .)
    OR              reduce using rule 79 (push_arr -> e .)
    SEMICOLON       reduce using rule 79 (push_arr -> e .)
    RPAR            reduce using rule 79 (push_arr -> e .)
    COMMA           reduce using rule 79 (push_arr -> e .)
    RSBRAC          reduce using rule 79 (push_arr -> e .)
    TO              reduce using rule 79 (push_arr -> e .)


state 364

    (108) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign . save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (116) save_aux2 -> . e
    (163) e -> .

    RPAR            reduce using rule 163 (e -> .)

    save_aux2                      shift and go to state 366
    e                              shift and go to state 367

state 365

    (77) variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador .

    EQ              reduce using rule 77 (variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador .)
    MULT            reduce using rule 77 (variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador .)
    DIV             reduce using rule 77 (variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador .)
    PLUS            reduce using rule 77 (variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador .)
    MINUS           reduce using rule 77 (variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador .)
    LT              reduce using rule 77 (variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador .)
    GT              reduce using rule 77 (variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador .)
    COMP            reduce using rule 77 (variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador .)
    NOTEQ           reduce using rule 77 (variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador .)
    AND             reduce using rule 77 (variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador .)
    OR              reduce using rule 77 (variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador .)
    SEMICOLON       reduce using rule 77 (variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador .)
    RPAR            reduce using rule 77 (variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador .)
    COMMA           reduce using rule 77 (variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador .)
    RSBRAC          reduce using rule 77 (variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador .)
    TO              reduce using rule 77 (variable2 -> LSBRAC expresion verifica_d1 push_mult pop_operador RSBRAC variable3 push_plus pop_operador push_plus push_arr pop_operador .)


state 366

    (108) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 . migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (110) migaja -> . e
    (163) e -> .

    RPAR            reduce using rule 163 (e -> .)

    migaja                         shift and go to state 368
    e                              shift and go to state 369

state 367

    (116) save_aux2 -> e .

    RPAR            reduce using rule 116 (save_aux2 -> e .)


state 368

    (108) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja . push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (134) push_lt -> . e
    (163) e -> .

    RPAR            reduce using rule 163 (e -> .)

    push_lt                        shift and go to state 370
    e                              shift and go to state 240

state 369

    (110) migaja -> e .

    RPAR            reduce using rule 110 (migaja -> e .)


state 370

    (108) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt . pop_operador gotoF RPAR DO save_aux bloque update_fill_go
    (123) pop_operador -> . e
    (163) e -> .

    RPAR            reduce using rule 163 (e -> .)

    pop_operador                   shift and go to state 371
    e                              shift and go to state 303

state 371

    (108) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador . gotoF RPAR DO save_aux bloque update_fill_go
    (68) gotoF -> . e
    (163) e -> .

    RPAR            reduce using rule 163 (e -> .)

    gotoF                          shift and go to state 372
    e                              shift and go to state 261

state 372

    (108) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF . RPAR DO save_aux bloque update_fill_go

    RPAR            shift and go to state 373


state 373

    (108) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR . DO save_aux bloque update_fill_go

    DO              shift and go to state 374


state 374

    (108) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO . save_aux bloque update_fill_go
    (115) save_aux -> . e
    (163) e -> .

    LCBRAC          reduce using rule 163 (e -> .)

    save_aux                       shift and go to state 375
    e                              shift and go to state 341

state 375

    (108) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux . bloque update_fill_go
    (53) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 85

    bloque                         shift and go to state 376

state 376

    (108) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque . update_fill_go
    (111) update_fill_go -> . save_aux push_plus push1 pop_operador atomic_assign
    (115) save_aux -> . e
    (163) e -> .

    IF              reduce using rule 163 (e -> .)
    READ            reduce using rule 163 (e -> .)
    WRITE           reduce using rule 163 (e -> .)
    WHILE           reduce using rule 163 (e -> .)
    FROM            reduce using rule 163 (e -> .)
    ID              reduce using rule 163 (e -> .)
    RCBRAC          reduce using rule 163 (e -> .)
    RETURN          reduce using rule 163 (e -> .)

    save_aux                       shift and go to state 377
    update_fill_go                 shift and go to state 378
    e                              shift and go to state 341

state 377

    (111) update_fill_go -> save_aux . push_plus push1 pop_operador atomic_assign
    (142) push_plus -> . e
    (163) e -> .

    IF              reduce using rule 163 (e -> .)
    READ            reduce using rule 163 (e -> .)
    WRITE           reduce using rule 163 (e -> .)
    WHILE           reduce using rule 163 (e -> .)
    FROM            reduce using rule 163 (e -> .)
    ID              reduce using rule 163 (e -> .)
    RCBRAC          reduce using rule 163 (e -> .)
    RETURN          reduce using rule 163 (e -> .)

    push_plus                      shift and go to state 379
    e                              shift and go to state 248

state 378

    (108) ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go .

    IF              reduce using rule 108 (ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go .)
    READ            reduce using rule 108 (ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go .)
    WRITE           reduce using rule 108 (ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go .)
    WHILE           reduce using rule 108 (ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go .)
    FROM            reduce using rule 108 (ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go .)
    ID              reduce using rule 108 (ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go .)
    RCBRAC          reduce using rule 108 (ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go .)
    RETURN          reduce using rule 108 (ciclo_f -> FROM LPAR variable asign_aux EQ expresion atomic_assign save_aux TO for_temp asign_aux2 expresion atomic_assign save_aux2 migaja push_lt pop_operador gotoF RPAR DO save_aux bloque update_fill_go .)


state 379

    (111) update_fill_go -> save_aux push_plus . push1 pop_operador atomic_assign
    (114) push1 -> . e
    (163) e -> .

    IF              reduce using rule 163 (e -> .)
    READ            reduce using rule 163 (e -> .)
    WRITE           reduce using rule 163 (e -> .)
    WHILE           reduce using rule 163 (e -> .)
    FROM            reduce using rule 163 (e -> .)
    ID              reduce using rule 163 (e -> .)
    RCBRAC          reduce using rule 163 (e -> .)
    RETURN          reduce using rule 163 (e -> .)

    push1                          shift and go to state 380
    e                              shift and go to state 381

state 380

    (111) update_fill_go -> save_aux push_plus push1 . pop_operador atomic_assign
    (123) pop_operador -> . e
    (163) e -> .

    IF              reduce using rule 163 (e -> .)
    READ            reduce using rule 163 (e -> .)
    WRITE           reduce using rule 163 (e -> .)
    WHILE           reduce using rule 163 (e -> .)
    FROM            reduce using rule 163 (e -> .)
    ID              reduce using rule 163 (e -> .)
    RCBRAC          reduce using rule 163 (e -> .)
    RETURN          reduce using rule 163 (e -> .)

    pop_operador                   shift and go to state 382
    e                              shift and go to state 303

state 381

    (114) push1 -> e .

    IF              reduce using rule 114 (push1 -> e .)
    READ            reduce using rule 114 (push1 -> e .)
    WRITE           reduce using rule 114 (push1 -> e .)
    WHILE           reduce using rule 114 (push1 -> e .)
    FROM            reduce using rule 114 (push1 -> e .)
    ID              reduce using rule 114 (push1 -> e .)
    RCBRAC          reduce using rule 114 (push1 -> e .)
    RETURN          reduce using rule 114 (push1 -> e .)


state 382

    (111) update_fill_go -> save_aux push_plus push1 pop_operador . atomic_assign
    (66) atomic_assign -> . e
    (163) e -> .

    IF              reduce using rule 163 (e -> .)
    READ            reduce using rule 163 (e -> .)
    WRITE           reduce using rule 163 (e -> .)
    WHILE           reduce using rule 163 (e -> .)
    FROM            reduce using rule 163 (e -> .)
    ID              reduce using rule 163 (e -> .)
    RCBRAC          reduce using rule 163 (e -> .)
    RETURN          reduce using rule 163 (e -> .)

    atomic_assign                  shift and go to state 383
    e                              shift and go to state 234

state 383

    (111) update_fill_go -> save_aux push_plus push1 pop_operador atomic_assign .

    IF              reduce using rule 111 (update_fill_go -> save_aux push_plus push1 pop_operador atomic_assign .)
    READ            reduce using rule 111 (update_fill_go -> save_aux push_plus push1 pop_operador atomic_assign .)
    WRITE           reduce using rule 111 (update_fill_go -> save_aux push_plus push1 pop_operador atomic_assign .)
    WHILE           reduce using rule 111 (update_fill_go -> save_aux push_plus push1 pop_operador atomic_assign .)
    FROM            reduce using rule 111 (update_fill_go -> save_aux push_plus push1 pop_operador atomic_assign .)
    ID              reduce using rule 111 (update_fill_go -> save_aux push_plus push1 pop_operador atomic_assign .)
    RCBRAC          reduce using rule 111 (update_fill_go -> save_aux push_plus push1 pop_operador atomic_assign .)
    RETURN          reduce using rule 111 (update_fill_go -> save_aux push_plus push1 pop_operador atomic_assign .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VOID in state 67 resolved as shift
WARNING: shift/reduce conflict for INT in state 67 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 67 resolved as shift
WARNING: shift/reduce conflict for STRING in state 67 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 67 resolved as shift
WARNING: shift/reduce conflict for ID in state 69 resolved as shift
WARNING: shift/reduce conflict for VOID in state 80 resolved as shift
WARNING: shift/reduce conflict for INT in state 80 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 80 resolved as shift
WARNING: shift/reduce conflict for STRING in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 80 resolved as shift
WARNING: shift/reduce conflict for ID in state 81 resolved as shift
WARNING: shift/reduce conflict for VOID in state 91 resolved as shift
WARNING: shift/reduce conflict for INT in state 91 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 91 resolved as shift
WARNING: shift/reduce conflict for STRING in state 91 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 91 resolved as shift
WARNING: shift/reduce conflict for VOID in state 177 resolved as shift
WARNING: shift/reduce conflict for INT in state 177 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 177 resolved as shift
WARNING: shift/reduce conflict for STRING in state 177 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 177 resolved as shift
WARNING: reduce/reduce conflict in state 93 resolved using rule (metodos -> e)
WARNING: rejected rule (funcion -> e) in state 93
WARNING: reduce/reduce conflict in state 174 resolved using rule (texto -> CTESTR)
WARNING: rejected rule (e -> <empty>) in state 174
