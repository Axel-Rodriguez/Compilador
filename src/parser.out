Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON goto_main clase vars funcion main
Rule 2     goto_main -> e
Rule 3     main -> MAIN LPAR RPAR main_start bloque
Rule 4     main_start -> e
Rule 5     clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase
Rule 6     clase -> e
Rule 7     inicializar_clase -> e
Rule 8     clase1 -> LT INHERITS ID GT
Rule 9     clase1 -> e
Rule 10    clase2 -> ATTRIBUTES declaracion atributos asign
Rule 11    clase2 -> e
Rule 12    atributos -> declaracion atributos
Rule 13    atributos -> e
Rule 14    asign -> asignacion asign
Rule 15    asign -> e
Rule 16    clase3 -> METHODS funcion metodos
Rule 17    clase3 -> e
Rule 18    metodos -> funcion metodos
Rule 19    metodos -> e
Rule 20    vars -> VAR declaracion declaraciones
Rule 21    vars -> e
Rule 22    declaraciones -> declaracion declaraciones
Rule 23    declaraciones -> e
Rule 24    declaracion -> declaracion1 COLON declaracion5 SEMICOLON
Rule 25    declaracion1 -> ID declaracion2 declaracion4
Rule 26    declaracion2 -> LSBRAC CTEI RSBRAC declaracion3
Rule 27    declaracion2 -> e
Rule 28    declaracion3 -> LSBRAC CTEI RSBRAC
Rule 29    declaracion3 -> e
Rule 30    declaracion4 -> COMMA declaracion1
Rule 31    declaracion4 -> e
Rule 32    declaracion5 -> tipo
Rule 33    declaracion5 -> ID
Rule 34    funcion -> funcion1 FUNCTION ID LPAR funcion2 RPAR bloque funcion
Rule 35    funcion -> e
Rule 36    funcion1 -> tipo
Rule 37    funcion1 -> VOID funcion_void
Rule 38    funcion_void -> e
Rule 39    funcion2 -> ID COLON tipo funcion3
Rule 40    funcion2 -> e
Rule 41    funcion3 -> COMMA ID COLON tipo funcion3
Rule 42    funcion3 -> e
Rule 43    tipo -> INT
Rule 44    tipo -> FLOAT
Rule 45    tipo -> STRING
Rule 46    tipo -> BOOL
Rule 47    bloque -> LCBRAC estatutos RCBRAC
Rule 48    estatutos -> estatuto estatutos
Rule 49    estatutos -> e
Rule 50    estatuto -> asignacion
Rule 51    estatuto -> condicion
Rule 52    estatuto -> llamada
Rule 53    estatuto -> leer
Rule 54    estatuto -> escribir
Rule 55    estatuto -> ciclo_w
Rule 56    estatuto -> ciclo_f
Rule 57    estatuto -> regresar
Rule 58    asignacion -> variable EQ expresion SEMICOLON
Rule 59    variable -> ID variable1 variable2
Rule 60    variable1 -> DOT ID
Rule 61    variable1 -> e
Rule 62    variable2 -> LSBRAC expresion RSBRAC variable3
Rule 63    variable2 -> e
Rule 64    variable3 -> LSBRAC expresion RSBRAC
Rule 65    variable3 -> e
Rule 66    condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill
Rule 67    gotoF -> e
Rule 68    fill -> e
Rule 69    condicion1 -> ELSE goto bloque
Rule 70    condicion1 -> e
Rule 71    goto -> e
Rule 72    llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON
Rule 73    llamada1 -> DOT ID
Rule 74    llamada1 -> e
Rule 75    llamada2 -> expresion llamada3
Rule 76    llamada2 -> e
Rule 77    llamada3 -> COMMA expresion llamada3
Rule 78    llamada3 -> e
Rule 79    leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON
Rule 80    add_read -> e
Rule 81    escribir -> WRITE LPAR escribir1 RPAR SEMICOLON
Rule 82    escribir1 -> texto add_print generar_cuadr escribir2
Rule 83    escribir1 -> expresion add_print generar_cuadr escribir2
Rule 84    add_print -> e
Rule 85    escribir2 -> COMMA escribir1
Rule 86    escribir2 -> e
Rule 87    texto -> CTESTR
Rule 88    ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while
Rule 89    push_while -> e
Rule 90    return_while -> e
Rule 91    ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go
Rule 92    asign_var -> e
Rule 93    asign_exp -> e
Rule 94    pop_for -> e
Rule 95    migaja -> e
Rule 96    update_fill_go -> push_plus push1 pop_operfor asign_var
Rule 97    push1 -> e
Rule 98    pop_operfor -> e
Rule 99    regresar -> RETURN expresion SEMICOLON
Rule 100   expresion -> a_exp exp1
Rule 101   exp1 -> OR push_or a_exp pop_operador exp1
Rule 102   exp1 -> e
Rule 103   push_or -> e
Rule 104   pop_operador -> e
Rule 105   a_exp -> b_exp exp2
Rule 106   exp2 -> AND push_and b_exp pop_operador exp2
Rule 107   exp2 -> e
Rule 108   push_and -> e
Rule 109   b_exp -> c_exp exp3
Rule 110   exp3 -> LT push_lt c_exp pop_operador exp3
Rule 111   exp3 -> GT push_gt c_exp pop_operador exp3
Rule 112   exp3 -> COMP push_comp c_exp pop_operador exp3
Rule 113   exp3 -> NOTEQ push_noteq c_exp pop_operador exp3
Rule 114   exp3 -> e
Rule 115   push_lt -> e
Rule 116   push_gt -> e
Rule 117   push_comp -> e
Rule 118   push_noteq -> e
Rule 119   c_exp -> d_exp exp4
Rule 120   exp4 -> PLUS push_plus d_exp pop_operador exp4
Rule 121   exp4 -> MINUS push_minus d_exp pop_operador exp4
Rule 122   exp4 -> e
Rule 123   push_plus -> e
Rule 124   push_minus -> e
Rule 125   d_exp -> e_exp exp5
Rule 126   exp5 -> MULT push_mult e_exp pop_operador exp5
Rule 127   exp5 -> DIV push_div e_exp pop_operador exp5
Rule 128   exp5 -> e
Rule 129   push_mult -> e
Rule 130   push_div -> e
Rule 131   e_exp -> LPAR expresion RPAR
Rule 132   e_exp -> var_cte
Rule 133   e_exp -> variable
Rule 134   e_exp -> llamada
Rule 135   var_cte -> CTEI ctei
Rule 136   var_cte -> CTEF ctef
Rule 137   var_cte -> CTESTR ctestr
Rule 138   var_cte -> CTEB cteb
Rule 139   ctei -> e
Rule 140   ctef -> e
Rule 141   ctestr -> e
Rule 142   cteb -> e
Rule 143   generar_cuadr -> e
Rule 144   e -> <empty>

Terminals, with rules where they appear

AND                  : 106
ATTRIBUTES           : 10
BOOL                 : 46
CLASS                : 5
COLON                : 24 39 41
COMMA                : 30 41 77 85
COMP                 : 112
CTEB                 : 138
CTEF                 : 136
CTEI                 : 26 28 135
CTESTR               : 87 137
DIV                  : 127
DO                   : 88 91
DOT                  : 60 73
ELSE                 : 69
EQ                   : 58 91
FLOAT                : 44
FROM                 : 91
FUNCTION             : 34
GT                   : 8 111
ID                   : 1 5 8 25 33 34 39 41 59 60 72 73
IF                   : 66
INHERITS             : 8
INT                  : 43
LCBRAC               : 5 47
LPAR                 : 3 34 66 72 79 81 88 91 131
LSBRAC               : 26 28 62 64
LT                   : 8 110
MAIN                 : 3
METHODS              : 16
MINUS                : 121
MULT                 : 126
NOTEQ                : 113
OR                   : 101
PLUS                 : 120
PROGRAM              : 1
RCBRAC               : 5 47
READ                 : 79
RETURN               : 99
RPAR                 : 3 34 66 72 79 81 88 91 131
RSBRAC               : 26 28 62 64
SEMICOLON            : 1 24 58 72 79 81 99
STRING               : 45
TO                   : 91
VAR                  : 20
VOID                 : 37
WHILE                : 88
WRITE                : 81
error                : 

Nonterminals, with rules where they appear

a_exp                : 100 101
add_print            : 82 83
add_read             : 79
asign                : 10 14
asign_exp            : 91
asign_var            : 91 96
asignacion           : 14 50
atributos            : 10 12
b_exp                : 105 106
bloque               : 3 34 66 69 88 91
c_exp                : 109 110 111 112 113
ciclo_f              : 56
ciclo_w              : 55
clase                : 1 5
clase1               : 5
clase2               : 5
clase3               : 5
condicion            : 51
condicion1           : 66
cteb                 : 138
ctef                 : 136
ctei                 : 135
ctestr               : 137
d_exp                : 119 120 121
declaracion          : 10 12 20 22
declaracion1         : 24 30
declaracion2         : 25
declaracion3         : 26
declaracion4         : 25
declaracion5         : 24
declaraciones        : 20 22
e                    : 2 4 6 7 9 11 13 15 17 19 21 23 27 29 31 35 38 40 42 49 61 63 65 67 68 70 71 74 76 78 80 84 86 89 90 92 93 94 95 97 98 102 103 104 107 108 114 115 116 117 118 122 123 124 128 129 130 139 140 141 142 143
e_exp                : 125 126 127
escribir             : 54
escribir1            : 81 85
escribir2            : 82 83
estatuto             : 48
estatutos            : 47 48
exp1                 : 100 101
exp2                 : 105 106
exp3                 : 109 110 111 112 113
exp4                 : 119 120 121
exp5                 : 125 126 127
expresion            : 58 62 64 66 75 77 83 88 91 91 99 131
fill                 : 66
funcion              : 1 16 18 34
funcion1             : 34
funcion2             : 34
funcion3             : 39 41
funcion_void         : 37
generar_cuadr        : 79 82 83
goto                 : 69
gotoF                : 66 88 91
goto_main            : 1
inicializar_clase    : 5
leer                 : 53
llamada              : 52 134
llamada1             : 72
llamada2             : 72
llamada3             : 75 77
main                 : 1
main_start           : 3
metodos              : 16 18
migaja               : 91
pop_for              : 91
pop_operador         : 101 106 110 111 112 113 120 121 126 127
pop_operfor          : 96
programa             : 0
push1                : 96
push_and             : 106
push_comp            : 112
push_div             : 127
push_gt              : 111
push_lt              : 91 110
push_minus           : 121
push_mult            : 126
push_noteq           : 113
push_or              : 101
push_plus            : 96 120
push_while           : 88
regresar             : 57
return_while         : 88
texto                : 82
tipo                 : 32 36 39 41
update_fill_go       : 91
var_cte              : 132
variable             : 58 79 91 133
variable1            : 59
variable2            : 59
variable3            : 62
vars                 : 1

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON goto_main clase vars funcion main

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOLON goto_main clase vars funcion main

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOLON goto_main clase vars funcion main

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . goto_main clase vars funcion main
    (2) goto_main -> . e
    (144) e -> .

    CLASS           reduce using rule 144 (e -> .)
    VAR             reduce using rule 144 (e -> .)
    VOID            reduce using rule 144 (e -> .)
    INT             reduce using rule 144 (e -> .)
    FLOAT           reduce using rule 144 (e -> .)
    STRING          reduce using rule 144 (e -> .)
    BOOL            reduce using rule 144 (e -> .)
    MAIN            reduce using rule 144 (e -> .)

    goto_main                      shift and go to state 5
    e                              shift and go to state 6

state 5

    (1) programa -> PROGRAM ID SEMICOLON goto_main . clase vars funcion main
    (5) clase -> . CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase
    (6) clase -> . e
    (144) e -> .

    CLASS           shift and go to state 8
    VAR             reduce using rule 144 (e -> .)
    VOID            reduce using rule 144 (e -> .)
    INT             reduce using rule 144 (e -> .)
    FLOAT           reduce using rule 144 (e -> .)
    STRING          reduce using rule 144 (e -> .)
    BOOL            reduce using rule 144 (e -> .)
    MAIN            reduce using rule 144 (e -> .)

    clase                          shift and go to state 7
    e                              shift and go to state 9

state 6

    (2) goto_main -> e .

    CLASS           reduce using rule 2 (goto_main -> e .)
    VAR             reduce using rule 2 (goto_main -> e .)
    VOID            reduce using rule 2 (goto_main -> e .)
    INT             reduce using rule 2 (goto_main -> e .)
    FLOAT           reduce using rule 2 (goto_main -> e .)
    STRING          reduce using rule 2 (goto_main -> e .)
    BOOL            reduce using rule 2 (goto_main -> e .)
    MAIN            reduce using rule 2 (goto_main -> e .)


state 7

    (1) programa -> PROGRAM ID SEMICOLON goto_main clase . vars funcion main
    (20) vars -> . VAR declaracion declaraciones
    (21) vars -> . e
    (144) e -> .

    VAR             shift and go to state 11
    VOID            reduce using rule 144 (e -> .)
    INT             reduce using rule 144 (e -> .)
    FLOAT           reduce using rule 144 (e -> .)
    STRING          reduce using rule 144 (e -> .)
    BOOL            reduce using rule 144 (e -> .)
    MAIN            reduce using rule 144 (e -> .)

    vars                           shift and go to state 10
    e                              shift and go to state 12

state 8

    (5) clase -> CLASS . inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase
    (7) inicializar_clase -> . e
    (144) e -> .

    ID              reduce using rule 144 (e -> .)

    inicializar_clase              shift and go to state 13
    e                              shift and go to state 14

state 9

    (6) clase -> e .

    VAR             reduce using rule 6 (clase -> e .)
    VOID            reduce using rule 6 (clase -> e .)
    INT             reduce using rule 6 (clase -> e .)
    FLOAT           reduce using rule 6 (clase -> e .)
    STRING          reduce using rule 6 (clase -> e .)
    BOOL            reduce using rule 6 (clase -> e .)
    MAIN            reduce using rule 6 (clase -> e .)


state 10

    (1) programa -> PROGRAM ID SEMICOLON goto_main clase vars . funcion main
    (34) funcion -> . funcion1 FUNCTION ID LPAR funcion2 RPAR bloque funcion
    (35) funcion -> . e
    (36) funcion1 -> . tipo
    (37) funcion1 -> . VOID funcion_void
    (144) e -> .
    (43) tipo -> . INT
    (44) tipo -> . FLOAT
    (45) tipo -> . STRING
    (46) tipo -> . BOOL

    VOID            shift and go to state 19
    MAIN            reduce using rule 144 (e -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

    funcion                        shift and go to state 15
    funcion1                       shift and go to state 16
    e                              shift and go to state 17
    tipo                           shift and go to state 18

state 11

    (20) vars -> VAR . declaracion declaraciones
    (24) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (25) declaracion1 -> . ID declaracion2 declaracion4

    ID              shift and go to state 26

    declaracion                    shift and go to state 24
    declaracion1                   shift and go to state 25

state 12

    (21) vars -> e .

    VOID            reduce using rule 21 (vars -> e .)
    INT             reduce using rule 21 (vars -> e .)
    FLOAT           reduce using rule 21 (vars -> e .)
    STRING          reduce using rule 21 (vars -> e .)
    BOOL            reduce using rule 21 (vars -> e .)
    MAIN            reduce using rule 21 (vars -> e .)


state 13

    (5) clase -> CLASS inicializar_clase . ID clase1 LCBRAC clase2 clase3 RCBRAC clase

    ID              shift and go to state 27


state 14

    (7) inicializar_clase -> e .

    ID              reduce using rule 7 (inicializar_clase -> e .)


state 15

    (1) programa -> PROGRAM ID SEMICOLON goto_main clase vars funcion . main
    (3) main -> . MAIN LPAR RPAR main_start bloque

    MAIN            shift and go to state 29

    main                           shift and go to state 28

state 16

    (34) funcion -> funcion1 . FUNCTION ID LPAR funcion2 RPAR bloque funcion

    FUNCTION        shift and go to state 30


state 17

    (35) funcion -> e .

    MAIN            reduce using rule 35 (funcion -> e .)
    VOID            reduce using rule 35 (funcion -> e .)
    INT             reduce using rule 35 (funcion -> e .)
    FLOAT           reduce using rule 35 (funcion -> e .)
    STRING          reduce using rule 35 (funcion -> e .)
    BOOL            reduce using rule 35 (funcion -> e .)
    RCBRAC          reduce using rule 35 (funcion -> e .)


state 18

    (36) funcion1 -> tipo .

    FUNCTION        reduce using rule 36 (funcion1 -> tipo .)


state 19

    (37) funcion1 -> VOID . funcion_void
    (38) funcion_void -> . e
    (144) e -> .

    FUNCTION        reduce using rule 144 (e -> .)

    funcion_void                   shift and go to state 31
    e                              shift and go to state 32

state 20

    (43) tipo -> INT .

    FUNCTION        reduce using rule 43 (tipo -> INT .)
    SEMICOLON       reduce using rule 43 (tipo -> INT .)
    COMMA           reduce using rule 43 (tipo -> INT .)
    RPAR            reduce using rule 43 (tipo -> INT .)


state 21

    (44) tipo -> FLOAT .

    FUNCTION        reduce using rule 44 (tipo -> FLOAT .)
    SEMICOLON       reduce using rule 44 (tipo -> FLOAT .)
    COMMA           reduce using rule 44 (tipo -> FLOAT .)
    RPAR            reduce using rule 44 (tipo -> FLOAT .)


state 22

    (45) tipo -> STRING .

    FUNCTION        reduce using rule 45 (tipo -> STRING .)
    SEMICOLON       reduce using rule 45 (tipo -> STRING .)
    COMMA           reduce using rule 45 (tipo -> STRING .)
    RPAR            reduce using rule 45 (tipo -> STRING .)


state 23

    (46) tipo -> BOOL .

    FUNCTION        reduce using rule 46 (tipo -> BOOL .)
    SEMICOLON       reduce using rule 46 (tipo -> BOOL .)
    COMMA           reduce using rule 46 (tipo -> BOOL .)
    RPAR            reduce using rule 46 (tipo -> BOOL .)


state 24

    (20) vars -> VAR declaracion . declaraciones
    (22) declaraciones -> . declaracion declaraciones
    (23) declaraciones -> . e
    (24) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (144) e -> .
    (25) declaracion1 -> . ID declaracion2 declaracion4

    VOID            reduce using rule 144 (e -> .)
    INT             reduce using rule 144 (e -> .)
    FLOAT           reduce using rule 144 (e -> .)
    STRING          reduce using rule 144 (e -> .)
    BOOL            reduce using rule 144 (e -> .)
    MAIN            reduce using rule 144 (e -> .)
    ID              shift and go to state 26

    declaracion                    shift and go to state 33
    declaraciones                  shift and go to state 34
    e                              shift and go to state 35
    declaracion1                   shift and go to state 25

state 25

    (24) declaracion -> declaracion1 . COLON declaracion5 SEMICOLON

    COLON           shift and go to state 36


state 26

    (25) declaracion1 -> ID . declaracion2 declaracion4
    (26) declaracion2 -> . LSBRAC CTEI RSBRAC declaracion3
    (27) declaracion2 -> . e
    (144) e -> .

    LSBRAC          shift and go to state 38
    COMMA           reduce using rule 144 (e -> .)
    COLON           reduce using rule 144 (e -> .)

    declaracion2                   shift and go to state 37
    e                              shift and go to state 39

state 27

    (5) clase -> CLASS inicializar_clase ID . clase1 LCBRAC clase2 clase3 RCBRAC clase
    (8) clase1 -> . LT INHERITS ID GT
    (9) clase1 -> . e
    (144) e -> .

    LT              shift and go to state 41
    LCBRAC          reduce using rule 144 (e -> .)

    clase1                         shift and go to state 40
    e                              shift and go to state 42

state 28

    (1) programa -> PROGRAM ID SEMICOLON goto_main clase vars funcion main .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON goto_main clase vars funcion main .)


state 29

    (3) main -> MAIN . LPAR RPAR main_start bloque

    LPAR            shift and go to state 43


state 30

    (34) funcion -> funcion1 FUNCTION . ID LPAR funcion2 RPAR bloque funcion

    ID              shift and go to state 44


state 31

    (37) funcion1 -> VOID funcion_void .

    FUNCTION        reduce using rule 37 (funcion1 -> VOID funcion_void .)


state 32

    (38) funcion_void -> e .

    FUNCTION        reduce using rule 38 (funcion_void -> e .)


state 33

    (22) declaraciones -> declaracion . declaraciones
    (22) declaraciones -> . declaracion declaraciones
    (23) declaraciones -> . e
    (24) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (144) e -> .
    (25) declaracion1 -> . ID declaracion2 declaracion4

    VOID            reduce using rule 144 (e -> .)
    INT             reduce using rule 144 (e -> .)
    FLOAT           reduce using rule 144 (e -> .)
    STRING          reduce using rule 144 (e -> .)
    BOOL            reduce using rule 144 (e -> .)
    MAIN            reduce using rule 144 (e -> .)
    ID              shift and go to state 26

    declaracion                    shift and go to state 33
    declaraciones                  shift and go to state 45
    e                              shift and go to state 35
    declaracion1                   shift and go to state 25

state 34

    (20) vars -> VAR declaracion declaraciones .

    VOID            reduce using rule 20 (vars -> VAR declaracion declaraciones .)
    INT             reduce using rule 20 (vars -> VAR declaracion declaraciones .)
    FLOAT           reduce using rule 20 (vars -> VAR declaracion declaraciones .)
    STRING          reduce using rule 20 (vars -> VAR declaracion declaraciones .)
    BOOL            reduce using rule 20 (vars -> VAR declaracion declaraciones .)
    MAIN            reduce using rule 20 (vars -> VAR declaracion declaraciones .)


state 35

    (23) declaraciones -> e .

    VOID            reduce using rule 23 (declaraciones -> e .)
    INT             reduce using rule 23 (declaraciones -> e .)
    FLOAT           reduce using rule 23 (declaraciones -> e .)
    STRING          reduce using rule 23 (declaraciones -> e .)
    BOOL            reduce using rule 23 (declaraciones -> e .)
    MAIN            reduce using rule 23 (declaraciones -> e .)


state 36

    (24) declaracion -> declaracion1 COLON . declaracion5 SEMICOLON
    (32) declaracion5 -> . tipo
    (33) declaracion5 -> . ID
    (43) tipo -> . INT
    (44) tipo -> . FLOAT
    (45) tipo -> . STRING
    (46) tipo -> . BOOL

    ID              shift and go to state 48
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

    declaracion5                   shift and go to state 46
    tipo                           shift and go to state 47

state 37

    (25) declaracion1 -> ID declaracion2 . declaracion4
    (30) declaracion4 -> . COMMA declaracion1
    (31) declaracion4 -> . e
    (144) e -> .

    COMMA           shift and go to state 50
    COLON           reduce using rule 144 (e -> .)

    declaracion4                   shift and go to state 49
    e                              shift and go to state 51

state 38

    (26) declaracion2 -> LSBRAC . CTEI RSBRAC declaracion3

    CTEI            shift and go to state 52


state 39

    (27) declaracion2 -> e .

    COMMA           reduce using rule 27 (declaracion2 -> e .)
    COLON           reduce using rule 27 (declaracion2 -> e .)


state 40

    (5) clase -> CLASS inicializar_clase ID clase1 . LCBRAC clase2 clase3 RCBRAC clase

    LCBRAC          shift and go to state 53


state 41

    (8) clase1 -> LT . INHERITS ID GT

    INHERITS        shift and go to state 54


state 42

    (9) clase1 -> e .

    LCBRAC          reduce using rule 9 (clase1 -> e .)


state 43

    (3) main -> MAIN LPAR . RPAR main_start bloque

    RPAR            shift and go to state 55


state 44

    (34) funcion -> funcion1 FUNCTION ID . LPAR funcion2 RPAR bloque funcion

    LPAR            shift and go to state 56


state 45

    (22) declaraciones -> declaracion declaraciones .

    VOID            reduce using rule 22 (declaraciones -> declaracion declaraciones .)
    INT             reduce using rule 22 (declaraciones -> declaracion declaraciones .)
    FLOAT           reduce using rule 22 (declaraciones -> declaracion declaraciones .)
    STRING          reduce using rule 22 (declaraciones -> declaracion declaraciones .)
    BOOL            reduce using rule 22 (declaraciones -> declaracion declaraciones .)
    MAIN            reduce using rule 22 (declaraciones -> declaracion declaraciones .)


state 46

    (24) declaracion -> declaracion1 COLON declaracion5 . SEMICOLON

    SEMICOLON       shift and go to state 57


state 47

    (32) declaracion5 -> tipo .

    SEMICOLON       reduce using rule 32 (declaracion5 -> tipo .)


state 48

    (33) declaracion5 -> ID .

    SEMICOLON       reduce using rule 33 (declaracion5 -> ID .)


state 49

    (25) declaracion1 -> ID declaracion2 declaracion4 .

    COLON           reduce using rule 25 (declaracion1 -> ID declaracion2 declaracion4 .)


state 50

    (30) declaracion4 -> COMMA . declaracion1
    (25) declaracion1 -> . ID declaracion2 declaracion4

    ID              shift and go to state 26

    declaracion1                   shift and go to state 58

state 51

    (31) declaracion4 -> e .

    COLON           reduce using rule 31 (declaracion4 -> e .)


state 52

    (26) declaracion2 -> LSBRAC CTEI . RSBRAC declaracion3

    RSBRAC          shift and go to state 59


state 53

    (5) clase -> CLASS inicializar_clase ID clase1 LCBRAC . clase2 clase3 RCBRAC clase
    (10) clase2 -> . ATTRIBUTES declaracion atributos asign
    (11) clase2 -> . e
    (144) e -> .

    ATTRIBUTES      shift and go to state 61
    METHODS         reduce using rule 144 (e -> .)
    RCBRAC          reduce using rule 144 (e -> .)

    clase2                         shift and go to state 60
    e                              shift and go to state 62

state 54

    (8) clase1 -> LT INHERITS . ID GT

    ID              shift and go to state 63


state 55

    (3) main -> MAIN LPAR RPAR . main_start bloque
    (4) main_start -> . e
    (144) e -> .

    LCBRAC          reduce using rule 144 (e -> .)

    main_start                     shift and go to state 64
    e                              shift and go to state 65

state 56

    (34) funcion -> funcion1 FUNCTION ID LPAR . funcion2 RPAR bloque funcion
    (39) funcion2 -> . ID COLON tipo funcion3
    (40) funcion2 -> . e
    (144) e -> .

    ID              shift and go to state 66
    RPAR            reduce using rule 144 (e -> .)

    funcion2                       shift and go to state 67
    e                              shift and go to state 68

state 57

    (24) declaracion -> declaracion1 COLON declaracion5 SEMICOLON .

    ID              reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    VOID            reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    INT             reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    FLOAT           reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    STRING          reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    BOOL            reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    MAIN            reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    METHODS         reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)
    RCBRAC          reduce using rule 24 (declaracion -> declaracion1 COLON declaracion5 SEMICOLON .)


state 58

    (30) declaracion4 -> COMMA declaracion1 .

    COLON           reduce using rule 30 (declaracion4 -> COMMA declaracion1 .)


state 59

    (26) declaracion2 -> LSBRAC CTEI RSBRAC . declaracion3
    (28) declaracion3 -> . LSBRAC CTEI RSBRAC
    (29) declaracion3 -> . e
    (144) e -> .

    LSBRAC          shift and go to state 69
    COMMA           reduce using rule 144 (e -> .)
    COLON           reduce using rule 144 (e -> .)

    declaracion3                   shift and go to state 70
    e                              shift and go to state 71

state 60

    (5) clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 . clase3 RCBRAC clase
    (16) clase3 -> . METHODS funcion metodos
    (17) clase3 -> . e
    (144) e -> .

    METHODS         shift and go to state 73
    RCBRAC          reduce using rule 144 (e -> .)

    clase3                         shift and go to state 72
    e                              shift and go to state 74

state 61

    (10) clase2 -> ATTRIBUTES . declaracion atributos asign
    (24) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (25) declaracion1 -> . ID declaracion2 declaracion4

    ID              shift and go to state 26

    declaracion                    shift and go to state 75
    declaracion1                   shift and go to state 25

state 62

    (11) clase2 -> e .

    METHODS         reduce using rule 11 (clase2 -> e .)
    RCBRAC          reduce using rule 11 (clase2 -> e .)


state 63

    (8) clase1 -> LT INHERITS ID . GT

    GT              shift and go to state 76


state 64

    (3) main -> MAIN LPAR RPAR main_start . bloque
    (47) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 78

    bloque                         shift and go to state 77

state 65

    (4) main_start -> e .

    LCBRAC          reduce using rule 4 (main_start -> e .)


state 66

    (39) funcion2 -> ID . COLON tipo funcion3

    COLON           shift and go to state 79


state 67

    (34) funcion -> funcion1 FUNCTION ID LPAR funcion2 . RPAR bloque funcion

    RPAR            shift and go to state 80


state 68

    (40) funcion2 -> e .

    RPAR            reduce using rule 40 (funcion2 -> e .)


state 69

    (28) declaracion3 -> LSBRAC . CTEI RSBRAC

    CTEI            shift and go to state 81


state 70

    (26) declaracion2 -> LSBRAC CTEI RSBRAC declaracion3 .

    COMMA           reduce using rule 26 (declaracion2 -> LSBRAC CTEI RSBRAC declaracion3 .)
    COLON           reduce using rule 26 (declaracion2 -> LSBRAC CTEI RSBRAC declaracion3 .)


state 71

    (29) declaracion3 -> e .

    COMMA           reduce using rule 29 (declaracion3 -> e .)
    COLON           reduce using rule 29 (declaracion3 -> e .)


state 72

    (5) clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 . RCBRAC clase

    RCBRAC          shift and go to state 82


state 73

    (16) clase3 -> METHODS . funcion metodos
    (34) funcion -> . funcion1 FUNCTION ID LPAR funcion2 RPAR bloque funcion
    (35) funcion -> . e
    (36) funcion1 -> . tipo
    (37) funcion1 -> . VOID funcion_void
    (144) e -> .
    (43) tipo -> . INT
    (44) tipo -> . FLOAT
    (45) tipo -> . STRING
    (46) tipo -> . BOOL

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    VOID            shift and go to state 19
    RCBRAC          reduce using rule 144 (e -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

  ! VOID            [ reduce using rule 144 (e -> .) ]
  ! INT             [ reduce using rule 144 (e -> .) ]
  ! FLOAT           [ reduce using rule 144 (e -> .) ]
  ! STRING          [ reduce using rule 144 (e -> .) ]
  ! BOOL            [ reduce using rule 144 (e -> .) ]

    funcion                        shift and go to state 83
    funcion1                       shift and go to state 16
    e                              shift and go to state 17
    tipo                           shift and go to state 18

state 74

    (17) clase3 -> e .

    RCBRAC          reduce using rule 17 (clase3 -> e .)


state 75

    (10) clase2 -> ATTRIBUTES declaracion . atributos asign
    (12) atributos -> . declaracion atributos
    (13) atributos -> . e
    (24) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (144) e -> .
    (25) declaracion1 -> . ID declaracion2 declaracion4

  ! shift/reduce conflict for ID resolved as shift
    METHODS         reduce using rule 144 (e -> .)
    RCBRAC          reduce using rule 144 (e -> .)
    ID              shift and go to state 26

  ! ID              [ reduce using rule 144 (e -> .) ]

    declaracion                    shift and go to state 84
    atributos                      shift and go to state 85
    e                              shift and go to state 86
    declaracion1                   shift and go to state 25

state 76

    (8) clase1 -> LT INHERITS ID GT .

    LCBRAC          reduce using rule 8 (clase1 -> LT INHERITS ID GT .)


state 77

    (3) main -> MAIN LPAR RPAR main_start bloque .

    $end            reduce using rule 3 (main -> MAIN LPAR RPAR main_start bloque .)


state 78

    (47) bloque -> LCBRAC . estatutos RCBRAC
    (48) estatutos -> . estatuto estatutos
    (49) estatutos -> . e
    (50) estatuto -> . asignacion
    (51) estatuto -> . condicion
    (52) estatuto -> . llamada
    (53) estatuto -> . leer
    (54) estatuto -> . escribir
    (55) estatuto -> . ciclo_w
    (56) estatuto -> . ciclo_f
    (57) estatuto -> . regresar
    (144) e -> .
    (58) asignacion -> . variable EQ expresion SEMICOLON
    (66) condicion -> . IF LPAR expresion RPAR gotoF bloque condicion1 fill
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON
    (79) leer -> . READ LPAR variable add_read generar_cuadr RPAR SEMICOLON
    (81) escribir -> . WRITE LPAR escribir1 RPAR SEMICOLON
    (88) ciclo_w -> . WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while
    (91) ciclo_f -> . FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go
    (99) regresar -> . RETURN expresion SEMICOLON
    (59) variable -> . ID variable1 variable2

    RCBRAC          reduce using rule 144 (e -> .)
    IF              shift and go to state 99
    ID              shift and go to state 100
    READ            shift and go to state 101
    WRITE           shift and go to state 102
    WHILE           shift and go to state 103
    FROM            shift and go to state 104
    RETURN          shift and go to state 105

    estatutos                      shift and go to state 87
    estatuto                       shift and go to state 88
    e                              shift and go to state 89
    asignacion                     shift and go to state 90
    condicion                      shift and go to state 91
    llamada                        shift and go to state 92
    leer                           shift and go to state 93
    escribir                       shift and go to state 94
    ciclo_w                        shift and go to state 95
    ciclo_f                        shift and go to state 96
    regresar                       shift and go to state 97
    variable                       shift and go to state 98

state 79

    (39) funcion2 -> ID COLON . tipo funcion3
    (43) tipo -> . INT
    (44) tipo -> . FLOAT
    (45) tipo -> . STRING
    (46) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

    tipo                           shift and go to state 106

state 80

    (34) funcion -> funcion1 FUNCTION ID LPAR funcion2 RPAR . bloque funcion
    (47) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 78

    bloque                         shift and go to state 107

state 81

    (28) declaracion3 -> LSBRAC CTEI . RSBRAC

    RSBRAC          shift and go to state 108


state 82

    (5) clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC . clase
    (5) clase -> . CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase
    (6) clase -> . e
    (144) e -> .

    CLASS           shift and go to state 8
    VAR             reduce using rule 144 (e -> .)
    VOID            reduce using rule 144 (e -> .)
    INT             reduce using rule 144 (e -> .)
    FLOAT           reduce using rule 144 (e -> .)
    STRING          reduce using rule 144 (e -> .)
    BOOL            reduce using rule 144 (e -> .)
    MAIN            reduce using rule 144 (e -> .)

    clase                          shift and go to state 109
    e                              shift and go to state 9

state 83

    (16) clase3 -> METHODS funcion . metodos
    (18) metodos -> . funcion metodos
    (19) metodos -> . e
    (34) funcion -> . funcion1 FUNCTION ID LPAR funcion2 RPAR bloque funcion
    (35) funcion -> . e
    (144) e -> .
    (36) funcion1 -> . tipo
    (37) funcion1 -> . VOID funcion_void
    (43) tipo -> . INT
    (44) tipo -> . FLOAT
    (45) tipo -> . STRING
    (46) tipo -> . BOOL

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    RCBRAC          reduce using rule 144 (e -> .)
    VOID            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

  ! VOID            [ reduce using rule 144 (e -> .) ]
  ! INT             [ reduce using rule 144 (e -> .) ]
  ! FLOAT           [ reduce using rule 144 (e -> .) ]
  ! STRING          [ reduce using rule 144 (e -> .) ]
  ! BOOL            [ reduce using rule 144 (e -> .) ]

    funcion                        shift and go to state 110
    metodos                        shift and go to state 111
    e                              shift and go to state 112
    funcion1                       shift and go to state 16
    tipo                           shift and go to state 18

state 84

    (12) atributos -> declaracion . atributos
    (12) atributos -> . declaracion atributos
    (13) atributos -> . e
    (24) declaracion -> . declaracion1 COLON declaracion5 SEMICOLON
    (144) e -> .
    (25) declaracion1 -> . ID declaracion2 declaracion4

  ! shift/reduce conflict for ID resolved as shift
    METHODS         reduce using rule 144 (e -> .)
    RCBRAC          reduce using rule 144 (e -> .)
    ID              shift and go to state 26

  ! ID              [ reduce using rule 144 (e -> .) ]

    declaracion                    shift and go to state 84
    atributos                      shift and go to state 113
    e                              shift and go to state 86
    declaracion1                   shift and go to state 25

state 85

    (10) clase2 -> ATTRIBUTES declaracion atributos . asign
    (14) asign -> . asignacion asign
    (15) asign -> . e
    (58) asignacion -> . variable EQ expresion SEMICOLON
    (144) e -> .
    (59) variable -> . ID variable1 variable2

    METHODS         reduce using rule 144 (e -> .)
    RCBRAC          reduce using rule 144 (e -> .)
    ID              shift and go to state 117

    asign                          shift and go to state 114
    asignacion                     shift and go to state 115
    e                              shift and go to state 116
    variable                       shift and go to state 98

state 86

    (13) atributos -> e .

    ID              reduce using rule 13 (atributos -> e .)
    METHODS         reduce using rule 13 (atributos -> e .)
    RCBRAC          reduce using rule 13 (atributos -> e .)


state 87

    (47) bloque -> LCBRAC estatutos . RCBRAC

    RCBRAC          shift and go to state 118


state 88

    (48) estatutos -> estatuto . estatutos
    (48) estatutos -> . estatuto estatutos
    (49) estatutos -> . e
    (50) estatuto -> . asignacion
    (51) estatuto -> . condicion
    (52) estatuto -> . llamada
    (53) estatuto -> . leer
    (54) estatuto -> . escribir
    (55) estatuto -> . ciclo_w
    (56) estatuto -> . ciclo_f
    (57) estatuto -> . regresar
    (144) e -> .
    (58) asignacion -> . variable EQ expresion SEMICOLON
    (66) condicion -> . IF LPAR expresion RPAR gotoF bloque condicion1 fill
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON
    (79) leer -> . READ LPAR variable add_read generar_cuadr RPAR SEMICOLON
    (81) escribir -> . WRITE LPAR escribir1 RPAR SEMICOLON
    (88) ciclo_w -> . WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while
    (91) ciclo_f -> . FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go
    (99) regresar -> . RETURN expresion SEMICOLON
    (59) variable -> . ID variable1 variable2

    RCBRAC          reduce using rule 144 (e -> .)
    IF              shift and go to state 99
    ID              shift and go to state 100
    READ            shift and go to state 101
    WRITE           shift and go to state 102
    WHILE           shift and go to state 103
    FROM            shift and go to state 104
    RETURN          shift and go to state 105

    estatuto                       shift and go to state 88
    estatutos                      shift and go to state 119
    e                              shift and go to state 89
    asignacion                     shift and go to state 90
    condicion                      shift and go to state 91
    llamada                        shift and go to state 92
    leer                           shift and go to state 93
    escribir                       shift and go to state 94
    ciclo_w                        shift and go to state 95
    ciclo_f                        shift and go to state 96
    regresar                       shift and go to state 97
    variable                       shift and go to state 98

state 89

    (49) estatutos -> e .

    RCBRAC          reduce using rule 49 (estatutos -> e .)


state 90

    (50) estatuto -> asignacion .

    IF              reduce using rule 50 (estatuto -> asignacion .)
    ID              reduce using rule 50 (estatuto -> asignacion .)
    READ            reduce using rule 50 (estatuto -> asignacion .)
    WRITE           reduce using rule 50 (estatuto -> asignacion .)
    WHILE           reduce using rule 50 (estatuto -> asignacion .)
    FROM            reduce using rule 50 (estatuto -> asignacion .)
    RETURN          reduce using rule 50 (estatuto -> asignacion .)
    RCBRAC          reduce using rule 50 (estatuto -> asignacion .)


state 91

    (51) estatuto -> condicion .

    IF              reduce using rule 51 (estatuto -> condicion .)
    ID              reduce using rule 51 (estatuto -> condicion .)
    READ            reduce using rule 51 (estatuto -> condicion .)
    WRITE           reduce using rule 51 (estatuto -> condicion .)
    WHILE           reduce using rule 51 (estatuto -> condicion .)
    FROM            reduce using rule 51 (estatuto -> condicion .)
    RETURN          reduce using rule 51 (estatuto -> condicion .)
    RCBRAC          reduce using rule 51 (estatuto -> condicion .)


state 92

    (52) estatuto -> llamada .

    IF              reduce using rule 52 (estatuto -> llamada .)
    ID              reduce using rule 52 (estatuto -> llamada .)
    READ            reduce using rule 52 (estatuto -> llamada .)
    WRITE           reduce using rule 52 (estatuto -> llamada .)
    WHILE           reduce using rule 52 (estatuto -> llamada .)
    FROM            reduce using rule 52 (estatuto -> llamada .)
    RETURN          reduce using rule 52 (estatuto -> llamada .)
    RCBRAC          reduce using rule 52 (estatuto -> llamada .)


state 93

    (53) estatuto -> leer .

    IF              reduce using rule 53 (estatuto -> leer .)
    ID              reduce using rule 53 (estatuto -> leer .)
    READ            reduce using rule 53 (estatuto -> leer .)
    WRITE           reduce using rule 53 (estatuto -> leer .)
    WHILE           reduce using rule 53 (estatuto -> leer .)
    FROM            reduce using rule 53 (estatuto -> leer .)
    RETURN          reduce using rule 53 (estatuto -> leer .)
    RCBRAC          reduce using rule 53 (estatuto -> leer .)


state 94

    (54) estatuto -> escribir .

    IF              reduce using rule 54 (estatuto -> escribir .)
    ID              reduce using rule 54 (estatuto -> escribir .)
    READ            reduce using rule 54 (estatuto -> escribir .)
    WRITE           reduce using rule 54 (estatuto -> escribir .)
    WHILE           reduce using rule 54 (estatuto -> escribir .)
    FROM            reduce using rule 54 (estatuto -> escribir .)
    RETURN          reduce using rule 54 (estatuto -> escribir .)
    RCBRAC          reduce using rule 54 (estatuto -> escribir .)


state 95

    (55) estatuto -> ciclo_w .

    IF              reduce using rule 55 (estatuto -> ciclo_w .)
    ID              reduce using rule 55 (estatuto -> ciclo_w .)
    READ            reduce using rule 55 (estatuto -> ciclo_w .)
    WRITE           reduce using rule 55 (estatuto -> ciclo_w .)
    WHILE           reduce using rule 55 (estatuto -> ciclo_w .)
    FROM            reduce using rule 55 (estatuto -> ciclo_w .)
    RETURN          reduce using rule 55 (estatuto -> ciclo_w .)
    RCBRAC          reduce using rule 55 (estatuto -> ciclo_w .)


state 96

    (56) estatuto -> ciclo_f .

    IF              reduce using rule 56 (estatuto -> ciclo_f .)
    ID              reduce using rule 56 (estatuto -> ciclo_f .)
    READ            reduce using rule 56 (estatuto -> ciclo_f .)
    WRITE           reduce using rule 56 (estatuto -> ciclo_f .)
    WHILE           reduce using rule 56 (estatuto -> ciclo_f .)
    FROM            reduce using rule 56 (estatuto -> ciclo_f .)
    RETURN          reduce using rule 56 (estatuto -> ciclo_f .)
    RCBRAC          reduce using rule 56 (estatuto -> ciclo_f .)


state 97

    (57) estatuto -> regresar .

    IF              reduce using rule 57 (estatuto -> regresar .)
    ID              reduce using rule 57 (estatuto -> regresar .)
    READ            reduce using rule 57 (estatuto -> regresar .)
    WRITE           reduce using rule 57 (estatuto -> regresar .)
    WHILE           reduce using rule 57 (estatuto -> regresar .)
    FROM            reduce using rule 57 (estatuto -> regresar .)
    RETURN          reduce using rule 57 (estatuto -> regresar .)
    RCBRAC          reduce using rule 57 (estatuto -> regresar .)


state 98

    (58) asignacion -> variable . EQ expresion SEMICOLON

    EQ              shift and go to state 120


state 99

    (66) condicion -> IF . LPAR expresion RPAR gotoF bloque condicion1 fill

    LPAR            shift and go to state 121


state 100

    (72) llamada -> ID . llamada1 LPAR llamada2 RPAR SEMICOLON
    (59) variable -> ID . variable1 variable2
    (73) llamada1 -> . DOT ID
    (74) llamada1 -> . e
    (60) variable1 -> . DOT ID
    (61) variable1 -> . e
    (144) e -> .

    DOT             shift and go to state 124
    LPAR            reduce using rule 144 (e -> .)
    LSBRAC          reduce using rule 144 (e -> .)
    EQ              reduce using rule 144 (e -> .)

    llamada1                       shift and go to state 122
    variable1                      shift and go to state 123
    e                              shift and go to state 125

state 101

    (79) leer -> READ . LPAR variable add_read generar_cuadr RPAR SEMICOLON

    LPAR            shift and go to state 126


state 102

    (81) escribir -> WRITE . LPAR escribir1 RPAR SEMICOLON

    LPAR            shift and go to state 127


state 103

    (88) ciclo_w -> WHILE . push_while LPAR expresion RPAR gotoF DO bloque return_while
    (89) push_while -> . e
    (144) e -> .

    LPAR            reduce using rule 144 (e -> .)

    push_while                     shift and go to state 128
    e                              shift and go to state 129

state 104

    (91) ciclo_f -> FROM . LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go

    LPAR            shift and go to state 130


state 105

    (99) regresar -> RETURN . expresion SEMICOLON
    (100) expresion -> . a_exp exp1
    (105) a_exp -> . b_exp exp2
    (109) b_exp -> . c_exp exp3
    (119) c_exp -> . d_exp exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    expresion                      shift and go to state 131
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 106

    (39) funcion2 -> ID COLON tipo . funcion3
    (41) funcion3 -> . COMMA ID COLON tipo funcion3
    (42) funcion3 -> . e
    (144) e -> .

    COMMA           shift and go to state 147
    RPAR            reduce using rule 144 (e -> .)

    funcion3                       shift and go to state 146
    e                              shift and go to state 148

state 107

    (34) funcion -> funcion1 FUNCTION ID LPAR funcion2 RPAR bloque . funcion
    (34) funcion -> . funcion1 FUNCTION ID LPAR funcion2 RPAR bloque funcion
    (35) funcion -> . e
    (36) funcion1 -> . tipo
    (37) funcion1 -> . VOID funcion_void
    (144) e -> .
    (43) tipo -> . INT
    (44) tipo -> . FLOAT
    (45) tipo -> . STRING
    (46) tipo -> . BOOL

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    VOID            shift and go to state 19
    MAIN            reduce using rule 144 (e -> .)
    RCBRAC          reduce using rule 144 (e -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

  ! VOID            [ reduce using rule 144 (e -> .) ]
  ! INT             [ reduce using rule 144 (e -> .) ]
  ! FLOAT           [ reduce using rule 144 (e -> .) ]
  ! STRING          [ reduce using rule 144 (e -> .) ]
  ! BOOL            [ reduce using rule 144 (e -> .) ]

    funcion1                       shift and go to state 16
    funcion                        shift and go to state 149
    e                              shift and go to state 17
    tipo                           shift and go to state 18

state 108

    (28) declaracion3 -> LSBRAC CTEI RSBRAC .

    COMMA           reduce using rule 28 (declaracion3 -> LSBRAC CTEI RSBRAC .)
    COLON           reduce using rule 28 (declaracion3 -> LSBRAC CTEI RSBRAC .)


state 109

    (5) clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .

    VAR             reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)
    VOID            reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)
    INT             reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)
    FLOAT           reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)
    STRING          reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)
    BOOL            reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)
    MAIN            reduce using rule 5 (clase -> CLASS inicializar_clase ID clase1 LCBRAC clase2 clase3 RCBRAC clase .)


state 110

    (18) metodos -> funcion . metodos
    (18) metodos -> . funcion metodos
    (19) metodos -> . e
    (34) funcion -> . funcion1 FUNCTION ID LPAR funcion2 RPAR bloque funcion
    (35) funcion -> . e
    (144) e -> .
    (36) funcion1 -> . tipo
    (37) funcion1 -> . VOID funcion_void
    (43) tipo -> . INT
    (44) tipo -> . FLOAT
    (45) tipo -> . STRING
    (46) tipo -> . BOOL

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    RCBRAC          reduce using rule 144 (e -> .)
    VOID            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

  ! VOID            [ reduce using rule 144 (e -> .) ]
  ! INT             [ reduce using rule 144 (e -> .) ]
  ! FLOAT           [ reduce using rule 144 (e -> .) ]
  ! STRING          [ reduce using rule 144 (e -> .) ]
  ! BOOL            [ reduce using rule 144 (e -> .) ]

    funcion                        shift and go to state 110
    metodos                        shift and go to state 150
    e                              shift and go to state 112
    funcion1                       shift and go to state 16
    tipo                           shift and go to state 18

state 111

    (16) clase3 -> METHODS funcion metodos .

    RCBRAC          reduce using rule 16 (clase3 -> METHODS funcion metodos .)


state 112

    (19) metodos -> e .
    (35) funcion -> e .

  ! reduce/reduce conflict for RCBRAC resolved using rule 19 (metodos -> e .)
    RCBRAC          reduce using rule 19 (metodos -> e .)
    VOID            reduce using rule 35 (funcion -> e .)
    INT             reduce using rule 35 (funcion -> e .)
    FLOAT           reduce using rule 35 (funcion -> e .)
    STRING          reduce using rule 35 (funcion -> e .)
    BOOL            reduce using rule 35 (funcion -> e .)

  ! RCBRAC          [ reduce using rule 35 (funcion -> e .) ]


state 113

    (12) atributos -> declaracion atributos .

    ID              reduce using rule 12 (atributos -> declaracion atributos .)
    METHODS         reduce using rule 12 (atributos -> declaracion atributos .)
    RCBRAC          reduce using rule 12 (atributos -> declaracion atributos .)


state 114

    (10) clase2 -> ATTRIBUTES declaracion atributos asign .

    METHODS         reduce using rule 10 (clase2 -> ATTRIBUTES declaracion atributos asign .)
    RCBRAC          reduce using rule 10 (clase2 -> ATTRIBUTES declaracion atributos asign .)


state 115

    (14) asign -> asignacion . asign
    (14) asign -> . asignacion asign
    (15) asign -> . e
    (58) asignacion -> . variable EQ expresion SEMICOLON
    (144) e -> .
    (59) variable -> . ID variable1 variable2

    METHODS         reduce using rule 144 (e -> .)
    RCBRAC          reduce using rule 144 (e -> .)
    ID              shift and go to state 117

    asignacion                     shift and go to state 115
    asign                          shift and go to state 151
    e                              shift and go to state 116
    variable                       shift and go to state 98

state 116

    (15) asign -> e .

    METHODS         reduce using rule 15 (asign -> e .)
    RCBRAC          reduce using rule 15 (asign -> e .)


state 117

    (59) variable -> ID . variable1 variable2
    (60) variable1 -> . DOT ID
    (61) variable1 -> . e
    (144) e -> .

    DOT             shift and go to state 152
    LSBRAC          reduce using rule 144 (e -> .)
    EQ              reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)

    variable1                      shift and go to state 123
    e                              shift and go to state 153

state 118

    (47) bloque -> LCBRAC estatutos RCBRAC .

    $end            reduce using rule 47 (bloque -> LCBRAC estatutos RCBRAC .)
    VOID            reduce using rule 47 (bloque -> LCBRAC estatutos RCBRAC .)
    INT             reduce using rule 47 (bloque -> LCBRAC estatutos RCBRAC .)
    FLOAT           reduce using rule 47 (bloque -> LCBRAC estatutos RCBRAC .)
    STRING          reduce using rule 47 (bloque -> LCBRAC estatutos RCBRAC .)
    BOOL            reduce using rule 47 (bloque -> LCBRAC estatutos RCBRAC .)
    MAIN            reduce using rule 47 (bloque -> LCBRAC estatutos RCBRAC .)
    RCBRAC          reduce using rule 47 (bloque -> LCBRAC estatutos RCBRAC .)
    ELSE            reduce using rule 47 (bloque -> LCBRAC estatutos RCBRAC .)
    IF              reduce using rule 47 (bloque -> LCBRAC estatutos RCBRAC .)
    ID              reduce using rule 47 (bloque -> LCBRAC estatutos RCBRAC .)
    READ            reduce using rule 47 (bloque -> LCBRAC estatutos RCBRAC .)
    WRITE           reduce using rule 47 (bloque -> LCBRAC estatutos RCBRAC .)
    WHILE           reduce using rule 47 (bloque -> LCBRAC estatutos RCBRAC .)
    FROM            reduce using rule 47 (bloque -> LCBRAC estatutos RCBRAC .)
    RETURN          reduce using rule 47 (bloque -> LCBRAC estatutos RCBRAC .)


state 119

    (48) estatutos -> estatuto estatutos .

    RCBRAC          reduce using rule 48 (estatutos -> estatuto estatutos .)


state 120

    (58) asignacion -> variable EQ . expresion SEMICOLON
    (100) expresion -> . a_exp exp1
    (105) a_exp -> . b_exp exp2
    (109) b_exp -> . c_exp exp3
    (119) c_exp -> . d_exp exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    variable                       shift and go to state 139
    expresion                      shift and go to state 154
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    llamada                        shift and go to state 140

state 121

    (66) condicion -> IF LPAR . expresion RPAR gotoF bloque condicion1 fill
    (100) expresion -> . a_exp exp1
    (105) a_exp -> . b_exp exp2
    (109) b_exp -> . c_exp exp3
    (119) c_exp -> . d_exp exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    expresion                      shift and go to state 155
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 122

    (72) llamada -> ID llamada1 . LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 156


state 123

    (59) variable -> ID variable1 . variable2
    (62) variable2 -> . LSBRAC expresion RSBRAC variable3
    (63) variable2 -> . e
    (144) e -> .

    LSBRAC          shift and go to state 158
    EQ              reduce using rule 144 (e -> .)
    MULT            reduce using rule 144 (e -> .)
    DIV             reduce using rule 144 (e -> .)
    PLUS            reduce using rule 144 (e -> .)
    MINUS           reduce using rule 144 (e -> .)
    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    variable2                      shift and go to state 157
    e                              shift and go to state 159

state 124

    (73) llamada1 -> DOT . ID
    (60) variable1 -> DOT . ID

    ID              shift and go to state 160


state 125

    (74) llamada1 -> e .
    (61) variable1 -> e .

    LPAR            reduce using rule 74 (llamada1 -> e .)
    LSBRAC          reduce using rule 61 (variable1 -> e .)
    EQ              reduce using rule 61 (variable1 -> e .)


state 126

    (79) leer -> READ LPAR . variable add_read generar_cuadr RPAR SEMICOLON
    (59) variable -> . ID variable1 variable2

    ID              shift and go to state 117

    variable                       shift and go to state 161

state 127

    (81) escribir -> WRITE LPAR . escribir1 RPAR SEMICOLON
    (82) escribir1 -> . texto add_print generar_cuadr escribir2
    (83) escribir1 -> . expresion add_print generar_cuadr escribir2
    (87) texto -> . CTESTR
    (100) expresion -> . a_exp exp1
    (105) a_exp -> . b_exp exp2
    (109) b_exp -> . c_exp exp3
    (119) c_exp -> . d_exp exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    CTESTR          shift and go to state 165
    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    escribir1                      shift and go to state 162
    texto                          shift and go to state 163
    expresion                      shift and go to state 164
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 128

    (88) ciclo_w -> WHILE push_while . LPAR expresion RPAR gotoF DO bloque return_while

    LPAR            shift and go to state 166


state 129

    (89) push_while -> e .

    LPAR            reduce using rule 89 (push_while -> e .)


state 130

    (91) ciclo_f -> FROM LPAR . variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go
    (59) variable -> . ID variable1 variable2

    ID              shift and go to state 117

    variable                       shift and go to state 167

state 131

    (99) regresar -> RETURN expresion . SEMICOLON

    SEMICOLON       shift and go to state 168


state 132

    (100) expresion -> a_exp . exp1
    (101) exp1 -> . OR push_or a_exp pop_operador exp1
    (102) exp1 -> . e
    (144) e -> .

    OR              shift and go to state 170
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    exp1                           shift and go to state 169
    e                              shift and go to state 171

state 133

    (105) a_exp -> b_exp . exp2
    (106) exp2 -> . AND push_and b_exp pop_operador exp2
    (107) exp2 -> . e
    (144) e -> .

    AND             shift and go to state 173
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    exp2                           shift and go to state 172
    e                              shift and go to state 174

state 134

    (109) b_exp -> c_exp . exp3
    (110) exp3 -> . LT push_lt c_exp pop_operador exp3
    (111) exp3 -> . GT push_gt c_exp pop_operador exp3
    (112) exp3 -> . COMP push_comp c_exp pop_operador exp3
    (113) exp3 -> . NOTEQ push_noteq c_exp pop_operador exp3
    (114) exp3 -> . e
    (144) e -> .

    LT              shift and go to state 176
    GT              shift and go to state 177
    COMP            shift and go to state 178
    NOTEQ           shift and go to state 179
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    exp3                           shift and go to state 175
    e                              shift and go to state 180

state 135

    (119) c_exp -> d_exp . exp4
    (120) exp4 -> . PLUS push_plus d_exp pop_operador exp4
    (121) exp4 -> . MINUS push_minus d_exp pop_operador exp4
    (122) exp4 -> . e
    (144) e -> .

    PLUS            shift and go to state 182
    MINUS           shift and go to state 183
    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    exp4                           shift and go to state 181
    e                              shift and go to state 184

state 136

    (125) d_exp -> e_exp . exp5
    (126) exp5 -> . MULT push_mult e_exp pop_operador exp5
    (127) exp5 -> . DIV push_div e_exp pop_operador exp5
    (128) exp5 -> . e
    (144) e -> .

    MULT            shift and go to state 186
    DIV             shift and go to state 187
    PLUS            reduce using rule 144 (e -> .)
    MINUS           reduce using rule 144 (e -> .)
    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    exp5                           shift and go to state 185
    e                              shift and go to state 188

state 137

    (131) e_exp -> LPAR . expresion RPAR
    (100) expresion -> . a_exp exp1
    (105) a_exp -> . b_exp exp2
    (109) b_exp -> . c_exp exp3
    (119) c_exp -> . d_exp exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    expresion                      shift and go to state 189
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 138

    (132) e_exp -> var_cte .

    MULT            reduce using rule 132 (e_exp -> var_cte .)
    DIV             reduce using rule 132 (e_exp -> var_cte .)
    PLUS            reduce using rule 132 (e_exp -> var_cte .)
    MINUS           reduce using rule 132 (e_exp -> var_cte .)
    LT              reduce using rule 132 (e_exp -> var_cte .)
    GT              reduce using rule 132 (e_exp -> var_cte .)
    COMP            reduce using rule 132 (e_exp -> var_cte .)
    NOTEQ           reduce using rule 132 (e_exp -> var_cte .)
    AND             reduce using rule 132 (e_exp -> var_cte .)
    OR              reduce using rule 132 (e_exp -> var_cte .)
    SEMICOLON       reduce using rule 132 (e_exp -> var_cte .)
    RPAR            reduce using rule 132 (e_exp -> var_cte .)
    COMMA           reduce using rule 132 (e_exp -> var_cte .)
    RSBRAC          reduce using rule 132 (e_exp -> var_cte .)
    TO              reduce using rule 132 (e_exp -> var_cte .)


state 139

    (133) e_exp -> variable .

    MULT            reduce using rule 133 (e_exp -> variable .)
    DIV             reduce using rule 133 (e_exp -> variable .)
    PLUS            reduce using rule 133 (e_exp -> variable .)
    MINUS           reduce using rule 133 (e_exp -> variable .)
    LT              reduce using rule 133 (e_exp -> variable .)
    GT              reduce using rule 133 (e_exp -> variable .)
    COMP            reduce using rule 133 (e_exp -> variable .)
    NOTEQ           reduce using rule 133 (e_exp -> variable .)
    AND             reduce using rule 133 (e_exp -> variable .)
    OR              reduce using rule 133 (e_exp -> variable .)
    SEMICOLON       reduce using rule 133 (e_exp -> variable .)
    RPAR            reduce using rule 133 (e_exp -> variable .)
    COMMA           reduce using rule 133 (e_exp -> variable .)
    RSBRAC          reduce using rule 133 (e_exp -> variable .)
    TO              reduce using rule 133 (e_exp -> variable .)


state 140

    (134) e_exp -> llamada .

    MULT            reduce using rule 134 (e_exp -> llamada .)
    DIV             reduce using rule 134 (e_exp -> llamada .)
    PLUS            reduce using rule 134 (e_exp -> llamada .)
    MINUS           reduce using rule 134 (e_exp -> llamada .)
    LT              reduce using rule 134 (e_exp -> llamada .)
    GT              reduce using rule 134 (e_exp -> llamada .)
    COMP            reduce using rule 134 (e_exp -> llamada .)
    NOTEQ           reduce using rule 134 (e_exp -> llamada .)
    AND             reduce using rule 134 (e_exp -> llamada .)
    OR              reduce using rule 134 (e_exp -> llamada .)
    SEMICOLON       reduce using rule 134 (e_exp -> llamada .)
    RPAR            reduce using rule 134 (e_exp -> llamada .)
    COMMA           reduce using rule 134 (e_exp -> llamada .)
    RSBRAC          reduce using rule 134 (e_exp -> llamada .)
    TO              reduce using rule 134 (e_exp -> llamada .)


state 141

    (135) var_cte -> CTEI . ctei
    (139) ctei -> . e
    (144) e -> .

    MULT            reduce using rule 144 (e -> .)
    DIV             reduce using rule 144 (e -> .)
    PLUS            reduce using rule 144 (e -> .)
    MINUS           reduce using rule 144 (e -> .)
    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    ctei                           shift and go to state 190
    e                              shift and go to state 191

state 142

    (136) var_cte -> CTEF . ctef
    (140) ctef -> . e
    (144) e -> .

    MULT            reduce using rule 144 (e -> .)
    DIV             reduce using rule 144 (e -> .)
    PLUS            reduce using rule 144 (e -> .)
    MINUS           reduce using rule 144 (e -> .)
    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    ctef                           shift and go to state 192
    e                              shift and go to state 193

state 143

    (137) var_cte -> CTESTR . ctestr
    (141) ctestr -> . e
    (144) e -> .

    MULT            reduce using rule 144 (e -> .)
    DIV             reduce using rule 144 (e -> .)
    PLUS            reduce using rule 144 (e -> .)
    MINUS           reduce using rule 144 (e -> .)
    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    ctestr                         shift and go to state 194
    e                              shift and go to state 195

state 144

    (138) var_cte -> CTEB . cteb
    (142) cteb -> . e
    (144) e -> .

    MULT            reduce using rule 144 (e -> .)
    DIV             reduce using rule 144 (e -> .)
    PLUS            reduce using rule 144 (e -> .)
    MINUS           reduce using rule 144 (e -> .)
    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    cteb                           shift and go to state 196
    e                              shift and go to state 197

state 145

    (59) variable -> ID . variable1 variable2
    (72) llamada -> ID . llamada1 LPAR llamada2 RPAR SEMICOLON
    (60) variable1 -> . DOT ID
    (61) variable1 -> . e
    (73) llamada1 -> . DOT ID
    (74) llamada1 -> . e
    (144) e -> .

    DOT             shift and go to state 198
    LSBRAC          reduce using rule 144 (e -> .)
    MULT            reduce using rule 144 (e -> .)
    DIV             reduce using rule 144 (e -> .)
    PLUS            reduce using rule 144 (e -> .)
    MINUS           reduce using rule 144 (e -> .)
    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)
    LPAR            reduce using rule 144 (e -> .)

    variable1                      shift and go to state 123
    llamada1                       shift and go to state 122
    e                              shift and go to state 199

state 146

    (39) funcion2 -> ID COLON tipo funcion3 .

    RPAR            reduce using rule 39 (funcion2 -> ID COLON tipo funcion3 .)


state 147

    (41) funcion3 -> COMMA . ID COLON tipo funcion3

    ID              shift and go to state 200


state 148

    (42) funcion3 -> e .

    RPAR            reduce using rule 42 (funcion3 -> e .)


state 149

    (34) funcion -> funcion1 FUNCTION ID LPAR funcion2 RPAR bloque funcion .

    MAIN            reduce using rule 34 (funcion -> funcion1 FUNCTION ID LPAR funcion2 RPAR bloque funcion .)
    VOID            reduce using rule 34 (funcion -> funcion1 FUNCTION ID LPAR funcion2 RPAR bloque funcion .)
    INT             reduce using rule 34 (funcion -> funcion1 FUNCTION ID LPAR funcion2 RPAR bloque funcion .)
    FLOAT           reduce using rule 34 (funcion -> funcion1 FUNCTION ID LPAR funcion2 RPAR bloque funcion .)
    STRING          reduce using rule 34 (funcion -> funcion1 FUNCTION ID LPAR funcion2 RPAR bloque funcion .)
    BOOL            reduce using rule 34 (funcion -> funcion1 FUNCTION ID LPAR funcion2 RPAR bloque funcion .)
    RCBRAC          reduce using rule 34 (funcion -> funcion1 FUNCTION ID LPAR funcion2 RPAR bloque funcion .)


state 150

    (18) metodos -> funcion metodos .

    RCBRAC          reduce using rule 18 (metodos -> funcion metodos .)


state 151

    (14) asign -> asignacion asign .

    METHODS         reduce using rule 14 (asign -> asignacion asign .)
    RCBRAC          reduce using rule 14 (asign -> asignacion asign .)


state 152

    (60) variable1 -> DOT . ID

    ID              shift and go to state 201


state 153

    (61) variable1 -> e .

    LSBRAC          reduce using rule 61 (variable1 -> e .)
    EQ              reduce using rule 61 (variable1 -> e .)
    RPAR            reduce using rule 61 (variable1 -> e .)


state 154

    (58) asignacion -> variable EQ expresion . SEMICOLON

    SEMICOLON       shift and go to state 202


state 155

    (66) condicion -> IF LPAR expresion . RPAR gotoF bloque condicion1 fill

    RPAR            shift and go to state 203


state 156

    (72) llamada -> ID llamada1 LPAR . llamada2 RPAR SEMICOLON
    (75) llamada2 -> . expresion llamada3
    (76) llamada2 -> . e
    (100) expresion -> . a_exp exp1
    (144) e -> .
    (105) a_exp -> . b_exp exp2
    (109) b_exp -> . c_exp exp3
    (119) c_exp -> . d_exp exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    RPAR            reduce using rule 144 (e -> .)
    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    llamada2                       shift and go to state 204
    expresion                      shift and go to state 205
    e                              shift and go to state 206
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 157

    (59) variable -> ID variable1 variable2 .

    EQ              reduce using rule 59 (variable -> ID variable1 variable2 .)
    MULT            reduce using rule 59 (variable -> ID variable1 variable2 .)
    DIV             reduce using rule 59 (variable -> ID variable1 variable2 .)
    PLUS            reduce using rule 59 (variable -> ID variable1 variable2 .)
    MINUS           reduce using rule 59 (variable -> ID variable1 variable2 .)
    LT              reduce using rule 59 (variable -> ID variable1 variable2 .)
    GT              reduce using rule 59 (variable -> ID variable1 variable2 .)
    COMP            reduce using rule 59 (variable -> ID variable1 variable2 .)
    NOTEQ           reduce using rule 59 (variable -> ID variable1 variable2 .)
    AND             reduce using rule 59 (variable -> ID variable1 variable2 .)
    OR              reduce using rule 59 (variable -> ID variable1 variable2 .)
    SEMICOLON       reduce using rule 59 (variable -> ID variable1 variable2 .)
    RPAR            reduce using rule 59 (variable -> ID variable1 variable2 .)
    COMMA           reduce using rule 59 (variable -> ID variable1 variable2 .)
    RSBRAC          reduce using rule 59 (variable -> ID variable1 variable2 .)
    TO              reduce using rule 59 (variable -> ID variable1 variable2 .)


state 158

    (62) variable2 -> LSBRAC . expresion RSBRAC variable3
    (100) expresion -> . a_exp exp1
    (105) a_exp -> . b_exp exp2
    (109) b_exp -> . c_exp exp3
    (119) c_exp -> . d_exp exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    expresion                      shift and go to state 207
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 159

    (63) variable2 -> e .

    EQ              reduce using rule 63 (variable2 -> e .)
    MULT            reduce using rule 63 (variable2 -> e .)
    DIV             reduce using rule 63 (variable2 -> e .)
    PLUS            reduce using rule 63 (variable2 -> e .)
    MINUS           reduce using rule 63 (variable2 -> e .)
    LT              reduce using rule 63 (variable2 -> e .)
    GT              reduce using rule 63 (variable2 -> e .)
    COMP            reduce using rule 63 (variable2 -> e .)
    NOTEQ           reduce using rule 63 (variable2 -> e .)
    AND             reduce using rule 63 (variable2 -> e .)
    OR              reduce using rule 63 (variable2 -> e .)
    SEMICOLON       reduce using rule 63 (variable2 -> e .)
    RPAR            reduce using rule 63 (variable2 -> e .)
    COMMA           reduce using rule 63 (variable2 -> e .)
    RSBRAC          reduce using rule 63 (variable2 -> e .)
    TO              reduce using rule 63 (variable2 -> e .)


state 160

    (73) llamada1 -> DOT ID .
    (60) variable1 -> DOT ID .

    LPAR            reduce using rule 73 (llamada1 -> DOT ID .)
    LSBRAC          reduce using rule 60 (variable1 -> DOT ID .)
    EQ              reduce using rule 60 (variable1 -> DOT ID .)


state 161

    (79) leer -> READ LPAR variable . add_read generar_cuadr RPAR SEMICOLON
    (80) add_read -> . e
    (144) e -> .

    RPAR            reduce using rule 144 (e -> .)

    add_read                       shift and go to state 208
    e                              shift and go to state 209

state 162

    (81) escribir -> WRITE LPAR escribir1 . RPAR SEMICOLON

    RPAR            shift and go to state 210


state 163

    (82) escribir1 -> texto . add_print generar_cuadr escribir2
    (84) add_print -> . e
    (144) e -> .

    COMMA           reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)

    add_print                      shift and go to state 211
    e                              shift and go to state 212

state 164

    (83) escribir1 -> expresion . add_print generar_cuadr escribir2
    (84) add_print -> . e
    (144) e -> .

    COMMA           reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)

    add_print                      shift and go to state 213
    e                              shift and go to state 212

state 165

    (87) texto -> CTESTR .
    (137) var_cte -> CTESTR . ctestr
    (141) ctestr -> . e
    (144) e -> .

  ! reduce/reduce conflict for COMMA resolved using rule 87 (texto -> CTESTR .)
  ! reduce/reduce conflict for RPAR resolved using rule 87 (texto -> CTESTR .)
    COMMA           reduce using rule 87 (texto -> CTESTR .)
    RPAR            reduce using rule 87 (texto -> CTESTR .)
    MULT            reduce using rule 144 (e -> .)
    DIV             reduce using rule 144 (e -> .)
    PLUS            reduce using rule 144 (e -> .)
    MINUS           reduce using rule 144 (e -> .)
    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)

  ! COMMA           [ reduce using rule 144 (e -> .) ]
  ! RPAR            [ reduce using rule 144 (e -> .) ]

    ctestr                         shift and go to state 194
    e                              shift and go to state 195

state 166

    (88) ciclo_w -> WHILE push_while LPAR . expresion RPAR gotoF DO bloque return_while
    (100) expresion -> . a_exp exp1
    (105) a_exp -> . b_exp exp2
    (109) b_exp -> . c_exp exp3
    (119) c_exp -> . d_exp exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    expresion                      shift and go to state 214
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 167

    (91) ciclo_f -> FROM LPAR variable . EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go

    EQ              shift and go to state 215


state 168

    (99) regresar -> RETURN expresion SEMICOLON .

    IF              reduce using rule 99 (regresar -> RETURN expresion SEMICOLON .)
    ID              reduce using rule 99 (regresar -> RETURN expresion SEMICOLON .)
    READ            reduce using rule 99 (regresar -> RETURN expresion SEMICOLON .)
    WRITE           reduce using rule 99 (regresar -> RETURN expresion SEMICOLON .)
    WHILE           reduce using rule 99 (regresar -> RETURN expresion SEMICOLON .)
    FROM            reduce using rule 99 (regresar -> RETURN expresion SEMICOLON .)
    RETURN          reduce using rule 99 (regresar -> RETURN expresion SEMICOLON .)
    RCBRAC          reduce using rule 99 (regresar -> RETURN expresion SEMICOLON .)


state 169

    (100) expresion -> a_exp exp1 .

    SEMICOLON       reduce using rule 100 (expresion -> a_exp exp1 .)
    RPAR            reduce using rule 100 (expresion -> a_exp exp1 .)
    COMMA           reduce using rule 100 (expresion -> a_exp exp1 .)
    RSBRAC          reduce using rule 100 (expresion -> a_exp exp1 .)
    TO              reduce using rule 100 (expresion -> a_exp exp1 .)


state 170

    (101) exp1 -> OR . push_or a_exp pop_operador exp1
    (103) push_or -> . e
    (144) e -> .

    LPAR            reduce using rule 144 (e -> .)
    CTEI            reduce using rule 144 (e -> .)
    CTEF            reduce using rule 144 (e -> .)
    CTESTR          reduce using rule 144 (e -> .)
    CTEB            reduce using rule 144 (e -> .)
    ID              reduce using rule 144 (e -> .)

    push_or                        shift and go to state 216
    e                              shift and go to state 217

state 171

    (102) exp1 -> e .

    SEMICOLON       reduce using rule 102 (exp1 -> e .)
    RPAR            reduce using rule 102 (exp1 -> e .)
    COMMA           reduce using rule 102 (exp1 -> e .)
    RSBRAC          reduce using rule 102 (exp1 -> e .)
    TO              reduce using rule 102 (exp1 -> e .)


state 172

    (105) a_exp -> b_exp exp2 .

    OR              reduce using rule 105 (a_exp -> b_exp exp2 .)
    SEMICOLON       reduce using rule 105 (a_exp -> b_exp exp2 .)
    RPAR            reduce using rule 105 (a_exp -> b_exp exp2 .)
    COMMA           reduce using rule 105 (a_exp -> b_exp exp2 .)
    RSBRAC          reduce using rule 105 (a_exp -> b_exp exp2 .)
    TO              reduce using rule 105 (a_exp -> b_exp exp2 .)


state 173

    (106) exp2 -> AND . push_and b_exp pop_operador exp2
    (108) push_and -> . e
    (144) e -> .

    LPAR            reduce using rule 144 (e -> .)
    CTEI            reduce using rule 144 (e -> .)
    CTEF            reduce using rule 144 (e -> .)
    CTESTR          reduce using rule 144 (e -> .)
    CTEB            reduce using rule 144 (e -> .)
    ID              reduce using rule 144 (e -> .)

    push_and                       shift and go to state 218
    e                              shift and go to state 219

state 174

    (107) exp2 -> e .

    OR              reduce using rule 107 (exp2 -> e .)
    SEMICOLON       reduce using rule 107 (exp2 -> e .)
    RPAR            reduce using rule 107 (exp2 -> e .)
    COMMA           reduce using rule 107 (exp2 -> e .)
    RSBRAC          reduce using rule 107 (exp2 -> e .)
    TO              reduce using rule 107 (exp2 -> e .)


state 175

    (109) b_exp -> c_exp exp3 .

    AND             reduce using rule 109 (b_exp -> c_exp exp3 .)
    OR              reduce using rule 109 (b_exp -> c_exp exp3 .)
    SEMICOLON       reduce using rule 109 (b_exp -> c_exp exp3 .)
    RPAR            reduce using rule 109 (b_exp -> c_exp exp3 .)
    COMMA           reduce using rule 109 (b_exp -> c_exp exp3 .)
    RSBRAC          reduce using rule 109 (b_exp -> c_exp exp3 .)
    TO              reduce using rule 109 (b_exp -> c_exp exp3 .)


state 176

    (110) exp3 -> LT . push_lt c_exp pop_operador exp3
    (115) push_lt -> . e
    (144) e -> .

    LPAR            reduce using rule 144 (e -> .)
    CTEI            reduce using rule 144 (e -> .)
    CTEF            reduce using rule 144 (e -> .)
    CTESTR          reduce using rule 144 (e -> .)
    CTEB            reduce using rule 144 (e -> .)
    ID              reduce using rule 144 (e -> .)

    push_lt                        shift and go to state 220
    e                              shift and go to state 221

state 177

    (111) exp3 -> GT . push_gt c_exp pop_operador exp3
    (116) push_gt -> . e
    (144) e -> .

    LPAR            reduce using rule 144 (e -> .)
    CTEI            reduce using rule 144 (e -> .)
    CTEF            reduce using rule 144 (e -> .)
    CTESTR          reduce using rule 144 (e -> .)
    CTEB            reduce using rule 144 (e -> .)
    ID              reduce using rule 144 (e -> .)

    push_gt                        shift and go to state 222
    e                              shift and go to state 223

state 178

    (112) exp3 -> COMP . push_comp c_exp pop_operador exp3
    (117) push_comp -> . e
    (144) e -> .

    LPAR            reduce using rule 144 (e -> .)
    CTEI            reduce using rule 144 (e -> .)
    CTEF            reduce using rule 144 (e -> .)
    CTESTR          reduce using rule 144 (e -> .)
    CTEB            reduce using rule 144 (e -> .)
    ID              reduce using rule 144 (e -> .)

    push_comp                      shift and go to state 224
    e                              shift and go to state 225

state 179

    (113) exp3 -> NOTEQ . push_noteq c_exp pop_operador exp3
    (118) push_noteq -> . e
    (144) e -> .

    LPAR            reduce using rule 144 (e -> .)
    CTEI            reduce using rule 144 (e -> .)
    CTEF            reduce using rule 144 (e -> .)
    CTESTR          reduce using rule 144 (e -> .)
    CTEB            reduce using rule 144 (e -> .)
    ID              reduce using rule 144 (e -> .)

    push_noteq                     shift and go to state 226
    e                              shift and go to state 227

state 180

    (114) exp3 -> e .

    AND             reduce using rule 114 (exp3 -> e .)
    OR              reduce using rule 114 (exp3 -> e .)
    SEMICOLON       reduce using rule 114 (exp3 -> e .)
    RPAR            reduce using rule 114 (exp3 -> e .)
    COMMA           reduce using rule 114 (exp3 -> e .)
    RSBRAC          reduce using rule 114 (exp3 -> e .)
    TO              reduce using rule 114 (exp3 -> e .)


state 181

    (119) c_exp -> d_exp exp4 .

    LT              reduce using rule 119 (c_exp -> d_exp exp4 .)
    GT              reduce using rule 119 (c_exp -> d_exp exp4 .)
    COMP            reduce using rule 119 (c_exp -> d_exp exp4 .)
    NOTEQ           reduce using rule 119 (c_exp -> d_exp exp4 .)
    AND             reduce using rule 119 (c_exp -> d_exp exp4 .)
    OR              reduce using rule 119 (c_exp -> d_exp exp4 .)
    SEMICOLON       reduce using rule 119 (c_exp -> d_exp exp4 .)
    RPAR            reduce using rule 119 (c_exp -> d_exp exp4 .)
    COMMA           reduce using rule 119 (c_exp -> d_exp exp4 .)
    RSBRAC          reduce using rule 119 (c_exp -> d_exp exp4 .)
    TO              reduce using rule 119 (c_exp -> d_exp exp4 .)


state 182

    (120) exp4 -> PLUS . push_plus d_exp pop_operador exp4
    (123) push_plus -> . e
    (144) e -> .

    LPAR            reduce using rule 144 (e -> .)
    CTEI            reduce using rule 144 (e -> .)
    CTEF            reduce using rule 144 (e -> .)
    CTESTR          reduce using rule 144 (e -> .)
    CTEB            reduce using rule 144 (e -> .)
    ID              reduce using rule 144 (e -> .)

    push_plus                      shift and go to state 228
    e                              shift and go to state 229

state 183

    (121) exp4 -> MINUS . push_minus d_exp pop_operador exp4
    (124) push_minus -> . e
    (144) e -> .

    LPAR            reduce using rule 144 (e -> .)
    CTEI            reduce using rule 144 (e -> .)
    CTEF            reduce using rule 144 (e -> .)
    CTESTR          reduce using rule 144 (e -> .)
    CTEB            reduce using rule 144 (e -> .)
    ID              reduce using rule 144 (e -> .)

    push_minus                     shift and go to state 230
    e                              shift and go to state 231

state 184

    (122) exp4 -> e .

    LT              reduce using rule 122 (exp4 -> e .)
    GT              reduce using rule 122 (exp4 -> e .)
    COMP            reduce using rule 122 (exp4 -> e .)
    NOTEQ           reduce using rule 122 (exp4 -> e .)
    AND             reduce using rule 122 (exp4 -> e .)
    OR              reduce using rule 122 (exp4 -> e .)
    SEMICOLON       reduce using rule 122 (exp4 -> e .)
    RPAR            reduce using rule 122 (exp4 -> e .)
    COMMA           reduce using rule 122 (exp4 -> e .)
    RSBRAC          reduce using rule 122 (exp4 -> e .)
    TO              reduce using rule 122 (exp4 -> e .)


state 185

    (125) d_exp -> e_exp exp5 .

    PLUS            reduce using rule 125 (d_exp -> e_exp exp5 .)
    MINUS           reduce using rule 125 (d_exp -> e_exp exp5 .)
    LT              reduce using rule 125 (d_exp -> e_exp exp5 .)
    GT              reduce using rule 125 (d_exp -> e_exp exp5 .)
    COMP            reduce using rule 125 (d_exp -> e_exp exp5 .)
    NOTEQ           reduce using rule 125 (d_exp -> e_exp exp5 .)
    AND             reduce using rule 125 (d_exp -> e_exp exp5 .)
    OR              reduce using rule 125 (d_exp -> e_exp exp5 .)
    SEMICOLON       reduce using rule 125 (d_exp -> e_exp exp5 .)
    RPAR            reduce using rule 125 (d_exp -> e_exp exp5 .)
    COMMA           reduce using rule 125 (d_exp -> e_exp exp5 .)
    RSBRAC          reduce using rule 125 (d_exp -> e_exp exp5 .)
    TO              reduce using rule 125 (d_exp -> e_exp exp5 .)


state 186

    (126) exp5 -> MULT . push_mult e_exp pop_operador exp5
    (129) push_mult -> . e
    (144) e -> .

    LPAR            reduce using rule 144 (e -> .)
    CTEI            reduce using rule 144 (e -> .)
    CTEF            reduce using rule 144 (e -> .)
    CTESTR          reduce using rule 144 (e -> .)
    CTEB            reduce using rule 144 (e -> .)
    ID              reduce using rule 144 (e -> .)

    push_mult                      shift and go to state 232
    e                              shift and go to state 233

state 187

    (127) exp5 -> DIV . push_div e_exp pop_operador exp5
    (130) push_div -> . e
    (144) e -> .

    LPAR            reduce using rule 144 (e -> .)
    CTEI            reduce using rule 144 (e -> .)
    CTEF            reduce using rule 144 (e -> .)
    CTESTR          reduce using rule 144 (e -> .)
    CTEB            reduce using rule 144 (e -> .)
    ID              reduce using rule 144 (e -> .)

    push_div                       shift and go to state 234
    e                              shift and go to state 235

state 188

    (128) exp5 -> e .

    PLUS            reduce using rule 128 (exp5 -> e .)
    MINUS           reduce using rule 128 (exp5 -> e .)
    LT              reduce using rule 128 (exp5 -> e .)
    GT              reduce using rule 128 (exp5 -> e .)
    COMP            reduce using rule 128 (exp5 -> e .)
    NOTEQ           reduce using rule 128 (exp5 -> e .)
    AND             reduce using rule 128 (exp5 -> e .)
    OR              reduce using rule 128 (exp5 -> e .)
    SEMICOLON       reduce using rule 128 (exp5 -> e .)
    RPAR            reduce using rule 128 (exp5 -> e .)
    COMMA           reduce using rule 128 (exp5 -> e .)
    RSBRAC          reduce using rule 128 (exp5 -> e .)
    TO              reduce using rule 128 (exp5 -> e .)


state 189

    (131) e_exp -> LPAR expresion . RPAR

    RPAR            shift and go to state 236


state 190

    (135) var_cte -> CTEI ctei .

    MULT            reduce using rule 135 (var_cte -> CTEI ctei .)
    DIV             reduce using rule 135 (var_cte -> CTEI ctei .)
    PLUS            reduce using rule 135 (var_cte -> CTEI ctei .)
    MINUS           reduce using rule 135 (var_cte -> CTEI ctei .)
    LT              reduce using rule 135 (var_cte -> CTEI ctei .)
    GT              reduce using rule 135 (var_cte -> CTEI ctei .)
    COMP            reduce using rule 135 (var_cte -> CTEI ctei .)
    NOTEQ           reduce using rule 135 (var_cte -> CTEI ctei .)
    AND             reduce using rule 135 (var_cte -> CTEI ctei .)
    OR              reduce using rule 135 (var_cte -> CTEI ctei .)
    SEMICOLON       reduce using rule 135 (var_cte -> CTEI ctei .)
    RPAR            reduce using rule 135 (var_cte -> CTEI ctei .)
    COMMA           reduce using rule 135 (var_cte -> CTEI ctei .)
    RSBRAC          reduce using rule 135 (var_cte -> CTEI ctei .)
    TO              reduce using rule 135 (var_cte -> CTEI ctei .)


state 191

    (139) ctei -> e .

    MULT            reduce using rule 139 (ctei -> e .)
    DIV             reduce using rule 139 (ctei -> e .)
    PLUS            reduce using rule 139 (ctei -> e .)
    MINUS           reduce using rule 139 (ctei -> e .)
    LT              reduce using rule 139 (ctei -> e .)
    GT              reduce using rule 139 (ctei -> e .)
    COMP            reduce using rule 139 (ctei -> e .)
    NOTEQ           reduce using rule 139 (ctei -> e .)
    AND             reduce using rule 139 (ctei -> e .)
    OR              reduce using rule 139 (ctei -> e .)
    SEMICOLON       reduce using rule 139 (ctei -> e .)
    RPAR            reduce using rule 139 (ctei -> e .)
    COMMA           reduce using rule 139 (ctei -> e .)
    RSBRAC          reduce using rule 139 (ctei -> e .)
    TO              reduce using rule 139 (ctei -> e .)


state 192

    (136) var_cte -> CTEF ctef .

    MULT            reduce using rule 136 (var_cte -> CTEF ctef .)
    DIV             reduce using rule 136 (var_cte -> CTEF ctef .)
    PLUS            reduce using rule 136 (var_cte -> CTEF ctef .)
    MINUS           reduce using rule 136 (var_cte -> CTEF ctef .)
    LT              reduce using rule 136 (var_cte -> CTEF ctef .)
    GT              reduce using rule 136 (var_cte -> CTEF ctef .)
    COMP            reduce using rule 136 (var_cte -> CTEF ctef .)
    NOTEQ           reduce using rule 136 (var_cte -> CTEF ctef .)
    AND             reduce using rule 136 (var_cte -> CTEF ctef .)
    OR              reduce using rule 136 (var_cte -> CTEF ctef .)
    SEMICOLON       reduce using rule 136 (var_cte -> CTEF ctef .)
    RPAR            reduce using rule 136 (var_cte -> CTEF ctef .)
    COMMA           reduce using rule 136 (var_cte -> CTEF ctef .)
    RSBRAC          reduce using rule 136 (var_cte -> CTEF ctef .)
    TO              reduce using rule 136 (var_cte -> CTEF ctef .)


state 193

    (140) ctef -> e .

    MULT            reduce using rule 140 (ctef -> e .)
    DIV             reduce using rule 140 (ctef -> e .)
    PLUS            reduce using rule 140 (ctef -> e .)
    MINUS           reduce using rule 140 (ctef -> e .)
    LT              reduce using rule 140 (ctef -> e .)
    GT              reduce using rule 140 (ctef -> e .)
    COMP            reduce using rule 140 (ctef -> e .)
    NOTEQ           reduce using rule 140 (ctef -> e .)
    AND             reduce using rule 140 (ctef -> e .)
    OR              reduce using rule 140 (ctef -> e .)
    SEMICOLON       reduce using rule 140 (ctef -> e .)
    RPAR            reduce using rule 140 (ctef -> e .)
    COMMA           reduce using rule 140 (ctef -> e .)
    RSBRAC          reduce using rule 140 (ctef -> e .)
    TO              reduce using rule 140 (ctef -> e .)


state 194

    (137) var_cte -> CTESTR ctestr .

    MULT            reduce using rule 137 (var_cte -> CTESTR ctestr .)
    DIV             reduce using rule 137 (var_cte -> CTESTR ctestr .)
    PLUS            reduce using rule 137 (var_cte -> CTESTR ctestr .)
    MINUS           reduce using rule 137 (var_cte -> CTESTR ctestr .)
    LT              reduce using rule 137 (var_cte -> CTESTR ctestr .)
    GT              reduce using rule 137 (var_cte -> CTESTR ctestr .)
    COMP            reduce using rule 137 (var_cte -> CTESTR ctestr .)
    NOTEQ           reduce using rule 137 (var_cte -> CTESTR ctestr .)
    AND             reduce using rule 137 (var_cte -> CTESTR ctestr .)
    OR              reduce using rule 137 (var_cte -> CTESTR ctestr .)
    SEMICOLON       reduce using rule 137 (var_cte -> CTESTR ctestr .)
    RPAR            reduce using rule 137 (var_cte -> CTESTR ctestr .)
    COMMA           reduce using rule 137 (var_cte -> CTESTR ctestr .)
    RSBRAC          reduce using rule 137 (var_cte -> CTESTR ctestr .)
    TO              reduce using rule 137 (var_cte -> CTESTR ctestr .)


state 195

    (141) ctestr -> e .

    MULT            reduce using rule 141 (ctestr -> e .)
    DIV             reduce using rule 141 (ctestr -> e .)
    PLUS            reduce using rule 141 (ctestr -> e .)
    MINUS           reduce using rule 141 (ctestr -> e .)
    LT              reduce using rule 141 (ctestr -> e .)
    GT              reduce using rule 141 (ctestr -> e .)
    COMP            reduce using rule 141 (ctestr -> e .)
    NOTEQ           reduce using rule 141 (ctestr -> e .)
    AND             reduce using rule 141 (ctestr -> e .)
    OR              reduce using rule 141 (ctestr -> e .)
    SEMICOLON       reduce using rule 141 (ctestr -> e .)
    RPAR            reduce using rule 141 (ctestr -> e .)
    COMMA           reduce using rule 141 (ctestr -> e .)
    RSBRAC          reduce using rule 141 (ctestr -> e .)
    TO              reduce using rule 141 (ctestr -> e .)


state 196

    (138) var_cte -> CTEB cteb .

    MULT            reduce using rule 138 (var_cte -> CTEB cteb .)
    DIV             reduce using rule 138 (var_cte -> CTEB cteb .)
    PLUS            reduce using rule 138 (var_cte -> CTEB cteb .)
    MINUS           reduce using rule 138 (var_cte -> CTEB cteb .)
    LT              reduce using rule 138 (var_cte -> CTEB cteb .)
    GT              reduce using rule 138 (var_cte -> CTEB cteb .)
    COMP            reduce using rule 138 (var_cte -> CTEB cteb .)
    NOTEQ           reduce using rule 138 (var_cte -> CTEB cteb .)
    AND             reduce using rule 138 (var_cte -> CTEB cteb .)
    OR              reduce using rule 138 (var_cte -> CTEB cteb .)
    SEMICOLON       reduce using rule 138 (var_cte -> CTEB cteb .)
    RPAR            reduce using rule 138 (var_cte -> CTEB cteb .)
    COMMA           reduce using rule 138 (var_cte -> CTEB cteb .)
    RSBRAC          reduce using rule 138 (var_cte -> CTEB cteb .)
    TO              reduce using rule 138 (var_cte -> CTEB cteb .)


state 197

    (142) cteb -> e .

    MULT            reduce using rule 142 (cteb -> e .)
    DIV             reduce using rule 142 (cteb -> e .)
    PLUS            reduce using rule 142 (cteb -> e .)
    MINUS           reduce using rule 142 (cteb -> e .)
    LT              reduce using rule 142 (cteb -> e .)
    GT              reduce using rule 142 (cteb -> e .)
    COMP            reduce using rule 142 (cteb -> e .)
    NOTEQ           reduce using rule 142 (cteb -> e .)
    AND             reduce using rule 142 (cteb -> e .)
    OR              reduce using rule 142 (cteb -> e .)
    SEMICOLON       reduce using rule 142 (cteb -> e .)
    RPAR            reduce using rule 142 (cteb -> e .)
    COMMA           reduce using rule 142 (cteb -> e .)
    RSBRAC          reduce using rule 142 (cteb -> e .)
    TO              reduce using rule 142 (cteb -> e .)


state 198

    (60) variable1 -> DOT . ID
    (73) llamada1 -> DOT . ID

    ID              shift and go to state 237


state 199

    (61) variable1 -> e .
    (74) llamada1 -> e .

    LSBRAC          reduce using rule 61 (variable1 -> e .)
    MULT            reduce using rule 61 (variable1 -> e .)
    DIV             reduce using rule 61 (variable1 -> e .)
    PLUS            reduce using rule 61 (variable1 -> e .)
    MINUS           reduce using rule 61 (variable1 -> e .)
    LT              reduce using rule 61 (variable1 -> e .)
    GT              reduce using rule 61 (variable1 -> e .)
    COMP            reduce using rule 61 (variable1 -> e .)
    NOTEQ           reduce using rule 61 (variable1 -> e .)
    AND             reduce using rule 61 (variable1 -> e .)
    OR              reduce using rule 61 (variable1 -> e .)
    SEMICOLON       reduce using rule 61 (variable1 -> e .)
    RPAR            reduce using rule 61 (variable1 -> e .)
    COMMA           reduce using rule 61 (variable1 -> e .)
    RSBRAC          reduce using rule 61 (variable1 -> e .)
    TO              reduce using rule 61 (variable1 -> e .)
    LPAR            reduce using rule 74 (llamada1 -> e .)


state 200

    (41) funcion3 -> COMMA ID . COLON tipo funcion3

    COLON           shift and go to state 238


state 201

    (60) variable1 -> DOT ID .

    LSBRAC          reduce using rule 60 (variable1 -> DOT ID .)
    EQ              reduce using rule 60 (variable1 -> DOT ID .)
    RPAR            reduce using rule 60 (variable1 -> DOT ID .)


state 202

    (58) asignacion -> variable EQ expresion SEMICOLON .

    IF              reduce using rule 58 (asignacion -> variable EQ expresion SEMICOLON .)
    ID              reduce using rule 58 (asignacion -> variable EQ expresion SEMICOLON .)
    READ            reduce using rule 58 (asignacion -> variable EQ expresion SEMICOLON .)
    WRITE           reduce using rule 58 (asignacion -> variable EQ expresion SEMICOLON .)
    WHILE           reduce using rule 58 (asignacion -> variable EQ expresion SEMICOLON .)
    FROM            reduce using rule 58 (asignacion -> variable EQ expresion SEMICOLON .)
    RETURN          reduce using rule 58 (asignacion -> variable EQ expresion SEMICOLON .)
    RCBRAC          reduce using rule 58 (asignacion -> variable EQ expresion SEMICOLON .)
    METHODS         reduce using rule 58 (asignacion -> variable EQ expresion SEMICOLON .)


state 203

    (66) condicion -> IF LPAR expresion RPAR . gotoF bloque condicion1 fill
    (67) gotoF -> . e
    (144) e -> .

    LCBRAC          reduce using rule 144 (e -> .)

    gotoF                          shift and go to state 239
    e                              shift and go to state 240

state 204

    (72) llamada -> ID llamada1 LPAR llamada2 . RPAR SEMICOLON

    RPAR            shift and go to state 241


state 205

    (75) llamada2 -> expresion . llamada3
    (77) llamada3 -> . COMMA expresion llamada3
    (78) llamada3 -> . e
    (144) e -> .

    COMMA           shift and go to state 243
    RPAR            reduce using rule 144 (e -> .)

    llamada3                       shift and go to state 242
    e                              shift and go to state 244

state 206

    (76) llamada2 -> e .

    RPAR            reduce using rule 76 (llamada2 -> e .)


state 207

    (62) variable2 -> LSBRAC expresion . RSBRAC variable3

    RSBRAC          shift and go to state 245


state 208

    (79) leer -> READ LPAR variable add_read . generar_cuadr RPAR SEMICOLON
    (143) generar_cuadr -> . e
    (144) e -> .

    RPAR            reduce using rule 144 (e -> .)

    generar_cuadr                  shift and go to state 246
    e                              shift and go to state 247

state 209

    (80) add_read -> e .

    RPAR            reduce using rule 80 (add_read -> e .)


state 210

    (81) escribir -> WRITE LPAR escribir1 RPAR . SEMICOLON

    SEMICOLON       shift and go to state 248


state 211

    (82) escribir1 -> texto add_print . generar_cuadr escribir2
    (143) generar_cuadr -> . e
    (144) e -> .

    COMMA           reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)

    generar_cuadr                  shift and go to state 249
    e                              shift and go to state 247

state 212

    (84) add_print -> e .

    COMMA           reduce using rule 84 (add_print -> e .)
    RPAR            reduce using rule 84 (add_print -> e .)


state 213

    (83) escribir1 -> expresion add_print . generar_cuadr escribir2
    (143) generar_cuadr -> . e
    (144) e -> .

    COMMA           reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)

    generar_cuadr                  shift and go to state 250
    e                              shift and go to state 247

state 214

    (88) ciclo_w -> WHILE push_while LPAR expresion . RPAR gotoF DO bloque return_while

    RPAR            shift and go to state 251


state 215

    (91) ciclo_f -> FROM LPAR variable EQ . expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go
    (100) expresion -> . a_exp exp1
    (105) a_exp -> . b_exp exp2
    (109) b_exp -> . c_exp exp3
    (119) c_exp -> . d_exp exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    variable                       shift and go to state 139
    expresion                      shift and go to state 252
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    llamada                        shift and go to state 140

state 216

    (101) exp1 -> OR push_or . a_exp pop_operador exp1
    (105) a_exp -> . b_exp exp2
    (109) b_exp -> . c_exp exp3
    (119) c_exp -> . d_exp exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    a_exp                          shift and go to state 253
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 217

    (103) push_or -> e .

    LPAR            reduce using rule 103 (push_or -> e .)
    CTEI            reduce using rule 103 (push_or -> e .)
    CTEF            reduce using rule 103 (push_or -> e .)
    CTESTR          reduce using rule 103 (push_or -> e .)
    CTEB            reduce using rule 103 (push_or -> e .)
    ID              reduce using rule 103 (push_or -> e .)


state 218

    (106) exp2 -> AND push_and . b_exp pop_operador exp2
    (109) b_exp -> . c_exp exp3
    (119) c_exp -> . d_exp exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    b_exp                          shift and go to state 254
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 219

    (108) push_and -> e .

    LPAR            reduce using rule 108 (push_and -> e .)
    CTEI            reduce using rule 108 (push_and -> e .)
    CTEF            reduce using rule 108 (push_and -> e .)
    CTESTR          reduce using rule 108 (push_and -> e .)
    CTEB            reduce using rule 108 (push_and -> e .)
    ID              reduce using rule 108 (push_and -> e .)


state 220

    (110) exp3 -> LT push_lt . c_exp pop_operador exp3
    (119) c_exp -> . d_exp exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    c_exp                          shift and go to state 255
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 221

    (115) push_lt -> e .

    LPAR            reduce using rule 115 (push_lt -> e .)
    CTEI            reduce using rule 115 (push_lt -> e .)
    CTEF            reduce using rule 115 (push_lt -> e .)
    CTESTR          reduce using rule 115 (push_lt -> e .)
    CTEB            reduce using rule 115 (push_lt -> e .)
    ID              reduce using rule 115 (push_lt -> e .)
    RPAR            reduce using rule 115 (push_lt -> e .)


state 222

    (111) exp3 -> GT push_gt . c_exp pop_operador exp3
    (119) c_exp -> . d_exp exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    c_exp                          shift and go to state 256
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 223

    (116) push_gt -> e .

    LPAR            reduce using rule 116 (push_gt -> e .)
    CTEI            reduce using rule 116 (push_gt -> e .)
    CTEF            reduce using rule 116 (push_gt -> e .)
    CTESTR          reduce using rule 116 (push_gt -> e .)
    CTEB            reduce using rule 116 (push_gt -> e .)
    ID              reduce using rule 116 (push_gt -> e .)


state 224

    (112) exp3 -> COMP push_comp . c_exp pop_operador exp3
    (119) c_exp -> . d_exp exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    c_exp                          shift and go to state 257
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 225

    (117) push_comp -> e .

    LPAR            reduce using rule 117 (push_comp -> e .)
    CTEI            reduce using rule 117 (push_comp -> e .)
    CTEF            reduce using rule 117 (push_comp -> e .)
    CTESTR          reduce using rule 117 (push_comp -> e .)
    CTEB            reduce using rule 117 (push_comp -> e .)
    ID              reduce using rule 117 (push_comp -> e .)


state 226

    (113) exp3 -> NOTEQ push_noteq . c_exp pop_operador exp3
    (119) c_exp -> . d_exp exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    c_exp                          shift and go to state 258
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 227

    (118) push_noteq -> e .

    LPAR            reduce using rule 118 (push_noteq -> e .)
    CTEI            reduce using rule 118 (push_noteq -> e .)
    CTEF            reduce using rule 118 (push_noteq -> e .)
    CTESTR          reduce using rule 118 (push_noteq -> e .)
    CTEB            reduce using rule 118 (push_noteq -> e .)
    ID              reduce using rule 118 (push_noteq -> e .)


state 228

    (120) exp4 -> PLUS push_plus . d_exp pop_operador exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    d_exp                          shift and go to state 259
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 229

    (123) push_plus -> e .

    LPAR            reduce using rule 123 (push_plus -> e .)
    CTEI            reduce using rule 123 (push_plus -> e .)
    CTEF            reduce using rule 123 (push_plus -> e .)
    CTESTR          reduce using rule 123 (push_plus -> e .)
    CTEB            reduce using rule 123 (push_plus -> e .)
    ID              reduce using rule 123 (push_plus -> e .)
    IF              reduce using rule 123 (push_plus -> e .)
    READ            reduce using rule 123 (push_plus -> e .)
    WRITE           reduce using rule 123 (push_plus -> e .)
    WHILE           reduce using rule 123 (push_plus -> e .)
    FROM            reduce using rule 123 (push_plus -> e .)
    RETURN          reduce using rule 123 (push_plus -> e .)
    RCBRAC          reduce using rule 123 (push_plus -> e .)


state 230

    (121) exp4 -> MINUS push_minus . d_exp pop_operador exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    d_exp                          shift and go to state 260
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 231

    (124) push_minus -> e .

    LPAR            reduce using rule 124 (push_minus -> e .)
    CTEI            reduce using rule 124 (push_minus -> e .)
    CTEF            reduce using rule 124 (push_minus -> e .)
    CTESTR          reduce using rule 124 (push_minus -> e .)
    CTEB            reduce using rule 124 (push_minus -> e .)
    ID              reduce using rule 124 (push_minus -> e .)


state 232

    (126) exp5 -> MULT push_mult . e_exp pop_operador exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    e_exp                          shift and go to state 261
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 233

    (129) push_mult -> e .

    LPAR            reduce using rule 129 (push_mult -> e .)
    CTEI            reduce using rule 129 (push_mult -> e .)
    CTEF            reduce using rule 129 (push_mult -> e .)
    CTESTR          reduce using rule 129 (push_mult -> e .)
    CTEB            reduce using rule 129 (push_mult -> e .)
    ID              reduce using rule 129 (push_mult -> e .)


state 234

    (127) exp5 -> DIV push_div . e_exp pop_operador exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    e_exp                          shift and go to state 262
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 235

    (130) push_div -> e .

    LPAR            reduce using rule 130 (push_div -> e .)
    CTEI            reduce using rule 130 (push_div -> e .)
    CTEF            reduce using rule 130 (push_div -> e .)
    CTESTR          reduce using rule 130 (push_div -> e .)
    CTEB            reduce using rule 130 (push_div -> e .)
    ID              reduce using rule 130 (push_div -> e .)


state 236

    (131) e_exp -> LPAR expresion RPAR .

    MULT            reduce using rule 131 (e_exp -> LPAR expresion RPAR .)
    DIV             reduce using rule 131 (e_exp -> LPAR expresion RPAR .)
    PLUS            reduce using rule 131 (e_exp -> LPAR expresion RPAR .)
    MINUS           reduce using rule 131 (e_exp -> LPAR expresion RPAR .)
    LT              reduce using rule 131 (e_exp -> LPAR expresion RPAR .)
    GT              reduce using rule 131 (e_exp -> LPAR expresion RPAR .)
    COMP            reduce using rule 131 (e_exp -> LPAR expresion RPAR .)
    NOTEQ           reduce using rule 131 (e_exp -> LPAR expresion RPAR .)
    AND             reduce using rule 131 (e_exp -> LPAR expresion RPAR .)
    OR              reduce using rule 131 (e_exp -> LPAR expresion RPAR .)
    SEMICOLON       reduce using rule 131 (e_exp -> LPAR expresion RPAR .)
    RPAR            reduce using rule 131 (e_exp -> LPAR expresion RPAR .)
    COMMA           reduce using rule 131 (e_exp -> LPAR expresion RPAR .)
    RSBRAC          reduce using rule 131 (e_exp -> LPAR expresion RPAR .)
    TO              reduce using rule 131 (e_exp -> LPAR expresion RPAR .)


state 237

    (60) variable1 -> DOT ID .
    (73) llamada1 -> DOT ID .

    LSBRAC          reduce using rule 60 (variable1 -> DOT ID .)
    MULT            reduce using rule 60 (variable1 -> DOT ID .)
    DIV             reduce using rule 60 (variable1 -> DOT ID .)
    PLUS            reduce using rule 60 (variable1 -> DOT ID .)
    MINUS           reduce using rule 60 (variable1 -> DOT ID .)
    LT              reduce using rule 60 (variable1 -> DOT ID .)
    GT              reduce using rule 60 (variable1 -> DOT ID .)
    COMP            reduce using rule 60 (variable1 -> DOT ID .)
    NOTEQ           reduce using rule 60 (variable1 -> DOT ID .)
    AND             reduce using rule 60 (variable1 -> DOT ID .)
    OR              reduce using rule 60 (variable1 -> DOT ID .)
    SEMICOLON       reduce using rule 60 (variable1 -> DOT ID .)
    RPAR            reduce using rule 60 (variable1 -> DOT ID .)
    COMMA           reduce using rule 60 (variable1 -> DOT ID .)
    RSBRAC          reduce using rule 60 (variable1 -> DOT ID .)
    TO              reduce using rule 60 (variable1 -> DOT ID .)
    LPAR            reduce using rule 73 (llamada1 -> DOT ID .)


state 238

    (41) funcion3 -> COMMA ID COLON . tipo funcion3
    (43) tipo -> . INT
    (44) tipo -> . FLOAT
    (45) tipo -> . STRING
    (46) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    BOOL            shift and go to state 23

    tipo                           shift and go to state 263

state 239

    (66) condicion -> IF LPAR expresion RPAR gotoF . bloque condicion1 fill
    (47) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 78

    bloque                         shift and go to state 264

state 240

    (67) gotoF -> e .

    LCBRAC          reduce using rule 67 (gotoF -> e .)
    DO              reduce using rule 67 (gotoF -> e .)
    RPAR            reduce using rule 67 (gotoF -> e .)


state 241

    (72) llamada -> ID llamada1 LPAR llamada2 RPAR . SEMICOLON

    SEMICOLON       shift and go to state 265


state 242

    (75) llamada2 -> expresion llamada3 .

    RPAR            reduce using rule 75 (llamada2 -> expresion llamada3 .)


state 243

    (77) llamada3 -> COMMA . expresion llamada3
    (100) expresion -> . a_exp exp1
    (105) a_exp -> . b_exp exp2
    (109) b_exp -> . c_exp exp3
    (119) c_exp -> . d_exp exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    expresion                      shift and go to state 266
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 244

    (78) llamada3 -> e .

    RPAR            reduce using rule 78 (llamada3 -> e .)


state 245

    (62) variable2 -> LSBRAC expresion RSBRAC . variable3
    (64) variable3 -> . LSBRAC expresion RSBRAC
    (65) variable3 -> . e
    (144) e -> .

    LSBRAC          shift and go to state 267
    EQ              reduce using rule 144 (e -> .)
    MULT            reduce using rule 144 (e -> .)
    DIV             reduce using rule 144 (e -> .)
    PLUS            reduce using rule 144 (e -> .)
    MINUS           reduce using rule 144 (e -> .)
    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    variable3                      shift and go to state 268
    e                              shift and go to state 269

state 246

    (79) leer -> READ LPAR variable add_read generar_cuadr . RPAR SEMICOLON

    RPAR            shift and go to state 270


state 247

    (143) generar_cuadr -> e .

    RPAR            reduce using rule 143 (generar_cuadr -> e .)
    COMMA           reduce using rule 143 (generar_cuadr -> e .)


state 248

    (81) escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .

    IF              reduce using rule 81 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    ID              reduce using rule 81 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    READ            reduce using rule 81 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    WRITE           reduce using rule 81 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    WHILE           reduce using rule 81 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    FROM            reduce using rule 81 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    RETURN          reduce using rule 81 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)
    RCBRAC          reduce using rule 81 (escribir -> WRITE LPAR escribir1 RPAR SEMICOLON .)


state 249

    (82) escribir1 -> texto add_print generar_cuadr . escribir2
    (85) escribir2 -> . COMMA escribir1
    (86) escribir2 -> . e
    (144) e -> .

    COMMA           shift and go to state 272
    RPAR            reduce using rule 144 (e -> .)

    escribir2                      shift and go to state 271
    e                              shift and go to state 273

state 250

    (83) escribir1 -> expresion add_print generar_cuadr . escribir2
    (85) escribir2 -> . COMMA escribir1
    (86) escribir2 -> . e
    (144) e -> .

    COMMA           shift and go to state 272
    RPAR            reduce using rule 144 (e -> .)

    escribir2                      shift and go to state 274
    e                              shift and go to state 273

state 251

    (88) ciclo_w -> WHILE push_while LPAR expresion RPAR . gotoF DO bloque return_while
    (67) gotoF -> . e
    (144) e -> .

    DO              reduce using rule 144 (e -> .)

    gotoF                          shift and go to state 275
    e                              shift and go to state 240

state 252

    (91) ciclo_f -> FROM LPAR variable EQ expresion . asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go
    (92) asign_var -> . e
    (144) e -> .

    TO              reduce using rule 144 (e -> .)

    asign_var                      shift and go to state 276
    e                              shift and go to state 277

state 253

    (101) exp1 -> OR push_or a_exp . pop_operador exp1
    (104) pop_operador -> . e
    (144) e -> .

    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    pop_operador                   shift and go to state 278
    e                              shift and go to state 279

state 254

    (106) exp2 -> AND push_and b_exp . pop_operador exp2
    (104) pop_operador -> . e
    (144) e -> .

    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    pop_operador                   shift and go to state 280
    e                              shift and go to state 279

state 255

    (110) exp3 -> LT push_lt c_exp . pop_operador exp3
    (104) pop_operador -> . e
    (144) e -> .

    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    pop_operador                   shift and go to state 281
    e                              shift and go to state 279

state 256

    (111) exp3 -> GT push_gt c_exp . pop_operador exp3
    (104) pop_operador -> . e
    (144) e -> .

    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    pop_operador                   shift and go to state 282
    e                              shift and go to state 279

state 257

    (112) exp3 -> COMP push_comp c_exp . pop_operador exp3
    (104) pop_operador -> . e
    (144) e -> .

    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    pop_operador                   shift and go to state 283
    e                              shift and go to state 279

state 258

    (113) exp3 -> NOTEQ push_noteq c_exp . pop_operador exp3
    (104) pop_operador -> . e
    (144) e -> .

    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    pop_operador                   shift and go to state 284
    e                              shift and go to state 279

state 259

    (120) exp4 -> PLUS push_plus d_exp . pop_operador exp4
    (104) pop_operador -> . e
    (144) e -> .

    PLUS            reduce using rule 144 (e -> .)
    MINUS           reduce using rule 144 (e -> .)
    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    pop_operador                   shift and go to state 285
    e                              shift and go to state 279

state 260

    (121) exp4 -> MINUS push_minus d_exp . pop_operador exp4
    (104) pop_operador -> . e
    (144) e -> .

    PLUS            reduce using rule 144 (e -> .)
    MINUS           reduce using rule 144 (e -> .)
    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    pop_operador                   shift and go to state 286
    e                              shift and go to state 279

state 261

    (126) exp5 -> MULT push_mult e_exp . pop_operador exp5
    (104) pop_operador -> . e
    (144) e -> .

    MULT            reduce using rule 144 (e -> .)
    DIV             reduce using rule 144 (e -> .)
    PLUS            reduce using rule 144 (e -> .)
    MINUS           reduce using rule 144 (e -> .)
    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    pop_operador                   shift and go to state 287
    e                              shift and go to state 279

state 262

    (127) exp5 -> DIV push_div e_exp . pop_operador exp5
    (104) pop_operador -> . e
    (144) e -> .

    MULT            reduce using rule 144 (e -> .)
    DIV             reduce using rule 144 (e -> .)
    PLUS            reduce using rule 144 (e -> .)
    MINUS           reduce using rule 144 (e -> .)
    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    pop_operador                   shift and go to state 288
    e                              shift and go to state 279

state 263

    (41) funcion3 -> COMMA ID COLON tipo . funcion3
    (41) funcion3 -> . COMMA ID COLON tipo funcion3
    (42) funcion3 -> . e
    (144) e -> .

    COMMA           shift and go to state 147
    RPAR            reduce using rule 144 (e -> .)

    funcion3                       shift and go to state 289
    e                              shift and go to state 148

state 264

    (66) condicion -> IF LPAR expresion RPAR gotoF bloque . condicion1 fill
    (69) condicion1 -> . ELSE goto bloque
    (70) condicion1 -> . e
    (144) e -> .

    ELSE            shift and go to state 291
    IF              reduce using rule 144 (e -> .)
    ID              reduce using rule 144 (e -> .)
    READ            reduce using rule 144 (e -> .)
    WRITE           reduce using rule 144 (e -> .)
    WHILE           reduce using rule 144 (e -> .)
    FROM            reduce using rule 144 (e -> .)
    RETURN          reduce using rule 144 (e -> .)
    RCBRAC          reduce using rule 144 (e -> .)

    condicion1                     shift and go to state 290
    e                              shift and go to state 292

state 265

    (72) llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .

    IF              reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    ID              reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    READ            reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    WRITE           reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    WHILE           reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    FROM            reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    RETURN          reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    RCBRAC          reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    MULT            reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    DIV             reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    PLUS            reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    MINUS           reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    LT              reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    GT              reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    COMP            reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    NOTEQ           reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    AND             reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    OR              reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    SEMICOLON       reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    RPAR            reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    COMMA           reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    RSBRAC          reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)
    TO              reduce using rule 72 (llamada -> ID llamada1 LPAR llamada2 RPAR SEMICOLON .)


state 266

    (77) llamada3 -> COMMA expresion . llamada3
    (77) llamada3 -> . COMMA expresion llamada3
    (78) llamada3 -> . e
    (144) e -> .

    COMMA           shift and go to state 243
    RPAR            reduce using rule 144 (e -> .)

    llamada3                       shift and go to state 293
    e                              shift and go to state 244

state 267

    (64) variable3 -> LSBRAC . expresion RSBRAC
    (100) expresion -> . a_exp exp1
    (105) a_exp -> . b_exp exp2
    (109) b_exp -> . c_exp exp3
    (119) c_exp -> . d_exp exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    expresion                      shift and go to state 294
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 268

    (62) variable2 -> LSBRAC expresion RSBRAC variable3 .

    EQ              reduce using rule 62 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    MULT            reduce using rule 62 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    DIV             reduce using rule 62 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    PLUS            reduce using rule 62 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    MINUS           reduce using rule 62 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    LT              reduce using rule 62 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    GT              reduce using rule 62 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    COMP            reduce using rule 62 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    NOTEQ           reduce using rule 62 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    AND             reduce using rule 62 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    OR              reduce using rule 62 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    SEMICOLON       reduce using rule 62 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    RPAR            reduce using rule 62 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    COMMA           reduce using rule 62 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    RSBRAC          reduce using rule 62 (variable2 -> LSBRAC expresion RSBRAC variable3 .)
    TO              reduce using rule 62 (variable2 -> LSBRAC expresion RSBRAC variable3 .)


state 269

    (65) variable3 -> e .

    EQ              reduce using rule 65 (variable3 -> e .)
    MULT            reduce using rule 65 (variable3 -> e .)
    DIV             reduce using rule 65 (variable3 -> e .)
    PLUS            reduce using rule 65 (variable3 -> e .)
    MINUS           reduce using rule 65 (variable3 -> e .)
    LT              reduce using rule 65 (variable3 -> e .)
    GT              reduce using rule 65 (variable3 -> e .)
    COMP            reduce using rule 65 (variable3 -> e .)
    NOTEQ           reduce using rule 65 (variable3 -> e .)
    AND             reduce using rule 65 (variable3 -> e .)
    OR              reduce using rule 65 (variable3 -> e .)
    SEMICOLON       reduce using rule 65 (variable3 -> e .)
    RPAR            reduce using rule 65 (variable3 -> e .)
    COMMA           reduce using rule 65 (variable3 -> e .)
    RSBRAC          reduce using rule 65 (variable3 -> e .)
    TO              reduce using rule 65 (variable3 -> e .)


state 270

    (79) leer -> READ LPAR variable add_read generar_cuadr RPAR . SEMICOLON

    SEMICOLON       shift and go to state 295


state 271

    (82) escribir1 -> texto add_print generar_cuadr escribir2 .

    RPAR            reduce using rule 82 (escribir1 -> texto add_print generar_cuadr escribir2 .)


state 272

    (85) escribir2 -> COMMA . escribir1
    (82) escribir1 -> . texto add_print generar_cuadr escribir2
    (83) escribir1 -> . expresion add_print generar_cuadr escribir2
    (87) texto -> . CTESTR
    (100) expresion -> . a_exp exp1
    (105) a_exp -> . b_exp exp2
    (109) b_exp -> . c_exp exp3
    (119) c_exp -> . d_exp exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    CTESTR          shift and go to state 165
    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    escribir1                      shift and go to state 296
    texto                          shift and go to state 163
    expresion                      shift and go to state 164
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    variable                       shift and go to state 139
    llamada                        shift and go to state 140

state 273

    (86) escribir2 -> e .

    RPAR            reduce using rule 86 (escribir2 -> e .)


state 274

    (83) escribir1 -> expresion add_print generar_cuadr escribir2 .

    RPAR            reduce using rule 83 (escribir1 -> expresion add_print generar_cuadr escribir2 .)


state 275

    (88) ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF . DO bloque return_while

    DO              shift and go to state 297


state 276

    (91) ciclo_f -> FROM LPAR variable EQ expresion asign_var . TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go

    TO              shift and go to state 298


state 277

    (92) asign_var -> e .

    TO              reduce using rule 92 (asign_var -> e .)
    IF              reduce using rule 92 (asign_var -> e .)
    ID              reduce using rule 92 (asign_var -> e .)
    READ            reduce using rule 92 (asign_var -> e .)
    WRITE           reduce using rule 92 (asign_var -> e .)
    WHILE           reduce using rule 92 (asign_var -> e .)
    FROM            reduce using rule 92 (asign_var -> e .)
    RETURN          reduce using rule 92 (asign_var -> e .)
    RCBRAC          reduce using rule 92 (asign_var -> e .)


state 278

    (101) exp1 -> OR push_or a_exp pop_operador . exp1
    (101) exp1 -> . OR push_or a_exp pop_operador exp1
    (102) exp1 -> . e
    (144) e -> .

    OR              shift and go to state 170
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    exp1                           shift and go to state 299
    e                              shift and go to state 171

state 279

    (104) pop_operador -> e .

    OR              reduce using rule 104 (pop_operador -> e .)
    SEMICOLON       reduce using rule 104 (pop_operador -> e .)
    RPAR            reduce using rule 104 (pop_operador -> e .)
    COMMA           reduce using rule 104 (pop_operador -> e .)
    RSBRAC          reduce using rule 104 (pop_operador -> e .)
    TO              reduce using rule 104 (pop_operador -> e .)
    AND             reduce using rule 104 (pop_operador -> e .)
    LT              reduce using rule 104 (pop_operador -> e .)
    GT              reduce using rule 104 (pop_operador -> e .)
    COMP            reduce using rule 104 (pop_operador -> e .)
    NOTEQ           reduce using rule 104 (pop_operador -> e .)
    PLUS            reduce using rule 104 (pop_operador -> e .)
    MINUS           reduce using rule 104 (pop_operador -> e .)
    MULT            reduce using rule 104 (pop_operador -> e .)
    DIV             reduce using rule 104 (pop_operador -> e .)


state 280

    (106) exp2 -> AND push_and b_exp pop_operador . exp2
    (106) exp2 -> . AND push_and b_exp pop_operador exp2
    (107) exp2 -> . e
    (144) e -> .

    AND             shift and go to state 173
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    exp2                           shift and go to state 300
    e                              shift and go to state 174

state 281

    (110) exp3 -> LT push_lt c_exp pop_operador . exp3
    (110) exp3 -> . LT push_lt c_exp pop_operador exp3
    (111) exp3 -> . GT push_gt c_exp pop_operador exp3
    (112) exp3 -> . COMP push_comp c_exp pop_operador exp3
    (113) exp3 -> . NOTEQ push_noteq c_exp pop_operador exp3
    (114) exp3 -> . e
    (144) e -> .

    LT              shift and go to state 176
    GT              shift and go to state 177
    COMP            shift and go to state 178
    NOTEQ           shift and go to state 179
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    exp3                           shift and go to state 301
    e                              shift and go to state 180

state 282

    (111) exp3 -> GT push_gt c_exp pop_operador . exp3
    (110) exp3 -> . LT push_lt c_exp pop_operador exp3
    (111) exp3 -> . GT push_gt c_exp pop_operador exp3
    (112) exp3 -> . COMP push_comp c_exp pop_operador exp3
    (113) exp3 -> . NOTEQ push_noteq c_exp pop_operador exp3
    (114) exp3 -> . e
    (144) e -> .

    LT              shift and go to state 176
    GT              shift and go to state 177
    COMP            shift and go to state 178
    NOTEQ           shift and go to state 179
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    exp3                           shift and go to state 302
    e                              shift and go to state 180

state 283

    (112) exp3 -> COMP push_comp c_exp pop_operador . exp3
    (110) exp3 -> . LT push_lt c_exp pop_operador exp3
    (111) exp3 -> . GT push_gt c_exp pop_operador exp3
    (112) exp3 -> . COMP push_comp c_exp pop_operador exp3
    (113) exp3 -> . NOTEQ push_noteq c_exp pop_operador exp3
    (114) exp3 -> . e
    (144) e -> .

    LT              shift and go to state 176
    GT              shift and go to state 177
    COMP            shift and go to state 178
    NOTEQ           shift and go to state 179
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    exp3                           shift and go to state 303
    e                              shift and go to state 180

state 284

    (113) exp3 -> NOTEQ push_noteq c_exp pop_operador . exp3
    (110) exp3 -> . LT push_lt c_exp pop_operador exp3
    (111) exp3 -> . GT push_gt c_exp pop_operador exp3
    (112) exp3 -> . COMP push_comp c_exp pop_operador exp3
    (113) exp3 -> . NOTEQ push_noteq c_exp pop_operador exp3
    (114) exp3 -> . e
    (144) e -> .

    LT              shift and go to state 176
    GT              shift and go to state 177
    COMP            shift and go to state 178
    NOTEQ           shift and go to state 179
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    exp3                           shift and go to state 304
    e                              shift and go to state 180

state 285

    (120) exp4 -> PLUS push_plus d_exp pop_operador . exp4
    (120) exp4 -> . PLUS push_plus d_exp pop_operador exp4
    (121) exp4 -> . MINUS push_minus d_exp pop_operador exp4
    (122) exp4 -> . e
    (144) e -> .

    PLUS            shift and go to state 182
    MINUS           shift and go to state 183
    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    exp4                           shift and go to state 305
    e                              shift and go to state 184

state 286

    (121) exp4 -> MINUS push_minus d_exp pop_operador . exp4
    (120) exp4 -> . PLUS push_plus d_exp pop_operador exp4
    (121) exp4 -> . MINUS push_minus d_exp pop_operador exp4
    (122) exp4 -> . e
    (144) e -> .

    PLUS            shift and go to state 182
    MINUS           shift and go to state 183
    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    exp4                           shift and go to state 306
    e                              shift and go to state 184

state 287

    (126) exp5 -> MULT push_mult e_exp pop_operador . exp5
    (126) exp5 -> . MULT push_mult e_exp pop_operador exp5
    (127) exp5 -> . DIV push_div e_exp pop_operador exp5
    (128) exp5 -> . e
    (144) e -> .

    MULT            shift and go to state 186
    DIV             shift and go to state 187
    PLUS            reduce using rule 144 (e -> .)
    MINUS           reduce using rule 144 (e -> .)
    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    exp5                           shift and go to state 307
    e                              shift and go to state 188

state 288

    (127) exp5 -> DIV push_div e_exp pop_operador . exp5
    (126) exp5 -> . MULT push_mult e_exp pop_operador exp5
    (127) exp5 -> . DIV push_div e_exp pop_operador exp5
    (128) exp5 -> . e
    (144) e -> .

    MULT            shift and go to state 186
    DIV             shift and go to state 187
    PLUS            reduce using rule 144 (e -> .)
    MINUS           reduce using rule 144 (e -> .)
    LT              reduce using rule 144 (e -> .)
    GT              reduce using rule 144 (e -> .)
    COMP            reduce using rule 144 (e -> .)
    NOTEQ           reduce using rule 144 (e -> .)
    AND             reduce using rule 144 (e -> .)
    OR              reduce using rule 144 (e -> .)
    SEMICOLON       reduce using rule 144 (e -> .)
    RPAR            reduce using rule 144 (e -> .)
    COMMA           reduce using rule 144 (e -> .)
    RSBRAC          reduce using rule 144 (e -> .)
    TO              reduce using rule 144 (e -> .)

    exp5                           shift and go to state 308
    e                              shift and go to state 188

state 289

    (41) funcion3 -> COMMA ID COLON tipo funcion3 .

    RPAR            reduce using rule 41 (funcion3 -> COMMA ID COLON tipo funcion3 .)


state 290

    (66) condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 . fill
    (68) fill -> . e
    (144) e -> .

    IF              reduce using rule 144 (e -> .)
    ID              reduce using rule 144 (e -> .)
    READ            reduce using rule 144 (e -> .)
    WRITE           reduce using rule 144 (e -> .)
    WHILE           reduce using rule 144 (e -> .)
    FROM            reduce using rule 144 (e -> .)
    RETURN          reduce using rule 144 (e -> .)
    RCBRAC          reduce using rule 144 (e -> .)

    fill                           shift and go to state 309
    e                              shift and go to state 310

state 291

    (69) condicion1 -> ELSE . goto bloque
    (71) goto -> . e
    (144) e -> .

    LCBRAC          reduce using rule 144 (e -> .)

    goto                           shift and go to state 311
    e                              shift and go to state 312

state 292

    (70) condicion1 -> e .

    IF              reduce using rule 70 (condicion1 -> e .)
    ID              reduce using rule 70 (condicion1 -> e .)
    READ            reduce using rule 70 (condicion1 -> e .)
    WRITE           reduce using rule 70 (condicion1 -> e .)
    WHILE           reduce using rule 70 (condicion1 -> e .)
    FROM            reduce using rule 70 (condicion1 -> e .)
    RETURN          reduce using rule 70 (condicion1 -> e .)
    RCBRAC          reduce using rule 70 (condicion1 -> e .)


state 293

    (77) llamada3 -> COMMA expresion llamada3 .

    RPAR            reduce using rule 77 (llamada3 -> COMMA expresion llamada3 .)


state 294

    (64) variable3 -> LSBRAC expresion . RSBRAC

    RSBRAC          shift and go to state 313


state 295

    (79) leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .

    IF              reduce using rule 79 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    ID              reduce using rule 79 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    READ            reduce using rule 79 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    WRITE           reduce using rule 79 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    WHILE           reduce using rule 79 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    FROM            reduce using rule 79 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    RETURN          reduce using rule 79 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)
    RCBRAC          reduce using rule 79 (leer -> READ LPAR variable add_read generar_cuadr RPAR SEMICOLON .)


state 296

    (85) escribir2 -> COMMA escribir1 .

    RPAR            reduce using rule 85 (escribir2 -> COMMA escribir1 .)


state 297

    (88) ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO . bloque return_while
    (47) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 78

    bloque                         shift and go to state 314

state 298

    (91) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO . expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go
    (100) expresion -> . a_exp exp1
    (105) a_exp -> . b_exp exp2
    (109) b_exp -> . c_exp exp3
    (119) c_exp -> . d_exp exp4
    (125) d_exp -> . e_exp exp5
    (131) e_exp -> . LPAR expresion RPAR
    (132) e_exp -> . var_cte
    (133) e_exp -> . variable
    (134) e_exp -> . llamada
    (135) var_cte -> . CTEI ctei
    (136) var_cte -> . CTEF ctef
    (137) var_cte -> . CTESTR ctestr
    (138) var_cte -> . CTEB cteb
    (59) variable -> . ID variable1 variable2
    (72) llamada -> . ID llamada1 LPAR llamada2 RPAR SEMICOLON

    LPAR            shift and go to state 137
    CTEI            shift and go to state 141
    CTEF            shift and go to state 142
    CTESTR          shift and go to state 143
    CTEB            shift and go to state 144
    ID              shift and go to state 145

    variable                       shift and go to state 139
    expresion                      shift and go to state 315
    a_exp                          shift and go to state 132
    b_exp                          shift and go to state 133
    c_exp                          shift and go to state 134
    d_exp                          shift and go to state 135
    e_exp                          shift and go to state 136
    var_cte                        shift and go to state 138
    llamada                        shift and go to state 140

state 299

    (101) exp1 -> OR push_or a_exp pop_operador exp1 .

    SEMICOLON       reduce using rule 101 (exp1 -> OR push_or a_exp pop_operador exp1 .)
    RPAR            reduce using rule 101 (exp1 -> OR push_or a_exp pop_operador exp1 .)
    COMMA           reduce using rule 101 (exp1 -> OR push_or a_exp pop_operador exp1 .)
    RSBRAC          reduce using rule 101 (exp1 -> OR push_or a_exp pop_operador exp1 .)
    TO              reduce using rule 101 (exp1 -> OR push_or a_exp pop_operador exp1 .)


state 300

    (106) exp2 -> AND push_and b_exp pop_operador exp2 .

    OR              reduce using rule 106 (exp2 -> AND push_and b_exp pop_operador exp2 .)
    SEMICOLON       reduce using rule 106 (exp2 -> AND push_and b_exp pop_operador exp2 .)
    RPAR            reduce using rule 106 (exp2 -> AND push_and b_exp pop_operador exp2 .)
    COMMA           reduce using rule 106 (exp2 -> AND push_and b_exp pop_operador exp2 .)
    RSBRAC          reduce using rule 106 (exp2 -> AND push_and b_exp pop_operador exp2 .)
    TO              reduce using rule 106 (exp2 -> AND push_and b_exp pop_operador exp2 .)


state 301

    (110) exp3 -> LT push_lt c_exp pop_operador exp3 .

    AND             reduce using rule 110 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    OR              reduce using rule 110 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    SEMICOLON       reduce using rule 110 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    RPAR            reduce using rule 110 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    COMMA           reduce using rule 110 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    RSBRAC          reduce using rule 110 (exp3 -> LT push_lt c_exp pop_operador exp3 .)
    TO              reduce using rule 110 (exp3 -> LT push_lt c_exp pop_operador exp3 .)


state 302

    (111) exp3 -> GT push_gt c_exp pop_operador exp3 .

    AND             reduce using rule 111 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    OR              reduce using rule 111 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    SEMICOLON       reduce using rule 111 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    RPAR            reduce using rule 111 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    COMMA           reduce using rule 111 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    RSBRAC          reduce using rule 111 (exp3 -> GT push_gt c_exp pop_operador exp3 .)
    TO              reduce using rule 111 (exp3 -> GT push_gt c_exp pop_operador exp3 .)


state 303

    (112) exp3 -> COMP push_comp c_exp pop_operador exp3 .

    AND             reduce using rule 112 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    OR              reduce using rule 112 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    SEMICOLON       reduce using rule 112 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    RPAR            reduce using rule 112 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    COMMA           reduce using rule 112 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    RSBRAC          reduce using rule 112 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)
    TO              reduce using rule 112 (exp3 -> COMP push_comp c_exp pop_operador exp3 .)


state 304

    (113) exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .

    AND             reduce using rule 113 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    OR              reduce using rule 113 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    SEMICOLON       reduce using rule 113 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    RPAR            reduce using rule 113 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    COMMA           reduce using rule 113 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    RSBRAC          reduce using rule 113 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)
    TO              reduce using rule 113 (exp3 -> NOTEQ push_noteq c_exp pop_operador exp3 .)


state 305

    (120) exp4 -> PLUS push_plus d_exp pop_operador exp4 .

    LT              reduce using rule 120 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    GT              reduce using rule 120 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    COMP            reduce using rule 120 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    NOTEQ           reduce using rule 120 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    AND             reduce using rule 120 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    OR              reduce using rule 120 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    SEMICOLON       reduce using rule 120 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    RPAR            reduce using rule 120 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    COMMA           reduce using rule 120 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    RSBRAC          reduce using rule 120 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)
    TO              reduce using rule 120 (exp4 -> PLUS push_plus d_exp pop_operador exp4 .)


state 306

    (121) exp4 -> MINUS push_minus d_exp pop_operador exp4 .

    LT              reduce using rule 121 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    GT              reduce using rule 121 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    COMP            reduce using rule 121 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    NOTEQ           reduce using rule 121 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    AND             reduce using rule 121 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    OR              reduce using rule 121 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    SEMICOLON       reduce using rule 121 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    RPAR            reduce using rule 121 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    COMMA           reduce using rule 121 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    RSBRAC          reduce using rule 121 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)
    TO              reduce using rule 121 (exp4 -> MINUS push_minus d_exp pop_operador exp4 .)


state 307

    (126) exp5 -> MULT push_mult e_exp pop_operador exp5 .

    PLUS            reduce using rule 126 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    MINUS           reduce using rule 126 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    LT              reduce using rule 126 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    GT              reduce using rule 126 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    COMP            reduce using rule 126 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    NOTEQ           reduce using rule 126 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    AND             reduce using rule 126 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    OR              reduce using rule 126 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    SEMICOLON       reduce using rule 126 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    RPAR            reduce using rule 126 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    COMMA           reduce using rule 126 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    RSBRAC          reduce using rule 126 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)
    TO              reduce using rule 126 (exp5 -> MULT push_mult e_exp pop_operador exp5 .)


state 308

    (127) exp5 -> DIV push_div e_exp pop_operador exp5 .

    PLUS            reduce using rule 127 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    MINUS           reduce using rule 127 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    LT              reduce using rule 127 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    GT              reduce using rule 127 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    COMP            reduce using rule 127 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    NOTEQ           reduce using rule 127 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    AND             reduce using rule 127 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    OR              reduce using rule 127 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    SEMICOLON       reduce using rule 127 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    RPAR            reduce using rule 127 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    COMMA           reduce using rule 127 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    RSBRAC          reduce using rule 127 (exp5 -> DIV push_div e_exp pop_operador exp5 .)
    TO              reduce using rule 127 (exp5 -> DIV push_div e_exp pop_operador exp5 .)


state 309

    (66) condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .

    IF              reduce using rule 66 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    ID              reduce using rule 66 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    READ            reduce using rule 66 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    WRITE           reduce using rule 66 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    WHILE           reduce using rule 66 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    FROM            reduce using rule 66 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    RETURN          reduce using rule 66 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)
    RCBRAC          reduce using rule 66 (condicion -> IF LPAR expresion RPAR gotoF bloque condicion1 fill .)


state 310

    (68) fill -> e .

    IF              reduce using rule 68 (fill -> e .)
    ID              reduce using rule 68 (fill -> e .)
    READ            reduce using rule 68 (fill -> e .)
    WRITE           reduce using rule 68 (fill -> e .)
    WHILE           reduce using rule 68 (fill -> e .)
    FROM            reduce using rule 68 (fill -> e .)
    RETURN          reduce using rule 68 (fill -> e .)
    RCBRAC          reduce using rule 68 (fill -> e .)


state 311

    (69) condicion1 -> ELSE goto . bloque
    (47) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 78

    bloque                         shift and go to state 316

state 312

    (71) goto -> e .

    LCBRAC          reduce using rule 71 (goto -> e .)


state 313

    (64) variable3 -> LSBRAC expresion RSBRAC .

    EQ              reduce using rule 64 (variable3 -> LSBRAC expresion RSBRAC .)
    MULT            reduce using rule 64 (variable3 -> LSBRAC expresion RSBRAC .)
    DIV             reduce using rule 64 (variable3 -> LSBRAC expresion RSBRAC .)
    PLUS            reduce using rule 64 (variable3 -> LSBRAC expresion RSBRAC .)
    MINUS           reduce using rule 64 (variable3 -> LSBRAC expresion RSBRAC .)
    LT              reduce using rule 64 (variable3 -> LSBRAC expresion RSBRAC .)
    GT              reduce using rule 64 (variable3 -> LSBRAC expresion RSBRAC .)
    COMP            reduce using rule 64 (variable3 -> LSBRAC expresion RSBRAC .)
    NOTEQ           reduce using rule 64 (variable3 -> LSBRAC expresion RSBRAC .)
    AND             reduce using rule 64 (variable3 -> LSBRAC expresion RSBRAC .)
    OR              reduce using rule 64 (variable3 -> LSBRAC expresion RSBRAC .)
    SEMICOLON       reduce using rule 64 (variable3 -> LSBRAC expresion RSBRAC .)
    RPAR            reduce using rule 64 (variable3 -> LSBRAC expresion RSBRAC .)
    COMMA           reduce using rule 64 (variable3 -> LSBRAC expresion RSBRAC .)
    RSBRAC          reduce using rule 64 (variable3 -> LSBRAC expresion RSBRAC .)
    TO              reduce using rule 64 (variable3 -> LSBRAC expresion RSBRAC .)


state 314

    (88) ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque . return_while
    (90) return_while -> . e
    (144) e -> .

    IF              reduce using rule 144 (e -> .)
    ID              reduce using rule 144 (e -> .)
    READ            reduce using rule 144 (e -> .)
    WRITE           reduce using rule 144 (e -> .)
    WHILE           reduce using rule 144 (e -> .)
    FROM            reduce using rule 144 (e -> .)
    RETURN          reduce using rule 144 (e -> .)
    RCBRAC          reduce using rule 144 (e -> .)

    return_while                   shift and go to state 317
    e                              shift and go to state 318

state 315

    (91) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion . asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go
    (93) asign_exp -> . e
    (144) e -> .

    RPAR            reduce using rule 144 (e -> .)

    asign_exp                      shift and go to state 319
    e                              shift and go to state 320

state 316

    (69) condicion1 -> ELSE goto bloque .

    IF              reduce using rule 69 (condicion1 -> ELSE goto bloque .)
    ID              reduce using rule 69 (condicion1 -> ELSE goto bloque .)
    READ            reduce using rule 69 (condicion1 -> ELSE goto bloque .)
    WRITE           reduce using rule 69 (condicion1 -> ELSE goto bloque .)
    WHILE           reduce using rule 69 (condicion1 -> ELSE goto bloque .)
    FROM            reduce using rule 69 (condicion1 -> ELSE goto bloque .)
    RETURN          reduce using rule 69 (condicion1 -> ELSE goto bloque .)
    RCBRAC          reduce using rule 69 (condicion1 -> ELSE goto bloque .)


state 317

    (88) ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .

    IF              reduce using rule 88 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    ID              reduce using rule 88 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    READ            reduce using rule 88 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    WRITE           reduce using rule 88 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    WHILE           reduce using rule 88 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    FROM            reduce using rule 88 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    RETURN          reduce using rule 88 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)
    RCBRAC          reduce using rule 88 (ciclo_w -> WHILE push_while LPAR expresion RPAR gotoF DO bloque return_while .)


state 318

    (90) return_while -> e .

    IF              reduce using rule 90 (return_while -> e .)
    ID              reduce using rule 90 (return_while -> e .)
    READ            reduce using rule 90 (return_while -> e .)
    WRITE           reduce using rule 90 (return_while -> e .)
    WHILE           reduce using rule 90 (return_while -> e .)
    FROM            reduce using rule 90 (return_while -> e .)
    RETURN          reduce using rule 90 (return_while -> e .)
    RCBRAC          reduce using rule 90 (return_while -> e .)


state 319

    (91) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp . migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go
    (95) migaja -> . e
    (144) e -> .

    RPAR            reduce using rule 144 (e -> .)

    migaja                         shift and go to state 321
    e                              shift and go to state 322

state 320

    (93) asign_exp -> e .

    RPAR            reduce using rule 93 (asign_exp -> e .)


state 321

    (91) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja . push_lt pop_for gotoF RPAR DO bloque update_fill_go
    (115) push_lt -> . e
    (144) e -> .

    RPAR            reduce using rule 144 (e -> .)

    push_lt                        shift and go to state 323
    e                              shift and go to state 221

state 322

    (95) migaja -> e .

    RPAR            reduce using rule 95 (migaja -> e .)


state 323

    (91) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt . pop_for gotoF RPAR DO bloque update_fill_go
    (94) pop_for -> . e
    (144) e -> .

    RPAR            reduce using rule 144 (e -> .)

    pop_for                        shift and go to state 324
    e                              shift and go to state 325

state 324

    (91) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for . gotoF RPAR DO bloque update_fill_go
    (67) gotoF -> . e
    (144) e -> .

    RPAR            reduce using rule 144 (e -> .)

    gotoF                          shift and go to state 326
    e                              shift and go to state 240

state 325

    (94) pop_for -> e .

    RPAR            reduce using rule 94 (pop_for -> e .)


state 326

    (91) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF . RPAR DO bloque update_fill_go

    RPAR            shift and go to state 327


state 327

    (91) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR . DO bloque update_fill_go

    DO              shift and go to state 328


state 328

    (91) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO . bloque update_fill_go
    (47) bloque -> . LCBRAC estatutos RCBRAC

    LCBRAC          shift and go to state 78

    bloque                         shift and go to state 329

state 329

    (91) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque . update_fill_go
    (96) update_fill_go -> . push_plus push1 pop_operfor asign_var
    (123) push_plus -> . e
    (144) e -> .

    IF              reduce using rule 144 (e -> .)
    ID              reduce using rule 144 (e -> .)
    READ            reduce using rule 144 (e -> .)
    WRITE           reduce using rule 144 (e -> .)
    WHILE           reduce using rule 144 (e -> .)
    FROM            reduce using rule 144 (e -> .)
    RETURN          reduce using rule 144 (e -> .)
    RCBRAC          reduce using rule 144 (e -> .)

    update_fill_go                 shift and go to state 330
    push_plus                      shift and go to state 331
    e                              shift and go to state 229

state 330

    (91) ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go .

    IF              reduce using rule 91 (ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go .)
    ID              reduce using rule 91 (ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go .)
    READ            reduce using rule 91 (ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go .)
    WRITE           reduce using rule 91 (ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go .)
    WHILE           reduce using rule 91 (ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go .)
    FROM            reduce using rule 91 (ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go .)
    RETURN          reduce using rule 91 (ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go .)
    RCBRAC          reduce using rule 91 (ciclo_f -> FROM LPAR variable EQ expresion asign_var TO expresion asign_exp migaja push_lt pop_for gotoF RPAR DO bloque update_fill_go .)


state 331

    (96) update_fill_go -> push_plus . push1 pop_operfor asign_var
    (97) push1 -> . e
    (144) e -> .

    IF              reduce using rule 144 (e -> .)
    ID              reduce using rule 144 (e -> .)
    READ            reduce using rule 144 (e -> .)
    WRITE           reduce using rule 144 (e -> .)
    WHILE           reduce using rule 144 (e -> .)
    FROM            reduce using rule 144 (e -> .)
    RETURN          reduce using rule 144 (e -> .)
    RCBRAC          reduce using rule 144 (e -> .)

    push1                          shift and go to state 332
    e                              shift and go to state 333

state 332

    (96) update_fill_go -> push_plus push1 . pop_operfor asign_var
    (98) pop_operfor -> . e
    (144) e -> .

    IF              reduce using rule 144 (e -> .)
    ID              reduce using rule 144 (e -> .)
    READ            reduce using rule 144 (e -> .)
    WRITE           reduce using rule 144 (e -> .)
    WHILE           reduce using rule 144 (e -> .)
    FROM            reduce using rule 144 (e -> .)
    RETURN          reduce using rule 144 (e -> .)
    RCBRAC          reduce using rule 144 (e -> .)

    pop_operfor                    shift and go to state 334
    e                              shift and go to state 335

state 333

    (97) push1 -> e .

    IF              reduce using rule 97 (push1 -> e .)
    ID              reduce using rule 97 (push1 -> e .)
    READ            reduce using rule 97 (push1 -> e .)
    WRITE           reduce using rule 97 (push1 -> e .)
    WHILE           reduce using rule 97 (push1 -> e .)
    FROM            reduce using rule 97 (push1 -> e .)
    RETURN          reduce using rule 97 (push1 -> e .)
    RCBRAC          reduce using rule 97 (push1 -> e .)


state 334

    (96) update_fill_go -> push_plus push1 pop_operfor . asign_var
    (92) asign_var -> . e
    (144) e -> .

    IF              reduce using rule 144 (e -> .)
    ID              reduce using rule 144 (e -> .)
    READ            reduce using rule 144 (e -> .)
    WRITE           reduce using rule 144 (e -> .)
    WHILE           reduce using rule 144 (e -> .)
    FROM            reduce using rule 144 (e -> .)
    RETURN          reduce using rule 144 (e -> .)
    RCBRAC          reduce using rule 144 (e -> .)

    asign_var                      shift and go to state 336
    e                              shift and go to state 277

state 335

    (98) pop_operfor -> e .

    IF              reduce using rule 98 (pop_operfor -> e .)
    ID              reduce using rule 98 (pop_operfor -> e .)
    READ            reduce using rule 98 (pop_operfor -> e .)
    WRITE           reduce using rule 98 (pop_operfor -> e .)
    WHILE           reduce using rule 98 (pop_operfor -> e .)
    FROM            reduce using rule 98 (pop_operfor -> e .)
    RETURN          reduce using rule 98 (pop_operfor -> e .)
    RCBRAC          reduce using rule 98 (pop_operfor -> e .)


state 336

    (96) update_fill_go -> push_plus push1 pop_operfor asign_var .

    IF              reduce using rule 96 (update_fill_go -> push_plus push1 pop_operfor asign_var .)
    ID              reduce using rule 96 (update_fill_go -> push_plus push1 pop_operfor asign_var .)
    READ            reduce using rule 96 (update_fill_go -> push_plus push1 pop_operfor asign_var .)
    WRITE           reduce using rule 96 (update_fill_go -> push_plus push1 pop_operfor asign_var .)
    WHILE           reduce using rule 96 (update_fill_go -> push_plus push1 pop_operfor asign_var .)
    FROM            reduce using rule 96 (update_fill_go -> push_plus push1 pop_operfor asign_var .)
    RETURN          reduce using rule 96 (update_fill_go -> push_plus push1 pop_operfor asign_var .)
    RCBRAC          reduce using rule 96 (update_fill_go -> push_plus push1 pop_operfor asign_var .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VOID in state 73 resolved as shift
WARNING: shift/reduce conflict for INT in state 73 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 73 resolved as shift
WARNING: shift/reduce conflict for STRING in state 73 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 73 resolved as shift
WARNING: shift/reduce conflict for ID in state 75 resolved as shift
WARNING: shift/reduce conflict for VOID in state 83 resolved as shift
WARNING: shift/reduce conflict for INT in state 83 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 83 resolved as shift
WARNING: shift/reduce conflict for STRING in state 83 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 83 resolved as shift
WARNING: shift/reduce conflict for ID in state 84 resolved as shift
WARNING: shift/reduce conflict for VOID in state 107 resolved as shift
WARNING: shift/reduce conflict for INT in state 107 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 107 resolved as shift
WARNING: shift/reduce conflict for STRING in state 107 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 107 resolved as shift
WARNING: shift/reduce conflict for VOID in state 110 resolved as shift
WARNING: shift/reduce conflict for INT in state 110 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 110 resolved as shift
WARNING: shift/reduce conflict for STRING in state 110 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 110 resolved as shift
WARNING: reduce/reduce conflict in state 112 resolved using rule (metodos -> e)
WARNING: rejected rule (funcion -> e) in state 112
WARNING: reduce/reduce conflict in state 165 resolved using rule (texto -> CTESTR)
WARNING: rejected rule (e -> <empty>) in state 165
